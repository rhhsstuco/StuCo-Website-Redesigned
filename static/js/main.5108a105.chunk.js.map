{"version":3,"sources":["assets/logo.svg","assets/clubBackground.png","utils/theme.ts","utils/contexts.ts","components/Navigation.tsx","components/footer-components/Resources.tsx","components/footer-components/CopyrightItem.tsx","components/footer-components/SocialMediaItem.tsx","components/footer-components/FooterRoutes.tsx","components/footer-components/Footer.tsx","components/ScrollToTop.tsx","components/loading-components/ThreeDotsLoader.tsx","components/loading-components/LoadingScreen.tsx","utils/hooks.tsx","components/home-components/CountDownTimer.tsx","components/Heading.tsx","components/Collapsable.tsx","utils/animation.ts","utils/functions.ts","pages/Home.tsx","components/TranslucentRectangle.tsx","components/loading-components/FilledSquareLoader.tsx","components/ScrollToTopButton.tsx","pages/Events.tsx","components/club-popup/ClubInfoItem.tsx","components/club-popup/ClubDescriptionItem.tsx","components/club-popup/ClubPhoto.tsx","components/club-popup/ClubPopup.tsx","pages/Clubs.tsx","pages/Calendar.tsx","pages/Map.tsx","components/gallery-viewer/ViewerPhoto.tsx","components/gallery-viewer/ViewerButton.tsx","components/loading-components/CircleLoader.tsx","components/gallery-viewer/PhotoViewer.tsx","pages/Gallery.tsx","components/media-components/VideoItem.tsx","pages/Media.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","theme","colors","text","light","darkSlate","darkGray","navbar","background","dark","darkest","black","overlay","faqOverlay","darkOverlay","primary","secondary","footer","yellow","beige","imageOverlayForText","imageGrayOverlay","imageDarkGrayOverlay","searchBox","lightGray","fonts","heading","body","fontSizes","small","event","bodySmall","bodyLarge","footerBig","bodyPadding","pt","pb","px","links","nav","py","textTransform","letterSpacing","InfoContext","createContext","events","countdown","members","recents","upcomingMiniEvents","clubs","faq","resources","gallery","media","aboutStuco","clubHighlights","labelledPhotos","TransparentCtx","transparent","SetTransparentCtx","setTransparent","undefined","NavItem","route","extraStyling","children","style","color","fontFamily","display","textDecoration","order","width","textAlign","to","sx","Toggle","toggle","onClick","toggleStyle","fontSize","mr","routes","calendar","map","Navigation","useState","setToggle","navItemsHeight","setNavItemsHeight","navItemsRef","useRef","navRef","useContext","useEffect","scrollEvent","clickEvent","e","target","current","window","addEventListener","removeEventListener","ro","ResizeObserver","entries","forEach","entry","height","contentRect","observe","disconnect","transparentStyle","backgroundColor","backdropFilter","wrapperStyle","justifyContent","flexDirection","transition","alignItems","position","zIndex","boxShadow","flexWrap","navItemsWrapper","transform","overflow","logoStyle","justifySelf","marginRight","marginLeft","cursor","ref","src","logo","alt","navItemsStyle","outlineOffset","outlineWidth","outlineColor","outlineStyle","Object","keys","toUpperCase","key","getNavItems","Resources","textStyling","allResources","headerTextStyle","resourceStyle","ml","my","resourceContainerStyle","margin","listStyle","listStyleType","pl","pr","getResourceColumn","linkStyle","mx","resource","resourceName","href","resourceLink","mb","leftResources","slice","Math","ceil","length","rightResources","className","getAllResources","CopyrightItem","textStyle","copyrightTextStyle","mt","Date","getFullYear","size","SocialMediaItem","name","link","pictureLink","paddingX","imageStyle","borderRadius","iconStyle","renderIcon","FooterRoutes","half","leftRoutes","rightRoutes","routesStyle","getRouteItems","navStyle","socialMediaStyle","socialMediaList","email","image","instagram","facebook","twitter","Footer","footerStyle","top","bottom","whiteSpace","left","sitename","right","ScrollToTop","withRouter","scroll","behavior","Fragment","ThreeDotsLoader","type","LoadingScreen","isMounted","unmountSpeed","hasLoader","loadingText","loadingImage","titleTextStyle","innerDivStyle","centeredImageStyle","opacity","toString","useUnmountingDelay","shouldBeMounted","delayTime","shouldRender","setShouldRender","timerID","setTimeout","clearTimeout","useToggleNavColour","yOffset","scrollEventHandler","console","log","document","scrollTop","documentElement","CountDownTimer","date","timer","setTimer","formattedTime","setFormattedTime","timerWidth","setTimerWidth","wrapperRef","getFormattedTime","id","getTime","getTimezoneOffset","getBoundingClientRect","timeInMilli","days","floor","hours","minutes","seconds","borderColor","borderWidth","borderStyle","TimeUnit","number","numDigit","textSize","numSize","padStart","Heading","alignment","underline","fontWeight","lineStyle","Collapsable","title","titleStyle","collapsed","childrenStyle","collapseTime","childrenCollapsed","setChildrenCollapsed","childrenHeight","setChildrenHeight","childrenRef","prevHeight","textOverflow","verticalAlign","fill","padding","transitionTime","diff","abs","getHeightDiff","childrenWrapperStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","overflowY","transitionDuration","defaultTitleStyle","React","Children","count","fadeIn","fadeOut","fadeInPartially","popIn","getImageUrl","imageId","round","hex","alpha","randNum","min","max","random","randInt","disallowScrolling","topPos","allowScrolling","topY","scrollTo","parseInt","Main","countdownEvent","buttonStyle","fontVariantCaps","eventName","Home","toggleNavUnsub","innerHeight","backRgba","replace","hexNum","r","g","b","hexToRgb","a","TranslucentRectangle","lengthX","lengthY","minLengthY","rectStyle","minHeight","hasOwnProperty","FilledSquareLoader","loaderWidth","loaderHeight","loaderColor","isTransparent","loadingSquareStyle","ScrollToTopButton","showScrollButton","setShowScrollButton","shouldRenderButton","handleScroll","useCallback","pageYOffset","scrollToTop","animationName","animationDuration","renderScrollButton","EventHeading","textLocation","extraHeaderStyling","extraTextStyling","EventPhoto","photoID","photoLocation","imgWidth","setImgWidth","loading","setLoading","renderLoadingSquare","imageRef","maxWidth","maxHeight","animation","objectFit","rectStyling","displayLoadingSquare","onLoad","EventButton","buttonText","buttonLink","extraButtonStyling","EventInfoItem","eventDetails","textWrapperStyle","descriptionStyle","wordWrap","lineHeight","dateStyle","buttonContainerStyle","description","EventItem","imgHeight","setImgHeight","eventItemRef","currentEventDetails","rectangleBarrierStyling","photoId","Events","eventInfo","overflowX","index","extraRectStyling","ClubInfoItem","clubContactInfo","ClubInfoItemDimensions","contactInfoWrapperStyle","flex","marginY","wordBreak","colStyle","leftColStyle","rightColStyle","info","formattedTitle","value","getAllContactInfo","ClubDescriptionItem","clubname","ClubDescriptionDimensions","titleWrapperStyle","clipPath","ClubPhoto","photoStyle","handleLoading","ClubPhotoDimensions","ClubPopup","closeHandler","clubInfo","setWidth","clubPhotoRef","overlayStyle","mainWrapperStyle","photoContainerStyle","meetingDate","meetingDay","meetingFreq","meetingFrequency","meetingLoc","meetingLocation","currentTarget","BgTriangleProp","x1","y1","x2","y2","x3","y3","getStyle","getClipPath","this","Clubs","setHeight","query","setQuery","isPopup","setIsPopup","popupClub","setPopupClub","pageRef","bgRectWidth","bgTriangleProp","clientHeight","backgroundImgStyle","searchBoxStyle","n","outline","bg","searchBoxWrapperStyle","isFirstBreakpoint","innerWidth","clubBackground","i","Array","from","push","getTransluteRects","onChange","placeholder","categories","club","category","sort","localeCompare","titleComponent","getClubs","getClubList","searchStr","results","filter","toLowerCase","includes","displaySearchResults","imageUrl","backgroundImage","backgroundSize","getTriangleImages","scrollY","renderClubPopup","CCalendar","Map","loadingFirstImage","setLoadingFirstImage","loadingSecondImage","setLoadingSecondImage","allLabelledPhotos","firstFloorPhoto","find","photoLabel","secondFloorPhoto","backgroundStyle","imageDivStyle","handleLoad","setLoadingFunction","onError","ViewerPhoto","loadHandler","orientation","mainImageLimit","setMainImageLimit","mainImageRefDiv","mainImageContainerStyle","fetchMainImageUrl","ViewerButton","imageSrc","actionHandler","backgroundRepeat","CircleLoader","PhotoViewer","photos","startIndex","setIndex","overlayWidth","setOverlayWidth","overlayReferenceDiv","xTouchLoc","yTouchLoc","incrementIdx","decrementIdx","handleClosing","reactToKeystrokes","code","initializeTouch","touchLocations","touches","clientX","clientY","reactToSwipe","xOld","yOld","changedTouches","oldPos","newPos","xDiff","x","yDiff","y","detectSwipeDirection","handleLoadingState","checkIfImagesLoaded","refDiv","imgElements","querySelectorAll","complete","renderExitButton","arrowStyle","overlayContainerStyle","bothButtonStyle","leftButtonStyle","rightButtonStyle","overscrollBehavior","renderSpinner","GalleryPhoto","photo","initializeDisplay","extraPhotoStyle","photoUrl","photoNum","Gallery","galleryPhotos","viewIndex","setViewIndex","showViewer","setShowViewer","numColumns","setNumColumns","imageWrapperRef","imageWidth","setImageWidth","calculateNumCols","galleryHeight","useMemo","heightBuffer","totalHeight","reduce","acc","cur","photoColumnContainerStyle","alignContent","curIdx","photoData","imgMinWidth","reverse","VideoItem","videoWidth","setVideoWidth","videoWidthRefDiv","frameBorder","allow","allowFullScreen","Media","allMedia","innerWrapperStyle","videoDivStyle","descriptionDivStyle","mediaItem","mediaLink","getAllVideoItems","memo","setInfo","showLoading","setShowLoading","shouldRenderLoading","getData","fetch","method","mode","headers","accept","res","json","data","Provider","path","App","transparentCtx","setTransparentCtx","MemoMain","Boolean","location","hostname","match","WebFont","load","google","families","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5108a105.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.244fe6ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/clubBackground.fdd1f9d6.png\";","//breakpoints: 640px, 832px,\r\nexport const FIRST_BREAKPOINT = 640;\r\nexport const SECOND_BREAKPOINT = 832;\r\nexport const theme = {\r\n  colors: {\r\n    //halloween\r\n    // text: {\r\n    //   light: '#fffbf0',\r\n    //   darkSlate: '#33110E',\r\n    //   darkGray: '#684B42',\r\n    // },\r\n    // navbar: '#5F1003',\r\n    // background: {\r\n    //   light: '#DDD1AE',\r\n    //   dark: '#5F1003',\r\n    //   darkest: '#44131188',\r\n    //   black: '#000000',\r\n    //   overlay: '#DDD1AE29',\r\n    //   faqOverlay: '#FFF9E899',\r\n    //   darkOverlay: '#5F1003',\r\n    // },\r\n    // primary: '#A94915',\r\n    // secondary: '#684B42',\r\n    // footer: '#33110E',\r\n    // yellow: '#CF7820',\r\n    // imageOverlayForText: '#FFFFFFD9',\r\n    // imageGrayOverlay: '#8B8B8BA6',\r\n    // imageDarkGrayOverlay: '#4D4D4DA6',\r\n    // searchBox: {\r\n    //   darkGray: '#707070',\r\n    //   lightGray: '#E1E1E1',\r\n    // },\r\n    text: {\r\n      light: '#FFFFFF',\r\n      darkSlate: '#2F4F4F',\r\n      darkGray: '#343434',\r\n    },\r\n    navbar: '#709C74',\r\n    background: {\r\n      light: '#FFFFFF',\r\n      dark: '#709C74',\r\n      darkest: '#00000088',\r\n      black: '#000000',\r\n      overlay: '#93CCBE29',\r\n      faqOverlay: '#93CCBE29',\r\n      darkOverlay: '#709C74',\r\n    },\r\n    primary: '#709C74',\r\n    secondary: '#000000',\r\n    footer: '#709C74',\r\n    yellow: '#FFF08E',\r\n    beige: \"#F3EACC\",\r\n    imageOverlayForText: '#FFFFFFD9',\r\n    imageGrayOverlay: '#8B8B8BA6',\r\n    imageDarkGrayOverlay: '#4D4D4DA6',\r\n    searchBox: {\r\n      darkGray: '#707070',\r\n      lightGray: '#E1E1E1',\r\n    },\r\n  },\r\n  fonts: {\r\n    heading: 'Open Sans: a9',\r\n    body: 'Open Sans: a9',\r\n  },\r\n  fontSizes: {\r\n    heading: {\r\n      primary: [30, 40],\r\n      small: [20, 30],\r\n      event: [14, 16, 24, 30, 40],\r\n    },\r\n    body: [13, 14, 16, 20, 24, 28, 32],\r\n    event: [10, 12, 14, 16, 20, 24, 32],\r\n    bodySmall: [11, 14, 16],\r\n    bodyLarge: [20, 24, 28],\r\n    footer: [11, 12, 14, 16],\r\n    footerBig: [14, 16, 20, 24],\r\n  },\r\n  bodyPadding: {\r\n    pt: '7%',\r\n    pb: '10%',\r\n    px: '7%',\r\n  },\r\n  links: {\r\n    nav: {\r\n      px: 2,\r\n      py: 1,\r\n      textTransform: 'uppercase',\r\n      letterSpacing: '0.2em',\r\n    },\r\n  },\r\n};","import {createContext} from 'react';\r\nimport {\r\n  Event,\r\n  Member,\r\n  Recent,\r\n  UpcomingMiniEvents,\r\n  Club,\r\n  FAQ,\r\n  Resources,\r\n  Photo,\r\n  CountDown,\r\n  AboutStuco,\r\n  ClubHighlight,\r\n  LabelledPhotos,\r\n  Media\r\n} from './interfaces';\r\n\r\nexport interface IInfoContext {\r\n  events: Event[];\r\n  countdown: CountDown[];\r\n  members: Member[];\r\n  recents: Recent[];\r\n  upcomingMiniEvents: UpcomingMiniEvents[];\r\n  clubs: Club[];\r\n  faq: FAQ[];\r\n  resources: Resources[];\r\n  gallery: Photo[];\r\n  media: Media[];\r\n  aboutStuco: AboutStuco[];\r\n  clubHighlights: ClubHighlight[];\r\n  labelledPhotos: LabelledPhotos[];\r\n}\r\n\r\nexport const InfoContext = createContext<IInfoContext>({\r\n  events: [],\r\n  countdown: [],\r\n  members: [],\r\n  recents: [],\r\n  upcomingMiniEvents: [],\r\n  clubs: [],\r\n  faq: [],\r\n  resources: [],\r\n  gallery: [],\r\n  media: [],\r\n  aboutStuco: [],\r\n  clubHighlights: [],\r\n  labelledPhotos: [],\r\n});\r\n\r\nexport interface ITransparentCtx {\r\n  transparent: boolean;\r\n}\r\n\r\nexport interface ISetTransparentCtx {\r\n  setTransparent: React.Dispatch<React.SetStateAction<boolean>>|undefined;\r\n  // setTransparent: (transparent: boolean) => void | undefined;\r\n}\r\n\r\nexport const TransparentCtx = createContext<ITransparentCtx>({\r\n  transparent: true,\r\n});\r\n\r\nexport const SetTransparentCtx = createContext<ISetTransparentCtx>({\r\n  setTransparent: undefined,\r\n});\r\n\r\n","/** @jsx jsx */\r\nimport React, {useState, useEffect, useRef, useContext} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\nimport {FaBars, FaTimes} from 'react-icons/fa';\r\nimport logo from '../assets/logo.svg';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { TransparentCtx, ITransparentCtx } from '../utils/contexts';\r\n\r\n//TODO: mmmake diferent colorus\r\ninterface LinkProps {\r\n  route: string;\r\n  text: string;\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\nexport const NavItem: React.FC<LinkProps> = ({\r\n  route,\r\n  text,\r\n  extraStyling,\r\n  children,\r\n}) => {\r\n  const style: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    fontFamily: theme.fonts.body,\r\n    display: 'block',\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      background: theme.colors.footer,\r\n      color: theme.colors.text.light,\r\n    },\r\n    order: 2,\r\n    px: 20,\r\n    py: [2, 2, 3],\r\n    width: ['100%', '100%', 'auto'],\r\n    textAlign: 'center',\r\n  };\r\n\r\n  return (\r\n    <Link to={'/' + route} sx={{...style, ...extraStyling}}>\r\n      {text}\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\ninterface ToggleProps {\r\n  toggle: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst Toggle: React.FC<ToggleProps> = ({toggle, onClick}) => {\r\n  const toggleStyle: SxStyleProp = {\r\n    order: 1,\r\n    display: ['block', 'block', 'none'],\r\n    fontSize: '1.3em',\r\n    color: theme.colors.text.light,\r\n    mr: '5%',\r\n  };\r\n\r\n  if (toggle) {\r\n    return <FaTimes sx={toggleStyle} onClick={onClick} />;\r\n  }\r\n  return <FaBars sx={toggleStyle} onClick={onClick} />;\r\n};\r\n\r\n// Moving routes out of Navigation so Footer can access them\r\nexport interface NavRoutes {\r\n  events: string;\r\n  clubs: string;\r\n  calendar: string;\r\n  map: string;\r\n  gallery: string;\r\n  media: string;\r\n  // faq: string;\r\n  //about: string;\r\n}\r\n\r\nexport const routes = {\r\n  //key is the route name, value is displayed text\r\n  events: 'Events',\r\n  clubs: 'Clubs',\r\n  calendar: 'Calendar',\r\n  map: 'Map',\r\n  gallery: 'Gallery',\r\n  media: 'Media',\r\n  // faq: 'FAQ',\r\n  // about: 'About Us',\r\n};\r\n\r\nexport const Navigation: React.FC = () => {\r\n  const [toggle, setToggle] = useState<boolean>(false);\r\n  const [navItemsHeight, setNavItemsHeight] = useState<number>(null);\r\n\r\n  const navItemsRef = useRef<HTMLDivElement>(null);\r\n  const navRef = useRef<HTMLDivElement>(null);\r\n  const {transparent} = useContext<ITransparentCtx>(TransparentCtx);\r\n\r\n  useEffect(() => {\r\n    const scrollEvent = () => setToggle(false);\r\n    const clickEvent = (e) => {\r\n      if (toggle && e.target !== navRef.current) {\r\n        setToggle(false);\r\n      }\r\n    };\r\n    window.addEventListener('scroll', scrollEvent);\r\n    window.addEventListener('click', clickEvent);\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollEvent);\r\n      window.removeEventListener('click', clickEvent);\r\n    };\r\n  }, [toggle]);\r\n\r\n  useEffect(() => {\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        const {height} = entry.contentRect;\r\n        // console.log(height);\r\n        setNavItemsHeight(height);\r\n      });\r\n    });\r\n    ro.observe(navItemsRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  const getNavItems = () => {\r\n    const outlineWidth = 1.5;\r\n    const navItemsStyle: SxStyleProp = {\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n        textDecoration: 'none',\r\n        color: theme.colors.text.light,\r\n        backgroundColor: \"#709C74\",\r\n        outlineOffset: -outlineWidth,\r\n        outlineWidth: transparent ? outlineWidth : 0,\r\n        outlineColor: theme.colors.footer,\r\n        outlineStyle: 'solid',\r\n      },\r\n    };\r\n\r\n    return Object.keys(routes).map((route) => {\r\n      return (\r\n        <NavItem\r\n          route={route}\r\n          text={routes[route].toUpperCase()}\r\n          key={routes[route]}\r\n          extraStyling={navItemsStyle}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const transparentStyle: SxStyleProp = {\r\n    backgroundColor: [theme.colors.navbar],\r\n    backdropFilter: ['blur(4px)', undefined],\r\n  };\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row' as 'row',\r\n    background: transparent ? 'transparent' : theme.colors.navbar,\r\n    transition: 'background-color .5s ease',\r\n    alignItems: 'center',\r\n    position: 'fixed',\r\n    zIndex: 10,\r\n    boxShadow: '0 1px 5px ' + theme.colors.footer,\r\n    flexWrap: 'wrap',\r\n  };\r\n\r\n  const navItemsWrapper: SxStyleProp = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    order: 2,\r\n    transform: [\r\n      toggle ? 'translateY(0)' : 'translateY(-100%)',\r\n      toggle ? 'translateY(0)' : 'translateY(-100%)',\r\n      'translateY(0)',\r\n    ],\r\n    transition: '.7s',\r\n    overflow: 'hidden',\r\n    height: [toggle ? navItemsHeight : 0, toggle ? navItemsHeight : 0, 'auto'],\r\n    zIndex: 0,\r\n    width: ['100%', '100%', 'auto'],\r\n  };\r\n\r\n  const logoStyle: SxStyleProp = {\r\n    order: 0,\r\n    justifySelf: 'flex-start',\r\n    marginRight: 'auto',\r\n    marginLeft: ['5%', '10%'],\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n    height: '3.5rem',\r\n    zIndex: 1,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      sx={transparent ? {...wrapperStyle, ...transparentStyle} : wrapperStyle}\r\n      ref={navRef}\r\n    >\r\n      <Link to=\"/\" sx={logoStyle}>\r\n        <img src={logo} alt=\"\" sx={logoStyle} />\r\n      </Link>\r\n      <Toggle toggle={toggle} onClick={() => setToggle((toggle) => !toggle)} />\r\n      <div sx={navItemsWrapper}>\r\n        <div\r\n          ref={navItemsRef}\r\n          children={getNavItems()}\r\n          sx={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            width: ['100%', '100%', 'auto'],\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","/** @jsx jsx */\r\nimport React, {useContext} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {theme} from '../../utils/theme';\r\nimport {IInfoContext, InfoContext} from '../../utils/contexts';\r\nimport {Resources as ResourcesInterface} from '../../utils/interfaces';\r\n\r\n/** The props for the `Resources` component. */\r\nexport interface ResourcesProps {\r\n  /** Extra css for the text in each resource. */\r\n  textStyling: SxStyleProp;\r\n}\r\n\r\n/**\r\n * Constructs a `Resources` component For all the resources present\r\n * in the website.\r\n *\r\n * @returns a div containing all the resources, formatted.\r\n */\r\nexport const Resources: React.FC<ResourcesProps> = ({textStyling}) => {\r\n  const allResources: ResourcesInterface[] = useContext<IInfoContext>(\r\n    InfoContext,\r\n  ).resources;\r\n\r\n  // Styles ---------------------------------------------------------\r\n  // TOOD: this is basically the same as FooterRoutes\r\n  // -- do smth about this? or is this good repeat/abstraction?\r\n  const mainWrapperStyle: SxStyleProp = {\r\n    px: '5%',\r\n  };\r\n  const headerWrapperStyle: SxStyleProp = {\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    mb: '1.3em',\r\n  };\r\n  const headerTextStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.footerBig,\r\n    color: theme.colors.text.light,\r\n  };\r\n  const resourceStyle: SxStyleProp = {\r\n    ...textStyling,\r\n\r\n    width: '50%',\r\n    ml: 0,\r\n    mr: 'auto',\r\n    my: 0,\r\n  };\r\n  const resourceContainerStyle: SxStyleProp = {\r\n    width: '100%',\r\n    margin: 'auto',\r\n\r\n    display: 'flex',\r\n    flexDirection: ['column', 'row'],\r\n  };\r\n  const listStyle: SxStyleProp = {\r\n    listStyleType: 'none',\r\n    pl: 0,\r\n    pr: '10%',\r\n    ml: 0,\r\n    my: 0,\r\n  };\r\n\r\n  // Functions -- ---------------------------------------------------\r\n  /**\r\n   * Retrieves all the resources and splits them, then formats them\r\n   * and returns the formatted ReactElement.\r\n   * @returns the formatted resource list.\r\n   */\r\n  const getAllResources = () => {\r\n    // Split the routes in half to format links correctly\r\n    const leftResources = allResources.slice(\r\n      0,\r\n      Math.ceil(allResources.length / 2),\r\n    );\r\n    const rightResources = allResources.slice(\r\n      Math.ceil(allResources.length / 2),\r\n    );\r\n\r\n    return (\r\n      <div className=\"row\" sx={resourceContainerStyle}>\r\n        <div sx={resourceStyle}>\r\n          {/* first column of links goes here */}\r\n          <ul sx={listStyle}>{getResourceColumn(leftResources)}</ul>\r\n        </div>\r\n        <div sx={resourceStyle}>\r\n          {/* second column of links goes here */}\r\n          <ul sx={listStyle}>{getResourceColumn(rightResources)}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Renders/returns a group of resources as a column.\r\n   * @param resources - A column of resources to be rendered.\r\n   * @returns the column of formatted resource elements.\r\n   */\r\n  const getResourceColumn = (resources: ResourcesInterface[]) => {\r\n    const linkStyle: SxStyleProp = {\r\n      px: 0,\r\n      py: '2px',\r\n      mx: 0,\r\n      color: theme.colors.text.light,\r\n\r\n      display: 'inline',\r\n      '&:hover': {\r\n        // color: theme.colors.primary,\r\n        textDecoration: 'none',\r\n      },\r\n    };\r\n\r\n    return resources.map((resource) => {\r\n      return (\r\n        <li key={resource.resourceName}>\r\n          <a href={resource.resourceLink} sx={linkStyle}>\r\n            {resource.resourceName}\r\n          </a>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={mainWrapperStyle}>\r\n      {/* the header*/}\r\n      <div sx={headerWrapperStyle}>\r\n        <h2 sx={headerTextStyle}>Resources</h2>\r\n      </div>\r\n      {getAllResources()}\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {FaGithub} from 'react-icons/fa';\r\n\r\nimport {theme} from '../../utils/theme';\r\n\r\n/** The props for a `CopyrightItem`. */\r\nexport interface CopyrightItemProps {\r\n  /** Extra css for the text. */\r\n  textStyle: SxStyleProp;\r\n}\r\n\r\n/**\r\n * Constructs a `CopyrightItem`, a section of text to deal with the\r\n * copyright sign, date, and info, as well a link to this repo.\r\n *\r\n * @param props the props for this component.\r\n * @returns     a `CopyrightItem` component.\r\n */\r\nexport const CopyrightItem: React.FC<CopyrightItemProps> = ({textStyle}) => {\r\n  const linkStyle: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    mb: '0.25em',\r\n\r\n    '&:hover': {\r\n      // color: theme.colors.primary,\r\n      textDecoration: 'none',\r\n    },\r\n  };\r\n\r\n  const copyrightTextStyle: SxStyleProp = {\r\n    ...textStyle,\r\n    my: 'auto',\r\n    // Add space above copyright if rearranged\r\n    mt: ['1em', 0],\r\n  };\r\n  const imageStyle: SxStyleProp = {mr: '0.5em', mb: '0.25em'};\r\n\r\n  return (\r\n    <p sx={copyrightTextStyle}>\r\n      &copy; RHHS Student Council {new Date().getFullYear()}\r\n      &nbsp; |&nbsp;\r\n      <a\r\n        href=\"https://github.com/shari09/StuCo-Website-Redesigned\"\r\n        sx={linkStyle}\r\n      >\r\n        <FaGithub sx={imageStyle} size={20} />\r\n        Source\r\n      </a>\r\n    </p>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {theme} from '../../utils/theme';\r\n\r\n/** Props for a `SocialMediaItem` component. */\r\nexport interface SocialMediaItemProps {\r\n  name: string;\r\n  /** The redirect link. */\r\n  link: string;\r\n  /** A url to the picture link, or a ReactElement (normally a React Icon) */\r\n  pictureLink: string | ReactElement;\r\n}\r\n\r\n/**\r\n * Constructs a `SocialMediaItem`, which is a component and container\r\n * for a redirect link to a specific social media as well as an\r\n * associated icon.\r\n *\r\n * @example\r\n * <SocialMediaItem\r\n *   name={\"Instagram\"}\r\n *   link={\"https://www.instagram.com/rhhs_stuco/\"}\r\n *   pictureLink={<FaInstagramSquare />}\r\n * />\r\n *\r\n * @param props The props for this component.\r\n * @returns     A `SocialMediaItem` component.\r\n */\r\nexport const SocialMediaItem: React.FC<SocialMediaItemProps> = ({\r\n  name,\r\n  link,\r\n  pictureLink,\r\n}) => {\r\n  const linkStyle: SxStyleProp = {\r\n    paddingX: '0.5em',\r\n  };\r\n\r\n  const renderIcon = () => {\r\n    const imageStyle: SxStyleProp = {\r\n      borderRadius: '50%',\r\n      '&:hover': {},\r\n    };\r\n\r\n    const iconStyle = {\r\n      display: 'inline',\r\n      color: theme.colors.background.light,\r\n\r\n      height: '100%',\r\n      width: 'auto',\r\n\r\n      ...imageStyle,\r\n    };\r\n\r\n    if (typeof pictureLink == 'string') {\r\n      return <img sx={imageStyle} src={pictureLink} alt={name} />;\r\n    }\r\n\r\n    return <div sx={iconStyle}>{pictureLink}</div>;\r\n  };\r\n\r\n  return (\r\n    <a href={link} sx={linkStyle}>\r\n      {renderIcon()}\r\n    </a>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {NavItem, NavRoutes} from '../Navigation';\r\n\r\nimport {theme} from '../../utils/theme';\r\n\r\n/** Props for a `FooterRoutes` component. */\r\nexport interface FooterRoutesProps {\r\n  /** Routes to all the other locations. */\r\n  routes: NavRoutes;\r\n  /** Extra css for the text. */\r\n  textStyle?: SxStyleProp;\r\n}\r\n\r\n/**\r\n * Constructs a `FooterRoutes` component, which gets all footer routes,\r\n * splits them in half, and renders the routes in a formatted style.\r\n *\r\n * @example\r\n * <FooterRoutes\r\n *   routes={routes}\r\n *   textStyle={textStyle}\r\n * />\r\n * @param props The props for this component\r\n * @return      all routes in a container element.\r\n */\r\nexport const FooterRoutes: React.FC<FooterRoutesProps> = ({\r\n  routes,\r\n  textStyle,\r\n}): ReactElement => {\r\n  // Split the routes in half to format links correctly\r\n  const half: number = Math.ceil(Object.keys(routes).length / 2);\r\n  const leftRoutes: string[][] = Object.entries(routes).slice(\r\n    0,\r\n    half,\r\n  ) as string[][];\r\n  const rightRoutes: string[][] = Object.entries(routes).slice(\r\n    half,\r\n  ) as string[][];\r\n\r\n  // Styles ---------------------------------------------------------\r\n  const mainWrapperStyle: SxStyleProp = {\r\n    px: '5%',\r\n  };\r\n  const headerWrapperStyle: SxStyleProp = {\r\n    width: '100%',\r\n    textAlign: 'right',\r\n    mb: '1.3em',\r\n  };\r\n  const headerTextStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.footerBig,\r\n    color: theme.colors.text.light,\r\n  };\r\n\r\n  const routesStyle: SxStyleProp = {\r\n    ...textStyle,\r\n\r\n    // Push to the right or left depending on mobile or not\r\n    ml: 'auto',\r\n    mr: 0,\r\n    width: '50%',\r\n  };\r\n  const routeContainerStyle: SxStyleProp = {\r\n    width: '100%',\r\n    margin: 'auto',\r\n\r\n    display: 'flex',\r\n    flexDirection: ['column', 'row'],\r\n  };\r\n  const listStyle: SxStyleProp = {\r\n    textAlign: 'right',\r\n\r\n    listStyleType: 'none',\r\n    pl: '10%',\r\n    pr: 0,\r\n    mr: 0,\r\n    my: 0,\r\n  };\r\n  // Functions -- ---------------------------------------------------\r\n  /**\r\n   * Convert a list of routes to a list of actual NavItem elements.\r\n   * @param routes - All the routes in this list of links.\r\n   * @returns a list of NavItem elements to the desired route.\r\n   */\r\n  const getRouteItems = (routes: string[][]): ReactElement[] => {\r\n    const navStyle: SxStyleProp = {\r\n      px: 0,\r\n      py: '2px',\r\n      mx: 0,\r\n\r\n      display: 'inline',\r\n      '&:hover': {\r\n        // color: theme.colors.primary,\r\n        textDecoration: 'none',\r\n      },\r\n    };\r\n\r\n    return routes.map((route) => {\r\n      return (\r\n        <li key={route[1]}>\r\n          <NavItem route={route[0]} text={route[1]} extraStyling={navStyle} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={mainWrapperStyle}>\r\n      <div sx={headerWrapperStyle}>\r\n        <h2 sx={headerTextStyle}>Navigation</h2>\r\n      </div>\r\n\r\n      <div className=\"row\" sx={routeContainerStyle}>\r\n        <div sx={routesStyle}>\r\n          <ul sx={listStyle}>{getRouteItems(leftRoutes)}</ul>\r\n        </div>\r\n        <div sx={routesStyle}>\r\n          <ul sx={listStyle}>{getRouteItems(rightRoutes)}</ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {\r\n  FaEnvelopeSquare,\r\n  FaFacebookSquare,\r\n  FaTwitterSquare,\r\n  FaInstagramSquare,\r\n} from 'react-icons/fa';\r\n\r\nimport {routes} from '../Navigation';\r\nimport {Resources} from './Resources';\r\nimport {CopyrightItem} from './CopyrightItem';\r\nimport {SocialMediaItem} from './SocialMediaItem';\r\nimport {FooterRoutes} from './FooterRoutes';\r\n\r\nimport {theme} from '../../utils/theme';\r\n\r\n// Interfaces --\r\ninterface socialMediaContainer {\r\n  email: linkImagePair;\r\n  instagram?: linkImagePair;\r\n  facebook?: linkImagePair;\r\n  twitter?: linkImagePair;\r\n}\r\n\r\ninterface linkImagePair {\r\n  link: string;\r\n  image: string | ReactElement;\r\n}\r\n\r\n// The style for social media icons\r\nconst socialMediaStyle: SxStyleProp = {\r\n  transition: 'transform .2s ease',\r\n  '&:hover': {\r\n    transform: 'scale(1.1)',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\n/** All the social media needed for the footer. */\r\n// If we need more, just add according to format!\r\nconst socialMediaList: socialMediaContainer = {\r\n  email: {\r\n    link: 'mailto:rhhsstuco.contact@gmail.com',\r\n    image: <FaEnvelopeSquare size={32} sx={socialMediaStyle} />,\r\n  },\r\n  instagram: {\r\n    link: 'https://www.instagram.com/rhhs_stuco',\r\n    image: <FaInstagramSquare size={32} sx={socialMediaStyle} />,\r\n  },\r\n  facebook: {\r\n    link: 'https://www.facebook.com/rhhsstuco/',\r\n    image: <FaFacebookSquare size={32} sx={socialMediaStyle} />,\r\n  },\r\n  twitter: {\r\n    link: 'https://twitter.com/rhhs_stuco',\r\n    image: <FaTwitterSquare size={32} sx={socialMediaStyle} />,\r\n  },\r\n};\r\n\r\n/**\r\n * Draws/renders all the social media buttons provided.\r\n *\r\n * @param socialMediaList A list of all social medias to be displayed.\r\n * @returns               A list of social media items for each item\r\n *                        in the provided list.\r\n */\r\nconst getSocialMedia = (\r\n  socialMediaList: socialMediaContainer,\r\n): ReactElement[] => {\r\n  return Object.keys(socialMediaList).map((sitename) => {\r\n    return (\r\n      <SocialMediaItem\r\n        name={sitename}\r\n        link={socialMediaList[sitename].link}\r\n        pictureLink={socialMediaList[sitename].image}\r\n        key={sitename}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\n/**\r\n * Constructs a `Footer` component. This component is the footer of\r\n * every page and should contain resources, social media,\r\n * and copyright.\r\n *\r\n * @returns a `Footer` component.\r\n */\r\nexport const Footer: React.FC = () => {\r\n  // styling stuff --\r\n  const footerStyle: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    backgroundColor: theme.colors.footer,\r\n    pt: '3.5em',\r\n    position: 'relative',\r\n\r\n    zIndex: 1,\r\n\r\n    width: '100%',\r\n    top: 'auto',\r\n    mt: 'auto',\r\n    mb: 0,\r\n    bottom: 0,\r\n  };\r\n  const textStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.footer,\r\n    color: theme.colors.text.light,\r\n\r\n    whiteSpace: ['nowrap', 'break-spaces'],\r\n  };\r\n  const topFooterStyle: SxStyleProp = {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  };\r\n  const bottomFooterStyle: SxStyleProp = {\r\n    // rearrange the footer if the screen is small enough\r\n    display: 'flex',\r\n    flexDirection: ['column', 'row'],\r\n    alignItems: ['center', null],\r\n    textAlign: ['center', null],\r\n\r\n    width: '100%',\r\n    mx: 'auto',\r\n    mt: '2em',\r\n  };\r\n  const socialMediaContainerStyle: SxStyleProp = {\r\n    // push down the social media\r\n    mt: 0,\r\n    left: [0, '5%'],\r\n    width: ['100%', '50%'],\r\n\r\n    // somehow this aligns the icons with the copyright text??\r\n    bottom: '0.5em',\r\n\r\n    alignItems: ['center', 'row-start'],\r\n    textAlign: ['center', 'left'],\r\n  };\r\n  const copyrightContainerStyle: SxStyleProp = {\r\n    right: [0, '5%'],\r\n    width: ['100%', '50%'],\r\n    textAlign: ['center', 'right'],\r\n    mb: ['0.5em', 0],\r\n  };\r\n\r\n  // Return the footer code --\r\n  return (\r\n    // yes shari i know you hate bootstrap but im just using these\r\n    // names to name the divs. Kapeesh? Kapeesh.\r\n    <div sx={footerStyle}>\r\n      {/* top half of the footer */}\r\n      <div sx={topFooterStyle}>\r\n        <div sx={{width: '35%', position: 'relative', ml: '15%'}}>\r\n          <FooterRoutes routes={routes} textStyle={textStyle} />\r\n        </div>\r\n        <div sx={{width: '35%', position: 'relative', mr: '15%'}}>\r\n          <Resources textStyling={textStyle} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* bottom half of the footer */}\r\n      <div className=\"row\" sx={bottomFooterStyle}>\r\n        <div className=\"col\" sx={socialMediaContainerStyle}>\r\n          {getSocialMedia(socialMediaList)}\r\n        </div>\r\n\r\n        {/* {//TODO: this doesn't scale that well down :/// */}\r\n        <div className=\"col\" sx={copyrightContainerStyle}>\r\n          <CopyrightItem textStyle={textStyle} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, {useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nexport const ScrollToTop = withRouter(() => {\r\n  useEffect(() => {\r\n    window.scroll({top: 0, behavior: 'smooth'});\r\n  });\r\n  return <React.Fragment />;\r\n});\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\r\nimport {theme} from '../../utils/theme';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\n/** The props for a `ThreeDotsLoader` component*/\r\nexport interface ThreeDotsLoaderProps {\r\n  width?: number;\r\n  height?: number;\r\n  color?: string;\r\n}\r\n\r\n// yes shari a second file dedicated to three dot loaders\r\n/**\r\n * Constructs a `ThreeDotsLoader` component, a wrapper component\r\n * for a three dots loader from the `react-loader-spinner` library.\r\n * \r\n * @param props   The props for this component.\r\n * @returns       A three dots loader component from the\r\n *                `react-loader-spinner` library.\r\n * @see           {@link https://www.npmjs.com/package/react-loader-spinner|react-loader-spinner}\r\n */\r\nexport const ThreeDotsLoader: React.FC<ThreeDotsLoaderProps> = ({\r\n  width,\r\n  height,\r\n  color,\r\n}) => {\r\n  return (\r\n    <Loader\r\n      type=\"ThreeDots\"\r\n      color={color ? color : theme.colors.secondary}\r\n      width={width}\r\n      height={height}\r\n    />\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {ThreeDotsLoader} from './ThreeDotsLoader';\r\n\r\nimport {theme} from '../../utils/theme';\r\n\r\n/** The props for a `LoadingScreen` component. */\r\nexport interface LoadingScreenProps {\r\n  /** If this component is currently being mounted or being unmounted. */\r\n  isMounted: boolean;\r\n  /** How fast this component should unmount, in ms. */\r\n  unmountSpeed: number;\r\n  /** Whether the three dot loader should be shown or not. */\r\n  hasLoader?: boolean;\r\n  /** The loading text to be displayed. */\r\n  loadingText?: string;\r\n  /** An image to be displayed while loading. */\r\n  loadingImage?: string;\r\n}\r\n\r\n/**\r\n * Renders a loading screen, intended for indicating that the site\r\n * content is still being fetched.\r\n */\r\nexport const LoadingScreen: React.FC<LoadingScreenProps> = ({\r\n  isMounted,\r\n  unmountSpeed,\r\n  hasLoader = true,\r\n  loadingText = undefined,\r\n  loadingImage = undefined,\r\n}) => {\r\n  const wrapperStyle: SxStyleProp = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n\r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  };\r\n  const titleTextStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.heading.primary,\r\n    color: theme.colors.text.darkSlate,\r\n    margin: 'auto',\r\n  };\r\n  const containerDivStyle: SxStyleProp = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    mx: 'auto',\r\n    my: 'auto'\r\n  }\r\n  const innerDivStyle: SxStyleProp = {\r\n    display: 'inline-block',\r\n    py: 0,\r\n  }\r\n  /** The keyframes needed to create a cool \"breathing\" animation. */\r\n  const breathe: SxStyleProp = {\r\n    '0%': {\r\n      opacity: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    '50%': {\r\n      opacity: 0.5,\r\n      width: '95%',\r\n      height: '98%',\r\n    },\r\n    '100%': {\r\n      opacity: 1,\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  };\r\n  const centeredImageStyle: SxStyleProp = {\r\n    position: 'relative',\r\n\r\n    ml: 'auto',\r\n    mr: 'auto',\r\n\r\n    '@keyframes breathe': breathe,\r\n    'animation': 'breathe ease 3s',\r\n    'animationIterationCount': 'infinite',\r\n  }\r\n\r\n  /**\r\n   * Draws the three dots loader.\r\n   */\r\n  const drawDotLoader = (): ReactElement => {\r\n    return (\r\n      <div sx={innerDivStyle}>\r\n        <ThreeDotsLoader />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      sx={{\r\n        ...wrapperStyle,\r\n        transition: isMounted\r\n          ? 'none'\r\n          : 'opacity ' + (unmountSpeed / 1000).toString() + 's ease-in',\r\n        opacity: isMounted ? 1 : 0,\r\n      }}\r\n    >\r\n      <div sx={containerDivStyle}>\r\n        <div sx={innerDivStyle}>\r\n          <img src={loadingImage} alt=\"\" sx={centeredImageStyle}/>\r\n        </div>\r\n\r\n        <div sx={innerDivStyle}>\r\n          <h1 sx={titleTextStyle}>{loadingText}</h1>\r\n        </div>\r\n      \r\n        {/* draw the dot loader if wanted */}\r\n        {hasLoader ? drawDotLoader() : undefined}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};","import {useState, useEffect, useRef, useContext} from 'react';\r\nimport { ISetTransparentCtx, SetTransparentCtx } from './contexts';\r\n\r\n/**\r\n * Creates a timed delay for an unmounting component so that unmounting\r\n * animations and transitions are able to occur.\r\n * @param shouldBeMounted - Whether the component you are checking should\r\n * or should not be mounted.\r\n * @param delayTime - The total amount of time to delay the unmount,\r\n * in ms.\r\n * @returns a boolean, true if the component should finally be unmounted\r\n * (ie. the delay has finished), and false otherwise.\r\n */\r\nexport const useUnmountingDelay = (\r\n  shouldBeMounted: boolean,\r\n  delayTime: number,\r\n) => {\r\n  const [shouldRender, setShouldRender] = useState<boolean>(shouldBeMounted);\r\n\r\n  useEffect(() => {\r\n    let timerID: number;\r\n\r\n    if (shouldBeMounted) {\r\n      setShouldRender(true);\r\n    } else {\r\n      // Set a timer for a component once it should no longer be mounted.\r\n      timerID = window.setTimeout(() => setShouldRender(false), delayTime);\r\n    }\r\n\r\n    // Clear the old timer from memory\r\n    return () => {\r\n      window.clearTimeout(timerID);\r\n    };\r\n  }, [shouldBeMounted, delayTime, shouldRender]);\r\n\r\n  return shouldRender;\r\n};\r\n\r\n\r\n\r\nexport const usePrevious = (value: any) => {\r\n  const ref = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n};\r\n\r\n\r\n\r\n/**\r\n * OK, I've spent forever on this because of all the re-rendering\r\n * the react does that causes it unable to remove event listeners properly\r\n * this entire thing would've been avoided if gh pages was smarter\r\n * so I can use BrowserRoute instead of HashRoute which means\r\n * that I can use history and check for changes on routes and \r\n * act in response to the changes rather than having to keep a global\r\n * context myself that causes a zillion re-renders >:(\r\n * @param yOffset the yOffset for when the navbar changes from transparent to have colour\r\n */\r\nexport const useToggleNavColour = (yOffset: number) => {\r\n  const {setTransparent} = useContext<ISetTransparentCtx>(SetTransparentCtx);\r\n  const scrollEventHandler = useRef<() => void>(null);\r\n\r\n  useEffect(() => {\r\n    if (scrollEventHandler.current) {\r\n      console.log('why is this running');\r\n      window.removeEventListener('scroll', scrollEventHandler.current, true);\r\n      // return;\r\n    }\r\n    scrollEventHandler.current = () => {\r\n      const top = document.body.scrollTop || document.documentElement.scrollTop;\r\n      setTransparent(top < yOffset);\r\n    };\r\n    console.log('scroll listener added');\r\n    window.addEventListener('scroll', scrollEventHandler.current, true);\r\n  }, []);\r\n\r\n  \r\n  return () => {\r\n    console.log('scroll listener unmount');\r\n    window.removeEventListener('scroll', scrollEventHandler.current, true);\r\n  };\r\n};","/** @jsx jsx */\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {theme} from '../../utils/theme';\r\n\r\ninterface Props {\r\n  date: Date;\r\n}\r\n\r\ninterface FormattedTime {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n}\r\n\r\ninterface ITimeUnit {\r\n  number: number;\r\n  text: string;\r\n}\r\n\r\nexport const CountDownTimer: React.FC<Props> = ({date}) => {\r\n  const [timer, setTimer] = useState<number>();\r\n  const [formattedTime, setFormattedTime] = useState<FormattedTime>();\r\n  const [timerWidth, setTimerWidth] = useState<number>(null);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!timer) {\r\n      setTimer(\r\n        date.getTime() -\r\n          new Date().getTime() +\r\n          date.getTimezoneOffset() * 60 * 1000,\r\n      );\r\n      return;\r\n    }\r\n    setFormattedTime(getFormattedTime(timer));\r\n    const id = window.setTimeout(() => {\r\n      setTimer(timer - 1000);\r\n    }, 1000);\r\n    return () => window.clearTimeout(id);\r\n  }, [timer, date]);\r\n\r\n  useEffect(() => {\r\n    if (!wrapperRef.current) return;\r\n    setTimerWidth(wrapperRef.current.getBoundingClientRect().width);\r\n  }, [wrapperRef.current]);\r\n\r\n  const getFormattedTime = (timeInMilli: number) => {\r\n    const days = Math.floor(timeInMilli / (24 * 60 * 60 * 1000));\r\n    timeInMilli = timeInMilli % (24 * 60 * 60 * 1000);\r\n    const hours = Math.floor(timeInMilli / (60 * 60 * 1000));\r\n    timeInMilli = timeInMilli % (60 * 60 * 1000);\r\n    const minutes = Math.floor(timeInMilli / (60 * 1000));\r\n    timeInMilli = timeInMilli % (60 * 1000);\r\n    const seconds = Math.floor(timeInMilli / 1000);\r\n\r\n    return {\r\n      days: days >= 0 ? days : 0,\r\n      hours: hours >= 0 ? hours : 0,\r\n      minutes: minutes >= 0 ? minutes : 0,\r\n      seconds: seconds >= 0 ? seconds : 0,\r\n    };\r\n  };\r\n\r\n  if (!formattedTime) {\r\n    return <div />;\r\n  }\r\n\r\n  const style: SxStyleProp = {\r\n    top: '40%',\r\n    left: '7%',\r\n    position: ['static', 'absolute'],\r\n    borderColor: theme.colors.text.darkGray,\r\n    borderWidth: [0, 2],\r\n    borderStyle: 'solid',\r\n    color: theme.colors.text.darkGray,\r\n    textAlign: 'center',\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: 20,\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      color: theme.colors.text.darkGray,\r\n    },\r\n    px: 20,\r\n    py: [1, 2],\r\n    width: ['auto', 'auto', timerWidth],\r\n\r\n    //mobile\r\n    display: ['flex', 'inline'],\r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap',\r\n    order: 0,\r\n    mt: ['20%', 0],\r\n  };\r\n\r\n  const TimeUnit: React.FC<ITimeUnit> = ({number, text}) => {\r\n    const seconds = 'sec';\r\n    const numDigit = number < 100 ? 2 : 3;\r\n    const textSize = text === seconds ? 15 : 20;\r\n    const numSize = text === seconds ? 50 : 80;\r\n    return (\r\n      <span sx={{mx: 20}}>\r\n        <span sx={{fontSize: numSize}}>\r\n          {number.toString().padStart(numDigit, '0')}\r\n        </span>\r\n        <span sx={{fontSize: textSize}}>{text}</span>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div sx={style} ref={wrapperRef}>\r\n      <TimeUnit number={formattedTime.days} text=\"days\" />\r\n      <TimeUnit number={formattedTime.hours} text=\"hrs\" />\r\n      <TimeUnit number={formattedTime.minutes} text=\"mins\" />\r\n      <TimeUnit number={formattedTime.seconds} text=\"sec\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountDownTimer;\r\n","/** @jsx jsx */\r\nimport React from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\n\r\nexport interface HeadingProps {\r\n  text: string;\r\n  alignment: 'left' | 'center';\r\n  size?: 'normal' | 'small';\r\n  underline?: boolean;\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\n/**\r\n * A styled heading\r\n */\r\nexport const Heading: React.FC<HeadingProps> = ({\r\n  text,\r\n  alignment,\r\n  size = 'normal',\r\n  underline = true,\r\n  extraStyling,\r\n}) => {\r\n  const wrapperStyle: SxStyleProp = {\r\n    textAlign: alignment,\r\n  };\r\n\r\n  const textStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize:\r\n      size === 'normal'\r\n        ? theme.fontSizes.heading.primary\r\n        : theme.fontSizes.heading.small,\r\n    color: theme.colors.primary,\r\n    fontWeight: 'normal',\r\n  };\r\n\r\n  const lineStyle: SxStyleProp = {\r\n    background: theme.colors.primary,\r\n    borderRadius: 10,\r\n    height: 7,\r\n    width: ['100%', '25%'],\r\n    margin: alignment === 'left' ? undefined : 'auto',\r\n  };\r\n\r\n  return (\r\n    <div sx={{...wrapperStyle, ...extraStyling}}>\r\n      <div sx={textStyle}>{text}</div>\r\n      {underline ? <div sx={lineStyle} /> : undefined}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","/** @jsx jsx */\r\nimport React, {useState, useRef, useEffect} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\ninterface Props {\r\n  title: string | React.ReactElement;\r\n  titleStyle?: SxStyleProp;\r\n  childrenStyle?: SxStyleProp;\r\n  collapsed?: boolean;\r\n  collapseTime?: number;\r\n}\r\n\r\n/**\r\n * ok sift i'm writing comments now so stop judging my uncommented code >:((\r\n * @description\r\n * You can put any children inside Collapsable components and it will render them\r\n * in the collapsible list/tree format\r\n *\r\n * @example\r\n * <Collapsable title='hello'>\r\n *   You can have text\r\n *   <OrComponenents sx={withStyle} onClick={andFunctions}/>\r\n * </Collapsable>\r\n *\r\n * //title can be a component as well\r\n * const myTitle = <span><p>My twitter page</p><TwitterIcon/></span>;\r\n *\r\n * <Collapsable title={myTitle}>\r\n *   //children\r\n * </Collapsable>\r\n */\r\nexport const Collapsable: React.FC<Props> = ({\r\n  children,\r\n  title,\r\n  titleStyle,\r\n  collapsed = true,\r\n  childrenStyle,\r\n  collapseTime = 0.01,\r\n}) => {\r\n  const [childrenCollapsed, setChildrenCollapsed] = useState<boolean>(\r\n    collapsed,\r\n  );\r\n  const [childrenHeight, setChildrenHeight] = useState<number>(0);\r\n  const childrenRef = useRef<HTMLDivElement>(null);\r\n  const prevHeight = useRef<number>(0);\r\n\r\n  useEffect(() => {\r\n\r\n    //if the children has children and they resize, normally it won't re-render\r\n    //which is why the oberserver is added\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        prevHeight.current = childrenHeight;\r\n        const {height} = entry.contentRect;\r\n        setChildrenHeight(height);\r\n      });\r\n    });\r\n    ro.observe(childrenRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'visible',\r\n    verticalAlign: 'middle',\r\n    color: theme.colors.text.light,\r\n    fill: theme.colors.text.light,\r\n    height: 'auto',\r\n    padding: '0.3em',\r\n    width: 'auto',\r\n  };\r\n\r\n  /**\r\n   * gets height difference when resized\r\n   */\r\n  const getHeightDiff = () => {\r\n    const diff = Math.abs(childrenHeight - prevHeight.current);\r\n    if (diff === 0) return childrenHeight;\r\n    return diff;\r\n  };\r\n\r\n  const transitionTime = `${getHeightDiff() * collapseTime}s`;\r\n\r\n  const childrenWrapperStyle: SxStyleProp = {\r\n    ml: '20%',\r\n    pr: 14,\r\n    borderLeftWidth: 2,\r\n    borderLeftColor: theme.colors.text.light,\r\n    borderLeftStyle: 'dashed',\r\n    overflowY: 'hidden',\r\n    height: childrenCollapsed ? 0 : childrenHeight,\r\n    transitionDuration: transitionTime,\r\n    whiteSpace: 'initial'\r\n    \r\n  };\r\n\r\n  const defaultTitleStyle: SxStyleProp = {\r\n    width: 'auto',\r\n\r\n    '&:hover': {\r\n      cursor: React.Children.count(children) > 0 ? 'pointer' : 'default',\r\n      color: [\r\n        theme.colors.text.light,\r\n        React.Children.count(children) > 0\r\n          ? theme.colors.footer\r\n          : theme.colors.text.light,\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <span\r\n        sx={{...defaultTitleStyle, ...titleStyle}}\r\n        onClick={() => {\r\n          if (React.Children.count(children) === 0) return;\r\n          setChildrenCollapsed((childrenCollapsed) => !childrenCollapsed);\r\n        }}\r\n      >\r\n        {title}\r\n      </span>\r\n      <div\r\n        sx={{...childrenWrapperStyle, ...childrenStyle}}\r\n      >\r\n        <div ref={childrenRef} children={children} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collapsable;\r\n","import {SxStyleProp} from 'theme-ui';\r\n\r\nexport const slideUp: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateY(100%)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateY(0)',\r\n  },\r\n};\r\n\r\nexport const slideBackDown: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateY(0)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateY(100%)',\r\n  },\r\n};\r\n\r\nexport const slideDown: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateY(-100%)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateY(0)',\r\n  },\r\n};\r\n\r\nexport const slideLeft: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateX(-100%)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateX(0)',\r\n  },\r\n};\r\n\r\nexport const slideRight: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateX(100%)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateX(0)',\r\n  },\r\n};\r\n\r\nexport const slideOutRight: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 1,\r\n    transform: 'translateX(0)',\r\n  },\r\n  '100%': {\r\n    opacity: 0,\r\n    transform: 'translateX(100%)',\r\n  },\r\n};\r\n\r\nexport const slideOutLeft: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 1,\r\n    transform: 'translateX(0)',\r\n  },\r\n  '100%': {\r\n    opacity: 0,\r\n    transform: 'translateX(-100%)',\r\n  },\r\n};\r\n\r\nexport const fadeIn: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nexport const fadeOut: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 1,\r\n  },\r\n  '100%': {\r\n    opacity: 0,\r\n  },\r\n};\r\n\r\nexport const fadeInPartially: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n  },\r\n  '100%': {\r\n    opacity: 0.5,\r\n  },\r\n};\r\n\r\nexport const popIn: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    width: 0,\r\n    height: 0,\r\n    transform: 'translate3d(50%, 50%, 0)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    transform: 'translate3d(0, 0, 0)',\r\n  },\r\n};\r\n\r\nexport const spin: SxStyleProp = {\r\n  '0%': {\r\n    transform: 'rotate(0deg)',\r\n  },\r\n  '100%': {\r\n    transform: 'rotate(359deg)',\r\n  },\r\n};\r\n","export interface rgbItem {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a?: number;\r\n}\r\n\r\n/**\r\n * Cpmverts a hex string into an rgb object. Only works with\r\n * RRGGBB hexadecimals.\r\n * @param hex - the 6 byte hex string to convert to rgb.\r\n * @return an obhect with the r, g, b properties, according to\r\n * the hex string.\r\n */\r\nexport const hexToRgb = (hex: string): rgbItem => {\r\n  // Eliminate any non-hex things\r\n  hex = hex.replace(/[^0-9A-F]/gi, '');\r\n\r\n  // Convert to a 6 byte num that we'll fiddle with\r\n  let hexNum: number = parseInt(hex, 16);\r\n\r\n  // Using bitwise operations to parse RGB value by bitwise shifting\r\n  // to the correct colour byte group, and bitwise anding it with 255 to\r\n  // get the correct rgb value.\r\n  // using: https://stackoverflow.com/a/11508164\r\n  return {\r\n    r: (hexNum >> 16) & 255,\r\n    g: (hexNum >> 8) & 255,\r\n    b: hexNum & 255,\r\n  };\r\n};\r\n\r\n/**\r\n * Converts an RRGGBB hex string with a specified alpha into an rgba object.\r\n * @param hex - the 6 byte hex string without an alpha part\r\n * @param alpha - the desired alpha value, between 0.0 - 1.0\r\n * @returns an object with the r, g, b, and a properties/\r\n */\r\nexport const hexToRgba = (hex: string, alpha: number): rgbItem => {\r\n  return {\r\n    ...hexToRgb(hex),\r\n    a: alpha,\r\n  };\r\n};\r\n\r\n/**\r\n * Gets a formatted url of an image with proper resizing based\r\n * on the width and height input. The API used scales the original\r\n * aspect ratio of the image until one of the dimensions are met.\r\n * @param imageId - the image's id in the gallery folder.\r\n * @param width - an integer with the object's desired width.\r\n * @param height - an integer with the object's desired height.\r\n * @returns a formatted URL to the image with proper dimensions.\r\n */\r\nexport const getImageUrl = (\r\n  imageId: string,\r\n  width: number,\r\n  height: number,\r\n): string => {\r\n  return `https://drive.google.com/thumbnail?id=${imageId}&sz=w${Math.round(\r\n    width,\r\n  )}-h${Math.round(height)}`;\r\n};\r\n\r\n/**\r\n * Takes an array and splits it into n arrays.\r\n * @template T - the type in the array.\r\n * @param arr - the array to be split.\r\n * @param n - the amount of sub arrays desired.\r\n * @returns an array containing the subarrays.\r\n */\r\nexport function splitArray<T>(arr: T[], n: number): T[][] {\r\n  const array: T[] = arr.slice(); // so we don't destroy the original\r\n  const result: T[][] = [];\r\n  while (array.length > 0) {\r\n    /*W\r\n    e can keep splicing away sections of array.length / n and keep\r\n    subtracting n by 1 to get n equal sized subarrays. Why? Cause MATH\r\n    */\r\n    result.push(array.splice(0, Math.ceil(array.length / n--)));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport const randNum = (min: number, max: number) =>\r\n  Math.round((Math.random() * (max - min) + min) * 100) / 100;\r\n\r\nexport const randInt = (min: number, max: number) =>\r\n  Math.floor(randNum(min, max));\r\n\r\nexport const hexToRgbArr = (hex) => {\r\n  if (hex[0] === '#') hex = hex.slice(1);\r\n  const rgb = [\r\n    parseInt(hex.slice(0, 2), 16),\r\n    parseInt(hex.slice(2, 4), 16),\r\n    parseInt(hex.slice(4, 6), 16),\r\n  ];\r\n  return rgb;\r\n};\r\n\r\n/**\r\n * Stops users from scrolling the main body page, and saves the\r\n * original scroll location. Great for overlays.\r\n * @param topPos - The current window's scroll from the top.\r\n */\r\nexport const disallowScrolling = (topPos: number) => {\r\n  document.body.style.position = 'sticky';\r\n  document.body.style.overflowY = 'hidden';\r\n  document.body.style.top = `-${topPos}px`;\r\n};\r\n\r\n/**\r\n * Allows users to scroll the main body page again, from their last\r\n * saved window scroll position.\r\n */\r\nexport const allowScrolling = () => {\r\n  const topY = document.body.style.top;\r\n\r\n  document.body.style.position = '';\r\n  document.body.style.top = 'auto';\r\n  document.body.style.overflowY = 'initial';\r\n\r\n  // return to saved position, or top if it doesn't exist\r\n  window.scrollTo(0, -parseInt(topY || '0'));\r\n};\r\n\r\n/**\r\n * Detects and returns a user's swipe direction, or if it was pressed.\r\n * @param oldPos - The starting position of the user's tap.\r\n * @param newPos - The position where the user last held their finger.\r\n * @returns a string with either the user's swipe direction or if they\r\n * simply pressed instead.\r\n */\r\nexport const detectSwipeDirection = (\r\n  oldPos: {x: number; y: number},\r\n  newPos: {x: number; y: number},\r\n): 'left' | 'right' | 'up' | 'down' | 'press' => {\r\n  const xDiff = oldPos.x - newPos.x;\r\n  const yDiff = oldPos.y - newPos.y;\r\n\r\n  // checking for pressing\r\n  if (xDiff > -15 && xDiff < 15 && yDiff > -15 && yDiff < 15) {\r\n    return 'press';\r\n  }\r\n  // find which difference is most significant\r\n  if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n    if (xDiff > 0) {\r\n      return 'left';\r\n    } else {\r\n      return 'right';\r\n    }\r\n  } else {\r\n    if (yDiff > 0) {\r\n      return 'up';\r\n    } else {\r\n      return 'down';\r\n    }\r\n  }\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useContext, useState, useRef, useEffect} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {Link} from 'react-router-dom';\r\nimport {MdControlPoint} from 'react-icons/md';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport {CountDownTimer} from '../components/home-components/CountDownTimer';\r\nimport {Heading} from '../components/Heading';\r\nimport {Collapsable} from '../components/Collapsable';\r\nimport {\r\n  PhotoSlideDeck,\r\n  Photo,\r\n} from '../components/home-components/PhotoSlideDeck';\r\n\r\nimport {theme, FIRST_BREAKPOINT} from '../utils/theme';\r\nimport {\r\n  InfoContext,\r\n  IInfoContext,\r\n  ITransparentCtx,\r\n  TransparentCtx,\r\n  ISetTransparentCtx,\r\n  SetTransparentCtx,\r\n} from '../utils/contexts';\r\nimport {getImageUrl, hexToRgbArr} from '../utils/functions';\r\nimport {RandomDot} from '../utils/RandomDot';\r\nimport {useToggleNavColour} from '../utils/hooks';\r\n\r\n\r\n\r\n/**\r\n * The home screen, big parallax background plus the timer\r\n */\r\nconst Main: React.FC = () => {\r\n  const countdownEvent = useContext<IInfoContext>(InfoContext).countdown[0];\r\n\r\n  if (!countdownEvent) {\r\n    return <div />;\r\n  }\r\n\r\n  const style: SxStyleProp = {\r\n    width: '100%',\r\n    height: '100vh',\r\n    backgroundColor: \"#F3EACC\",\r\n    display: 'flex',\r\n    flexDirection: 'column', \r\n  };\r\n\r\n  const buttonStyle: SxStyleProp = {\r\n    top: '62%',\r\n    left: '7%',\r\n    width: 'fit-content',\r\n    mx: 'auto',\r\n    mt: '1em',\r\n    position: ['static', 'absolute'],\r\n    display: 'inline-block',\r\n    // backgroundColor: ['transparent', theme.colors.background.accent],\r\n    color: theme.colors.text.darkGray,\r\n    textAlign: 'center',\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: [20, 30],\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      color: theme.colors.background.black,\r\n      backgroundColor: theme.colors.background.overlay,\r\n    },\r\n    fontVariantCaps: 'titling-caps',\r\n    px: 4,\r\n    order: 1,\r\n\r\n    //mobile\r\n    borderColor: theme.colors.background.black,\r\n    borderWidth: [1, 2],\r\n    borderStyle: 'solid',\r\n  };\r\n  const bigLogo: SxStyleProp = {\r\n    height: '700px',\r\n    width: '60%',\r\n    mx: 'auto',\r\n    my: 'auto',\r\n    opacity: 0.1,\r\n    display: ['inline-block'],\r\n  }\r\n\r\n  return (\r\n    <div sx={style}>\r\n      <CountDownTimer date={new Date(countdownEvent.date)} />\r\n      <Link to=\"events\" sx={buttonStyle}>\r\n        <div sx={{my: 2}}>{countdownEvent.eventName.toUpperCase()}</div>\r\n      </Link>\r\n      {/* <img\r\n        src='logo.png'\r\n        alt=\"rhhs logo\"\r\n        sx={bigLogo}\r\n      /> */}\r\n    </div>\r\n  )};\r\n\r\n//=============================================================\r\n\r\n/**\r\n * The green board that has dots in the background\r\n * \r\n */\r\nconst BackgroundWithDots: React.FC = (props) => {\r\n  const [randomDots, setRandomDots] = useState<RandomDot[]>([]);\r\n  const [numDots, setNumDots] = useState<number>(null);\r\n\r\n  //for getting the width\r\n  const componentRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    //used to re-render the dots upon resizing, because it may be a long list\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        const height = entry.contentRect.height;\r\n        generateRandomDots(height);\r\n      });\r\n    });\r\n    ro.observe(componentRef.current);\r\n    return () => ro.disconnect();\r\n  }, [randomDots]);\r\n\r\n  /**\r\n   * Gets random dots for the background at\r\n   * *x ∈ [0, 1/3(width)] ∪ [2/3(width), width], y ∈ [0, height]*\r\n   */\r\n  const generateRandomDots = (height: number) => {\r\n    const width = componentRef.current.getBoundingClientRect().width;\r\n    const dotsPerSideHeightInterval = 40;\r\n    setNumDots((height / dotsPerSideHeightInterval) * 2);\r\n    const numNewDots =\r\n      height / dotsPerSideHeightInterval - randomDots.length / 2;\r\n\r\n    for (let i = 0; i < numNewDots; i++) {\r\n      setRandomDots((oldArr) => {\r\n        const clone = [...oldArr];\r\n        clone.push(\r\n          new RandomDot(\r\n            width - width / 3,\r\n            height / 20,\r\n            width / 3,\r\n            height - height / 10,\r\n          ),\r\n        );\r\n        clone.push(\r\n          new RandomDot(0, height / 20, width / 3, height - height / 10),\r\n        );\r\n        return clone;\r\n      });\r\n    }\r\n  };\r\n\r\n  const style: SxStyleProp = {\r\n    backgroundColor: theme.colors.secondary,\r\n    borderRadius: 30,\r\n    mt: 30,\r\n    position: 'relative',\r\n    pb: 60,\r\n    pt: 20,\r\n    display: 'flex',\r\n  };\r\n\r\n  return (\r\n    <div sx={style} ref={componentRef}>\r\n      {window.innerWidth > FIRST_BREAKPOINT\r\n        ? randomDots.map((dot) => dot.getComponent()).slice(0, numDots)\r\n        : undefined}\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\n//=============================================================\r\n\r\nconst UpcomingBoard: React.FC = () => {\r\n  const {upcomingMiniEvents} = useContext<IInfoContext>(InfoContext);\r\n\r\n  const style: SxStyleProp = {\r\n    pt: theme.bodyPadding.pt,\r\n    pb: theme.bodyPadding.pb,\r\n    px: theme.bodyPadding.px,\r\n  };\r\n\r\n  /**\r\n   * Gets the collapsable list for all upcoming events\r\n   */\r\n  const getEventsList = () => {\r\n    const style: SxStyleProp = {\r\n      fontSize: theme.fontSizes.bodyLarge,\r\n      fontFamily: theme.fonts.body,\r\n      ml: '5vw',\r\n      display: 'flex', \r\n      flexDirection: 'row',\r\n    };\r\n\r\n    const descriptionStyle: SxStyleProp = {\r\n      textAlign: 'left',\r\n      pl: '1em',\r\n      fontSize: theme.fontSizes.body.map((n) => n + 2),\r\n      py: '0.5em',\r\n    };\r\n\r\n    return upcomingMiniEvents.map((event) => {\r\n      const iconStyle: SxStyleProp = {\r\n        color: theme.colors.footer,\r\n        ml: '0.5em',\r\n        // '&:hover': {\r\n        //   color: theme.colors.footer,\r\n        // },\r\n      };\r\n\r\n      const linkStyle: SxStyleProp = {\r\n        color: theme.colors.text.light,\r\n        maxWidth: '100%',\r\n        textOverflow: 'wrap',\r\n        '&:hover': {\r\n          textDecoration: 'none',\r\n          color: theme.colors.footer,\r\n        },\r\n      };\r\n\r\n      const title = (\r\n        <React.Fragment>\r\n          <MdControlPoint sx={{mr: '1em',}} />\r\n          {event.link ? (\r\n            <a href={event.link} sx={linkStyle}>\r\n              <p sx={{whiteSpace: 'initial'}}>{event.name}</p>\r\n              {/* <GiClick sx={iconStyle} /> */}\r\n            </a>\r\n          ) : (\r\n            <p sx={{whiteSpace: 'initial', display: 'inline'}}>{event.name}</p>\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n\r\n      if (!event.description)\r\n        return <Collapsable title={title} titleStyle={style} />;\r\n      return (\r\n        <Collapsable\r\n          title={title}\r\n          titleStyle={style}\r\n          childrenStyle={{ml: ['20%', '15em']}}\r\n        >\r\n          <div sx={descriptionStyle}>{event.description}</div>\r\n        </Collapsable>\r\n      );\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The placeholder value for if there are no upcoming events\r\n   */\r\n  const getPlaceHolder = () => {\r\n    const style: SxStyleProp = {\r\n      fontSize: theme.fontSizes.bodyLarge,\r\n      textAlign: 'center',\r\n      color: theme.colors.text.light,\r\n      py: 5,\r\n    };\r\n\r\n    return <div sx={style}>Nothing Yet!</div>;\r\n  };\r\n\r\n  const eventListWrapper: SxStyleProp = {\r\n    margin: 'auto',\r\n  };\r\n\r\n  if (!upcomingMiniEvents) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <div sx={style}>\r\n      <Heading alignment=\"center\" text=\"Upcoming\" />\r\n      <BackgroundWithDots>\r\n        {upcomingMiniEvents.length > 0 ? (\r\n          <div sx={eventListWrapper}>{getEventsList()}</div>\r\n        ) : (\r\n          getPlaceHolder()\r\n        )}\r\n      </BackgroundWithDots>\r\n    </div>\r\n  );\r\n};\r\n\r\n//=============================================================\r\n\r\n/**\r\n * The recents gallery\r\n */\r\nconst Recent: React.FC = () => {\r\n  const {recents} = useContext<IInfoContext>(InfoContext);\r\n  const [width, setWidth] = useState<number>(0);\r\n  const thisComponentRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!thisComponentRef.current) return;\r\n    setWidth(thisComponentRef.current.getBoundingClientRect().width);\r\n  }, []);\r\n\r\n  if (!recents) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const style: SxStyleProp = {\r\n    backgroundColor: theme.colors.background.overlay,\r\n    px: theme.bodyPadding.px,\r\n    pt: theme.bodyPadding.pt,\r\n    pb: theme.bodyPadding.pb,\r\n  };\r\n\r\n  //scale in relation to viewport width\r\n  const scale = width > FIRST_BREAKPOINT ? 0.38 : 0.75;\r\n\r\n  const photos: Photo[] = recents.map((event) => {\r\n    return {\r\n      url: getImageUrl(event.photoId, Math.round(width / scale), 1000),\r\n      description: event.description,\r\n    };\r\n  });\r\n\r\n  //target photo dimension\r\n  //photos are 1.5:1 aspect ratio\r\n  const photoDimension = {\r\n    width: width * scale,\r\n    height: (width * scale) / 1.5,\r\n  };\r\n\r\n  const line: SxStyleProp = {\r\n    backgroundColor: theme.colors.primary,\r\n    height: '0.2em',\r\n    width: ['80%', '20%'],\r\n    borderRadius: 3,\r\n    mt: ['1em', '1.5em'],\r\n    mx: 'auto',\r\n  };\r\n  return (\r\n    <div sx={style} ref={thisComponentRef}>\r\n      <Heading text=\"Recents\" alignment=\"center\" />\r\n      <PhotoSlideDeck photos={photos} photoDimension={photoDimension} />\r\n      <div sx={line} />\r\n    </div>\r\n  );\r\n};\r\n\r\n//=============================================================\r\n\r\nexport const Home: React.FC = () => {\r\n  const {setTransparent} = useContext<ISetTransparentCtx>(SetTransparentCtx);\r\n  const toggleNavUnsub = useToggleNavColour(window.innerHeight);\r\n  console.log('mount');\r\n  useEffect(() => {\r\n    return toggleNavUnsub;\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Main />\r\n      {/* <UpcomingBoard />\r\n      <Recent /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\nimport {hexToRgba, rgbItem} from '../utils/functions';\r\n\r\nexport interface TransRectProps {\r\n  lengthX: string | number; //string for '2em', etc\r\n  lengthY?: string | number;\r\n  minLengthY?: string | number; // if you need the rect to expand but have a min\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\n// Default background colour for IE kids (ie no one)\r\nconst backRgba: rgbItem = hexToRgba(\r\n  theme.colors.secondary,\r\n  0.5,\r\n);\r\n\r\nexport const TranslucentRectangle: React.FC<TransRectProps> = ({\r\n  lengthX,\r\n  lengthY,\r\n  minLengthY,\r\n  extraStyling,\r\n  children,\r\n}): ReactElement => {\r\n  const rectStyle: SxStyleProp = {\r\n    width: lengthX,\r\n    height: lengthY,\r\n    minHeight: minLengthY,\r\n    // So IE doesnt kill itself when trying to load\r\n    backgroundColor: backRgba.hasOwnProperty('a')\r\n      ? `rgba(${backRgba.r}, ${backRgba.b}, ${backRgba.g}, ${backRgba.a})`\r\n      : `rgba(backRgba.r, backRgba.b, backRgba.g)`,\r\n    // If you want HEX RRGGBBAA put it in extraStyling\r\n    ...extraStyling,\r\n  };\r\n\r\n  return <div sx={rectStyle}>{children}</div>;\r\n};\r\n","/** @jsx jsx */\r\nimport React from 'react';\r\nimport { jsx, SxStyleProp } from 'theme-ui';\r\nimport { ThreeDotsLoader } from './ThreeDotsLoader';\r\nimport { theme } from '../../utils/theme';\r\n\r\n/** The props for a `FilledSquareLoader` component. */\r\nexport interface FilledSquareLoaderProps {\r\n  /** The width of the three dot loader in this square. */\r\n  loaderWidth?: number;\r\n  /** The height of the three dot loader in this square. */\r\n  loaderHeight?: number;\r\n  /** The color of the three dot loader in this square. */\r\n  loaderColor?: string;\r\n  /** Whether this square is transparent or not. */\r\n  isTransparent?: boolean;\r\n  /** Extra css for this square. */\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\n/**\r\n * Renders a filled loading square, designed to be a square placeholder\r\n * for images that have yet to be loaded.\r\n * @returns a square with a loader.\r\n */\r\nexport const FilledSquareLoader: React.FC<FilledSquareLoaderProps> = ({\r\n  loaderWidth,\r\n  loaderHeight,\r\n  loaderColor,\r\n  isTransparent,\r\n  extraStyling,\r\n}) => {\r\n  const loadingSquareStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: isTransparent ? 'transparent' : theme.colors.background.dark,\r\n\r\n    display: 'flex',\r\n    alignItems: ' center',\r\n    textAlign: 'center',\r\n\r\n    ...extraStyling,\r\n  };\r\n\r\n  return (\r\n    <div sx={loadingSquareStyle}>\r\n      <div sx={{ display: 'inline', margin: 'auto' }}>\r\n        <ThreeDotsLoader\r\n          width={loaderWidth}\r\n          height={loaderHeight}\r\n          color={loaderColor ? loaderColor : theme.colors.text.light} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement, useState, useEffect, useCallback} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {FaArrowUp} from 'react-icons/fa';\r\n\r\nimport {useUnmountingDelay} from '../utils/hooks';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {fadeInPartially} from '../utils/animation';\r\n\r\nexport const ScrollToTopButton: React.FC = () => {\r\n  const [showScrollButton, setShowScrollButton] = useState<boolean>(false);\r\n  // for the fadeout\r\n  const shouldRenderButton = useUnmountingDelay(showScrollButton, 500);\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (!showScrollButton && window.pageYOffset > 500) {\r\n      setShowScrollButton(true);\r\n    } else if (showScrollButton && window.pageYOffset <= 500) {\r\n      setShowScrollButton(false);\r\n    }\r\n  }, [showScrollButton]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', handleScroll, false);\r\n\r\n    return () => document.removeEventListener('scroll', handleScroll, false);\r\n  }, [handleScroll]);\r\n\r\n  /**\r\n   * Scrolls to the top of the page.\r\n   */\r\n  const scrollToTop = () => {\r\n    window.scrollTo({top: 0, behavior: 'smooth'});\r\n  };\r\n\r\n  /**\r\n   * Renders a formatted scroll to top button. Assumes that checks were\r\n   * done beforehand to make sure this component should exist.\r\n   */\r\n  const renderScrollButton = (): ReactElement => {\r\n    const buttonStyle: SxStyleProp = {\r\n      position: 'fixed',\r\n      bottom: '5%',\r\n      right: '5%',\r\n\r\n      width: ['40px', '50px', '60px'],\r\n      height: ['40px', '50px', '60px'],\r\n      borderRadius: '50%',\r\n\r\n      '@keyframes fadeInPartially': fadeInPartially,\r\n      animationName: 'fadeInPartially',\r\n      animationDuration: '0.5s',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      backgroundColor: theme.colors.secondary,\r\n      boxShadow: '3px 3px 23px -3px rgba(0,0,0,0.75)',\r\n\r\n      transition: 'opacity 0.5s ease, background-color 0.5s ease',\r\n      opacity: showScrollButton ? 0.5 : 0,\r\n\r\n      zIndex: 10,\r\n\r\n      '&:hover': {\r\n        opacity: 1,\r\n        backgroundColor: theme.colors.primary,\r\n        cursor: 'pointer',\r\n      },\r\n    };\r\n\r\n    const iconStyle: SxStyleProp = {\r\n      margin: 'auto',\r\n      width: ['25px', '35px', '45px'],\r\n      height: 'auto',\r\n      // height: ['25px', '35px', '45px'],\r\n    };\r\n\r\n    return (\r\n      <div sx={buttonStyle} onClick={scrollToTop}>\r\n        <FaArrowUp color={theme.colors.text.light} sx={iconStyle} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return shouldRenderButton ? renderScrollButton() : <React.Fragment />;\r\n};\r\n","/** @jsx jsx */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useRef,\r\n  ReactElement,\r\n} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {Heading} from '../components/Heading';\r\nimport {TranslucentRectangle} from '../components/TranslucentRectangle';\r\nimport {FilledSquareLoader} from '../components/loading-components/FilledSquareLoader';\r\nimport {ScrollToTopButton} from '../components/ScrollToTopButton';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {\r\n  IInfoContext,\r\n  InfoContext,\r\n  ITransparentCtx,\r\n  TransparentCtx,\r\n  ISetTransparentCtx,\r\n  SetTransparentCtx,\r\n} from '../utils/contexts';\r\nimport {Event} from '../utils/interfaces';\r\nimport {getImageUrl} from '../utils/functions';\r\nimport {useUnmountingDelay} from '../utils/hooks';\r\nimport {fadeOut, fadeIn} from '../utils/animation';\r\n\r\n// Interfaces --\r\ninterface EventItemProps {\r\n  height: string;\r\n  width: string;\r\n  event: Event;\r\n  textLocation: 'left' | 'right';\r\n  rectStyling?: SxStyleProp;\r\n}\r\n\r\ninterface EventHeadingProps {\r\n  text: string;\r\n  textLocation: 'left' | 'right';\r\n  extraHeaderStyling?: SxStyleProp;\r\n  extraTextStyling?: SxStyleProp;\r\n}\r\n\r\ninterface EventPhotoProps {\r\n  photoID: string;\r\n  width: string;\r\n  height: number;\r\n  photoLocation: string;\r\n}\r\n\r\ninterface EventInfoItemProps {\r\n  width: string;\r\n  textLocation: 'left' | 'right';\r\n  eventDetails: EventDetails;\r\n}\r\n\r\ninterface EventButtonProps {\r\n  buttonText: string;\r\n  buttonLink: string;\r\n  extraButtonStyling?: SxStyleProp;\r\n}\r\n\r\nexport interface EventDetails {\r\n  description: string;\r\n  date: string;\r\n  buttonText?: string;\r\n  buttonLink?: string;\r\n}\r\n\r\n// ============================================================\r\n// EventHeading -- for the main header containing the event name.\r\nconst EventHeading: React.FC<EventHeadingProps> = ({\r\n  text,\r\n  textLocation,\r\n  extraHeaderStyling,\r\n  extraTextStyling,\r\n}) => {\r\n  const wrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    mt: '3%',\r\n    mb: '1%',\r\n    py: '1%',\r\n    width: ['95%', '90%', '80%'],\r\n    height: 'auto',\r\n\r\n    // position this based on text location\r\n    ml: textLocation === 'left' ? 'auto' : 0,\r\n    mr: textLocation === 'right' ? 'auto' : 0,\r\n    pr: textLocation === 'right' ? '2em' : 0,\r\n    pl: textLocation === 'left' ? '2em' : 0,\r\n    zIndex: 3,\r\n\r\n    textAlign: textLocation,\r\n\r\n    backgroundColor: theme.colors.primary,\r\n\r\n    ...extraHeaderStyling,\r\n  };\r\n  const titleTextStyle: SxStyleProp = {\r\n    display: 'inline',\r\n    position: 'relative',\r\n    fontSize: theme.fontSizes.heading.event,\r\n    fontFamily: theme.fonts.body,\r\n    color: theme.colors.text.light,\r\n\r\n    margin: 'auto',\r\n\r\n    ...extraTextStyling,\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <p sx={titleTextStyle}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// EventPhoto -- for the main img that shows up for the event.\r\n// TODO: consistent resizing?\r\nconst EventPhoto: React.FC<EventPhotoProps> = ({\r\n  photoID,\r\n  width,\r\n  height,\r\n  photoLocation,\r\n}) => {\r\n  const [imgWidth, setImgWidth] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const renderLoadingSquare = useUnmountingDelay(loading, 1000);\r\n  const imageRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Get the width of the div that contains the image, so that we can\r\n  // size the image properly.\r\n  useEffect(() => {\r\n    if (!imageRef.current) return;\r\n\r\n    setImgWidth(Math.round(imageRef.current.getBoundingClientRect().width));\r\n  }, [imageRef]);\r\n\r\n  // Styles --\r\n  const wrapperStyle: SxStyleProp = {\r\n    // The wrapper that holds both the image and the rect for now\r\n\r\n    position: 'absolute',\r\n    top: '5%',\r\n    right: photoLocation === 'right' ? 0 : 'auto',\r\n    left: photoLocation === 'left' ? 0 : 'auto',\r\n\r\n    width: width,\r\n    maxWidth: width,\r\n    height: height,\r\n    maxHeight: '100%', // make sure the image doesn't break the page\r\n\r\n    zIndex: 5, // draw over the title\r\n  };\r\n  const imageStyle: SxStyleProp = {\r\n    display: loading ? 'none' : 'block',\r\n    '@keyframes fade-in': fadeIn,\r\n    animation: 'fade-in 1s linear',\r\n\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    height: '100%',\r\n  };\r\n  const rectStyling: SxStyleProp = {\r\n    // For extra styling of the TransparentRectangle\r\n\r\n    position: 'absolute',\r\n    backgroundColor: theme.colors.navbar + '66',\r\n    maxHeight: '100%', // make sure the image doesn't break the page\r\n    width: '100%',\r\n    zIndex: 2,\r\n\r\n    top: '3%',\r\n    right: photoLocation === 'right' ? '3%' : 'auto',\r\n    left: photoLocation === 'left' ? '3%' : 'auto',\r\n  };\r\n\r\n  // Functions --\r\n  /**\r\n   * Handles image loading and sets loading state to false.\r\n   */\r\n  const handleLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  /**\r\n   * Determines whether to render a LoadingSquare or not.\r\n   * @returns either a loading square or nothing.\r\n   */\r\n  const displayLoadingSquare = (): ReactElement | void => {\r\n    const loadingSquareStyle: SxStyleProp = {\r\n      '@keyframes fade-out': fadeOut,\r\n      animation: loading ? 'none' : 'fade-out 1s linear',\r\n    };\r\n\r\n    return <FilledSquareLoader extraStyling={loadingSquareStyle} />;\r\n  };\r\n\r\n  return (\r\n    // yes shari i know that the header isnt exactly right but\r\n    // ill fix that later i guess :)\r\n    <div sx={wrapperStyle} ref={imageRef}>\r\n      {renderLoadingSquare ? displayLoadingSquare() : undefined}\r\n      <img\r\n        src={getImageUrl(photoID, 5000, height)}\r\n        alt=\"\"\r\n        sx={imageStyle}\r\n        onLoad={handleLoading}\r\n      />\r\n      <TranslucentRectangle\r\n        lengthX={imgWidth}\r\n        lengthY={height}\r\n        extraStyling={rectStyling}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// EventButton -- for any buttons that are needed for the event element.\r\nconst EventButton: React.FC<EventButtonProps> = ({\r\n  buttonText,\r\n  buttonLink,\r\n  extraButtonStyling,\r\n}) => {\r\n  // Assumes button text and button link is valid\r\n  const wrapperStyle: SxStyleProp = {\r\n    display: 'inline-block',\r\n    backgroundColor: theme.colors.primary,\r\n\r\n    textAlign: 'center',\r\n\r\n    px: '2%',\r\n    py: '1%',\r\n    mx: '5%',\r\n    mt: '2%',\r\n    mb: '0.5%',\r\n\r\n    transition: 'transform .2s, .5s ease',\r\n    '&:hover': {\r\n      transform: 'scale(1.025)',\r\n      cursor: 'pointer',\r\n    },\r\n\r\n    ...extraButtonStyling,\r\n  };\r\n  const buttonStyle: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.body,\r\n    whiteSpace: 'nowrap',\r\n\r\n    '&:hover': {\r\n      color: theme.colors.text.light,\r\n      textDecoration: 'none',\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Renders the contents of the button, depending on whether\r\n   * a link was provided or not.\r\n   */\r\n  const renderButtonContents = () => {\r\n    if (buttonLink) {\r\n      return (\r\n        <a href={buttonLink} sx={buttonStyle}>\r\n          {buttonText}\r\n        </a>\r\n      );\r\n    }\r\n\r\n    return <span sx={buttonStyle}> {buttonText}</span>;\r\n  };\r\n\r\n  return <div sx={wrapperStyle}>{renderButtonContents()}</div>;\r\n};\r\n\r\n// ============================================================\r\n// EventInfoItem -- for the description and button\r\nconst EventInfoItem: React.FC<EventInfoItemProps> = ({\r\n  width,\r\n  textLocation,\r\n  eventDetails,\r\n}) => {\r\n  // Styles for the buttons\r\n  const textWrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    width: width,\r\n    maxWidth: width,\r\n\r\n    // Draw based on orientation\r\n    ml: textLocation === 'left' ? 0 : 'auto',\r\n    mr: textLocation === 'right' ? 0 : 'auto',\r\n    textAlign: textLocation === 'right' ? 'left' : 'right',\r\n  };\r\n  const descriptionStyle: SxStyleProp = {\r\n    position: 'relative',\r\n\r\n    display: 'inline-block',\r\n    px: '5%',\r\n\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.event,\r\n    color: theme.colors.text.darkGray,\r\n\r\n    wordWrap: 'normal',\r\n    lineHeight: 1.6,\r\n  };\r\n  const dateStyle: SxStyleProp = {\r\n    ...descriptionStyle,\r\n\r\n    color: theme.colors.secondary,\r\n    fontSize: theme.fontSizes.event.map((size) => size + 2),\r\n    fontWeight: 'bold',\r\n    pb: '1%',\r\n  };\r\n  const buttonContainerStyle: SxStyleProp = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: textLocation === 'right' ? 'flex-start' : 'flex-end',\r\n  };\r\n\r\n  /**\r\n   * Checks to see if a button should be rendered in the first place,\r\n   * based on presence of button text or not.\r\n   * @returns either an empty element or a button.\r\n   */\r\n  const renderButton = (): ReactElement => {\r\n    if (eventDetails.buttonText) {\r\n      return (\r\n        <EventButton\r\n          buttonText={eventDetails.buttonText}\r\n          buttonLink={eventDetails.buttonLink}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div></div>;\r\n  };\r\n\r\n  return (\r\n    <div sx={textWrapperStyle}>\r\n      <p sx={dateStyle}>{eventDetails.date}</p>\r\n\r\n      <p sx={descriptionStyle}>{eventDetails.description}</p>\r\n      <div sx={buttonContainerStyle}>\r\n        {/* yes shari, this will work with multiple buttons if needed */}\r\n        {renderButton()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// EventItem -- for holding the actual event information -----\r\nconst EventItem: React.FC<EventItemProps> = ({\r\n  height,\r\n  width,\r\n  event,\r\n  textLocation,\r\n  rectStyling,\r\n}) => {\r\n  const [imgHeight, setImgHeight] = useState<number>(0);\r\n  const eventItemRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Get the height of the curernt div containing the event\r\n  // item, so that the photo can be this size too.\r\n  useEffect(() => {\r\n    if (!eventItemRef.current) return;\r\n\r\n    setImgHeight(\r\n      Math.round(eventItemRef.current.getBoundingClientRect().height),\r\n    );\r\n  }, [eventItemRef]);\r\n\r\n  // All text details for the current event\r\n  const currentEventDetails: EventDetails = {\r\n    description: event.description,\r\n    date: event.date,\r\n    buttonText: event.buttonText,\r\n    buttonLink: event.buttonLink,\r\n  };\r\n\r\n  // Sty;es fpr every event items\r\n  const wrapperStyle: SxStyleProp = {\r\n    py: '3%',\r\n    my: ['2%', '1%', 0],\r\n  };\r\n  const rectangleBarrierStyling: SxStyleProp = {\r\n    my: '-0.5em', // pulling the rectangles closer together\r\n    pb: '2%',\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    minHeight: ['35vh', '45vh', '55vh', height],\r\n\r\n    ...rectStyling,\r\n  };\r\n\r\n  /**\r\n   * Determines if a photo should be rendered, based on presence\r\n   * of a photo ID.\r\n   * @returns either an empty element, or an event photo.\r\n   */\r\n  const renderPhoto = (): ReactElement => {\r\n    if (event.photoId) {\r\n      return (\r\n        <EventPhoto\r\n          photoID={event.photoId}\r\n          width=\"35%\"\r\n          height={imgHeight}\r\n          photoLocation={textLocation === 'left' ? 'right' : 'left'}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div></div>;\r\n  };\r\n\r\n  // All events have a heading and description and possibly\r\n  // a button (or buttons) to a link and a photo.\r\n  return (\r\n    <div sx={wrapperStyle} ref={eventItemRef}>\r\n      <TranslucentRectangle\r\n        lengthX={width}\r\n        extraStyling={rectangleBarrierStyling}\r\n      >\r\n        <EventHeading text={event.eventName} textLocation={textLocation} />\r\n        <EventInfoItem\r\n          width={event.photoId ? '65%' : '90%'}\r\n          textLocation={textLocation}\r\n          eventDetails={currentEventDetails}\r\n        />\r\n        {renderPhoto()}\r\n      </TranslucentRectangle>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// Events -- renders the page of all events.\r\nexport const Events: React.FC = () => {\r\n  const eventInfo: Event[] = useContext<IInfoContext>(InfoContext).events;\r\n  const {setTransparent} = useContext<ISetTransparentCtx>(SetTransparentCtx);\r\n  useEffect(() => setTransparent(false), []);\r\n  // Styles for the page\r\n  const wrapperStyle: SxStyleProp = {\r\n    // the main page div\r\n\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.beige,\r\n  };\r\n  const innerWrapperStyle: SxStyleProp = {\r\n    // the div that contains everything\r\n\r\n    top: '20vh',\r\n    position: 'relative',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    mb: '14em',\r\n  };\r\n  const headingWrapperStyle: SxStyleProp = {\r\n    // the header div\r\n\r\n    left: '5%',\r\n    maxWidth: '90%', // to make sure the page doesn't scroll to the right\r\n    position: 'relative',\r\n  };\r\n\r\n  // Get rid of horizontal scroll bar caused by hovering a picture\r\n  useEffect(() => {\r\n    document.body.style.overflowX = 'hidden';\r\n\r\n    return () => (document.body.style.overflowX = 'initial');\r\n  });\r\n\r\n  /**\r\n   * Retrieves all events in a formatted manner based on what number\r\n   * the event is.\r\n   * @returns a list containing all the EventItem elements.\r\n   */\r\n  const getAllEvents = (): ReactElement[] => {\r\n    return eventInfo.map((event, index) => {\r\n      const extraRectStyling: SxStyleProp = {\r\n        backgroundColor:\r\n          index % 2 === 1 ? theme.colors.background.overlay : 'transparent',\r\n      };\r\n\r\n      return (\r\n        <div key={index} sx={{position: 'relative', display: 'inline'}}>\r\n          <EventItem\r\n            width=\"100%\"\r\n            height=\"65vh\"\r\n            event={event}\r\n            textLocation={index % 2 === 1 ? 'left' : 'right'}\r\n            rectStyling={extraRectStyling}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      {/* initializing scroll to top button */}\r\n      <ScrollToTopButton />\r\n\r\n      <div sx={innerWrapperStyle}>\r\n        <div sx={headingWrapperStyle}>\r\n          <Heading text=\"Events\" alignment=\"left\" />\r\n        </div>\r\n        {getAllEvents()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {theme} from '../../utils/theme';\r\n\r\nimport {ClubContactInfo, ClubInfoItemDimensions} from './ClubPopup';\r\n\r\n/** The props for a `ClubInfoItem` component. */\r\nexport interface ClubInfoItemProps {\r\n  clubContactInfo: ClubContactInfo;\r\n}\r\n\r\n/**\r\n * Constructs a `ClubInfoItem` component, for the bottom right bar in\r\n * a club popup with the club info.\r\n *\r\n * @param props   The props for this component.\r\n * @returns       A `ClubInfoItem` component.\r\n */\r\nexport const ClubInfoItem: React.FC<ClubInfoItemProps> = ({\r\n  clubContactInfo,\r\n}): ReactElement => {\r\n  const wrapperStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    bottom: ClubInfoItemDimensions.bottom,\r\n    right: ClubInfoItemDimensions.right,\r\n    width: ClubInfoItemDimensions.width,\r\n\r\n    // if we need a min height (results in no vertical centering if\r\n    // text is too small)\r\n    // TODO: fix this i guess sometime later\r\n    // minHeight: '25%',\r\n    borderRadius: '12px',\r\n    backgroundColor: theme.colors.background.light,\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n  };\r\n  const textContainerStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    my: '4%',\r\n  };\r\n\r\n  /**\r\n   * Retrieves all the supplied contact information and formats it for\r\n   * the small contact rectangle.\r\n   *\r\n   * @returns a list of formatted contact information elements.\r\n   */\r\n  const getAllContactInfo = (): ReactElement[] => {\r\n    const contactInfoWrapperStyle: SxStyleProp = {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      my: '1%',\r\n      flex: '1',\r\n    };\r\n    const textStyle: SxStyleProp = {\r\n      fontFamily: theme.fonts.body,\r\n      fontSize: theme.fontSizes.event,\r\n      color: theme.colors.text.darkSlate,\r\n\r\n      marginY: 'auto',\r\n      wordBreak: 'break-word',\r\n      lineHeight: 1.2,\r\n    };\r\n    const colStyle: SxStyleProp = {\r\n      position: 'relative',\r\n      display: 'inline-block',\r\n    };\r\n    const leftColStyle: SxStyleProp = {\r\n      textAlign: 'left',\r\n      ml: '5%',\r\n      flex: '1',\r\n    };\r\n    const rightColStyle: SxStyleProp = {\r\n      textAlign: 'right',\r\n      mr: '5%',\r\n      flex: '2',\r\n    };\r\n\r\n    return Object.keys(clubContactInfo).map((info) => {\r\n      return (\r\n        // the text row\r\n        <div sx={contactInfoWrapperStyle} key={info}>\r\n          <div\r\n            sx={{\r\n              ...colStyle,\r\n              ...leftColStyle,\r\n            }}\r\n          >\r\n            <p sx={textStyle}>{clubContactInfo[info].formattedTitle}</p>\r\n          </div>\r\n\r\n          <div\r\n            sx={{\r\n              ...colStyle,\r\n              ...rightColStyle,\r\n            }}\r\n          >\r\n            <p sx={textStyle}>{clubContactInfo[info].value}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <div sx={textContainerStyle}>{getAllContactInfo()}</div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {theme} from '../../utils/theme';\r\n\r\nimport {ClubDescriptionDimensions} from './ClubPopup';\r\n\r\n/** The props for a `ClubDescriptionItem` component. */\r\nexport interface ClubDescriptionItemProps {\r\n  clubname: string;\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Constructs a `ClubDescriptionItem` component, for the sidebar\r\n * on a club popup with the club name and description.\r\n *\r\n * @param props   The props for this component.\r\n * @returns       A `ClubDescriptionItem` component.\r\n */\r\nexport const ClubDescriptionItem: React.FC<ClubDescriptionItemProps> = ({\r\n  clubname,\r\n  description,\r\n}): ReactElement => {\r\n  // Styles for the text and stuff\r\n  const wrapperStyle: SxStyleProp = {\r\n    // The full large side rectangle\r\n    // all hail absolute positioning -- because my sanity has\r\n    // been gone for a very long time\r\n    position: 'absolute',\r\n    width: ClubDescriptionDimensions.width,\r\n    left: ClubDescriptionDimensions.left,\r\n    height: ClubDescriptionDimensions.height,\r\n    top: ClubDescriptionDimensions.top,\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n\r\n    backgroundColor: theme.colors.background.light,\r\n  };\r\n  const titleWrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '45%',\r\n\r\n    // aligning the title text\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n\r\n    backgroundColor: theme.colors.secondary,\r\n    // using clipPath to make the cool slanted rectangle\r\n    // most modern browsers should support this so im sure its fine...\r\n\r\n    // rip that one guy using IE 5 though\r\n    clipPath: 'polygon(0 0, 100% 0, 100% 100%, 0 80%)',\r\n  };\r\n  const descriptionWrapperStyle: SxStyleProp = {\r\n    minHeight: '55%',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n  };\r\n  const titleStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.heading.event,\r\n    color: theme.colors.text.light,\r\n\r\n    margin: 'auto',\r\n  };\r\n  const descriptionStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.event,\r\n    color: theme.colors.text.darkSlate,\r\n\r\n    // text positioning and formatting yay\r\n    px: '5%',\r\n    margin: 'auto',\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <div sx={titleWrapperStyle}>\r\n        <h3 sx={titleStyle}>{clubname}</h3>\r\n      </div>\r\n      <div sx={descriptionWrapperStyle}>\r\n        <p sx={descriptionStyle}>{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useState, ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {TranslucentRectangle} from '../TranslucentRectangle';\r\nimport {FilledSquareLoader} from '../loading-components/FilledSquareLoader';\r\n\r\nimport {getImageUrl} from '../../utils/functions';\r\nimport {theme} from '../../utils/theme';\r\n\r\n/** The props for a `ClubPhoto` component. */\r\nexport interface ClubPhotoProps {\r\n  photoId: string;\r\n  width: number;\r\n}\r\n\r\n/**\r\n * Constructs a `ClubPhoto` component, for the background club\r\n * photo and the translucent rectangle on a club popup.\r\n *\r\n * @param props   The props for this component.\r\n * @returns       A `ClubPhoto` component.\r\n */\r\nexport const ClubPhoto: React.FC<ClubPhotoProps> = ({\r\n  photoId,\r\n  width,\r\n}): ReactElement => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  // Image styles --\r\n  const photoStyle: SxStyleProp = {\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    height: '100%',\r\n\r\n    backgroundColor: theme.colors.navbar + '88',\r\n  };\r\n  const rectStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    top: '28%',\r\n    left: '14%',\r\n\r\n    backgroundColor: theme.colors.secondary + '66',\r\n  };\r\n\r\n  // Functions --\r\n  /**\r\n   * Handles image loading and sets loading state to false.\r\n   */\r\n  const handleLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  /**\r\n   * Determines whether to render a LoadingSquare or not.\r\n   *\r\n   * @returns either a loading square or nothing.\r\n   */\r\n  const displayLoadingSquare = (): ReactElement | void => {\r\n    if (loading) {\r\n      return (\r\n        <FilledSquareLoader\r\n          extraStyling={{backgroundColor: theme.colors.navbar + '88'}}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Determines whether to display a club photo or a translucent div,\r\n   * depending on whether photoId is present.\r\n   *\r\n   * @returns either a club photo or a translucent div for background.\r\n   */\r\n  const displayClubPhoto = (): ReactElement => {\r\n    if (photoId) {\r\n      return (\r\n        <React.Fragment>\r\n          {displayLoadingSquare()}\r\n          <img\r\n            src={getImageUrl(photoId, width, 5000)}\r\n            alt=\"\"\r\n            sx={photoStyle}\r\n            onLoad={handleLoading}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <div sx={photoStyle}></div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {displayClubPhoto()}\r\n      <TranslucentRectangle\r\n        lengthX=\"100%\"\r\n        lengthY=\"100%\"\r\n        extraStyling={rectStyle}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useState, useRef, useEffect, ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {Club} from '../../utils/interfaces';\r\nimport {allowScrolling} from '../../utils/functions';\r\nimport {theme} from '../../utils/theme';\r\nimport {popIn} from '../../utils/animation';\r\nimport {ClubInfoItem} from './ClubInfoItem';\r\nimport {ClubDescriptionItem} from './ClubDescriptionItem';\r\nimport {ClubPhoto} from './ClubPhoto';\r\n// yes shari in case you couldnt tell from the code and the comments\r\n// i was really tired while coding this\r\n\r\n// Interfaces --\r\nexport interface ClubContactInfo {\r\n  // this can be expanded if we need more values\r\n  meetingDate: FormattedValue;\r\n  meetingFreq: FormattedValue;\r\n  meetingLoc: FormattedValue;\r\n  email?: FormattedValue;\r\n  instagram?: FormattedValue;\r\n}\r\n\r\ninterface FormattedValue {\r\n  formattedTitle: string; // the text that is displayed as the property name\r\n  value: string | ReactElement; // for possible links lol\r\n}\r\n\r\n// ============================================================\r\n// Dimensions -- edit them all here!\r\n// They are here instead of in their respective locations because:\r\n// 1. It is easy to edit them in one central location\r\n// 2. This component is controlling the other club components, so why not\r\n\r\n/** The club descrption box dimensions. */\r\nexport const ClubDescriptionDimensions = {\r\n  top: ['27.5%', '22.5%', '17.5%', '15%'],\r\n  left: ['3%', '5%', '5%', '10%'],\r\n  width: ['40%', '35%', '30%', '25%'],\r\n  height: ['45%', '55%', '65%', '70%'],\r\n};\r\n\r\n/** The bottom right club info box dimensions */\r\nexport const ClubInfoItemDimensions = {\r\n  bottom: ['24%', '16%', '16%', '8%'],\r\n  right: ['2.5%', '10%', '12%', '20%'],\r\n  width: ['45%', '35%', '35%', '25%'],\r\n};\r\n\r\n/** The background photo dimensions. */\r\nexport const ClubPhotoDimensions = {\r\n  top: ['32.5%', '27.5%', '22.5%', '20%'],\r\n  left: ['5%', '15%', '20%', '25%'],\r\n  width: ['90%', '70%', '60%', '50%'],\r\n  height: ['35%', '45%', '55%', '60%'],\r\n};\r\n\r\n// ============================================================\r\n/** The props for a `ClubPopup` component. */\r\nexport interface ClubPopupProps {\r\n  /** A function that will handle properly closing this component. */\r\n  closeHandler: () => void;\r\n  /** A `Club` object that contains all a specific club's information. */\r\n  clubInfo: Club;\r\n}\r\n\r\n// ClubPopup -- for the actual main club info popup\r\n/**\r\n * Constructs a `ClubPopup` component, which gives main club information\r\n * in the form of a popup.\r\n *\r\n * This component contains many controlled subcomponents used\r\n * to organize each section of the popup into its respective sections.\r\n * As a result, this component should be the main entry point to\r\n * constructing a new club popup, as the information this popup\r\n * receives is distributed properly to each controlled child.\r\n *\r\n * As this component does not know how to properly close itself,\r\n * a close handler must be provided alongside all information for one\r\n * club.\r\n *\r\n * @example\r\n * const closeHandler = () => {\r\n *    // assuming showPopup shows this popup\r\n *    setShowPopup(false);\r\n * }\r\n *\r\n * // Make sure popupClub adheres to the `Club` interface\r\n * <ClubPopup\r\n *    clubInfo={popupClub}\r\n *    closeHandler={closeHandler}\r\n * >\r\n *\r\n * @param props   The props for this component.\r\n * @returns       A `ClubPopup` component.\r\n */\r\nexport const ClubPopup: React.FC<ClubPopupProps> = ({\r\n  closeHandler,\r\n  clubInfo,\r\n}): ReactElement => {\r\n  const [width, setWidth] = useState<number>(0);\r\n  const clubPhotoRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!clubPhotoRef.current) return;\r\n\r\n    setWidth(Math.round(clubPhotoRef.current.getBoundingClientRect().width));\r\n  }, [clubPhotoRef]);\r\n\r\n  // Yay, styles\r\n  const overlayStyle: SxStyleProp = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.colors.background.darkOverlay,\r\n    opacity: 0.8,\r\n    zIndex: 15,\r\n    backdropFilter: 'blur(10px)',\r\n  };\r\n\r\n  const mainWrapperStyle: SxStyleProp = {\r\n    position: 'fixed',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n\r\n    zIndex: 17, // draw over everything\r\n\r\n    '@keyframes popIn': popIn,\r\n    animationName: 'popIn',\r\n    animationDuration: '1s',\r\n  };\r\n\r\n  /** The style of the div that handles the click event. */\r\n  const clickEventContainerStyle: SxStyleProp = {\r\n    width: '100%',\r\n    height: '100%',\r\n  };\r\n\r\n  const photoContainerStyle: SxStyleProp = {\r\n    position: 'absolute', // all hail absolute positioning\r\n    margin: 'auto',\r\n    top: ClubPhotoDimensions.top,\r\n    left: ClubPhotoDimensions.left,\r\n    width: ClubPhotoDimensions.width,\r\n    height: ClubPhotoDimensions.height,\r\n  };\r\n\r\n  /**\r\n   * All the club important contact information for the contact\r\n   * info rectangle.\r\n   */\r\n  // TODO: make instagram and email a link lol\r\n  const clubContactInfo: ClubContactInfo = {\r\n    meetingDate: {\r\n      formattedTitle: 'Meetings:',\r\n      value: clubInfo.meetingDay,\r\n    },\r\n    meetingFreq: {\r\n      formattedTitle: 'Freq:',\r\n      value: clubInfo.meetingFrequency,\r\n    },\r\n    meetingLoc: {\r\n      formattedTitle: 'Location:',\r\n      value: clubInfo.meetingLocation,\r\n    },\r\n    email: {formattedTitle: 'Email:', value: clubInfo.email},\r\n    instagram: {formattedTitle: 'Instagram', value: clubInfo.instagram},\r\n  };\r\n\r\n  /**\r\n   * Handles the closing of the popup by determining whether to\r\n   * call the close handler or not based on where was clicked.\r\n   *\r\n   * Since child elements can propagate `onClick` events, this function\r\n   * is important to make sure the element that called e was\r\n   * the parent element\r\n   * (ie. `e.currentTarget`, since it is binded to the parent element).\r\n   *\r\n   * @param e   The mouse event.\r\n   */\r\n  const handleClosingParent = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n  ): void => {\r\n    if (e.target === e.currentTarget) {\r\n      allowScrolling();\r\n      closeHandler();\r\n    }\r\n  };\r\n\r\n  return (\r\n    // sets the height, width, and position\r\n    <React.Fragment>\r\n      <div sx={overlayStyle} />\r\n      <div sx={mainWrapperStyle}>\r\n        {/* \r\n          Handles the click event to close the popup.\r\n          This is needed because of how click events propagate; more\r\n          details are in the documentation of handleClosingParent.*/}\r\n        <div sx={clickEventContainerStyle} onClick={handleClosingParent}>\r\n          {/* the background photo */}\r\n          <div sx={photoContainerStyle} ref={clubPhotoRef}>\r\n            <ClubPhoto photoId={clubInfo.photoId} width={width} />\r\n          </div>\r\n\r\n          {/* club information */}\r\n          <ClubDescriptionItem\r\n            clubname={clubInfo.name}\r\n            description={clubInfo.description}\r\n          />\r\n          <ClubInfoItem clubContactInfo={clubContactInfo} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useContext, useRef, useEffect, useState} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {BsThreeDots, BsSearch} from 'react-icons/bs';\r\nimport {FaTimes} from 'react-icons/fa';\r\n\r\nimport {Heading} from '../components/Heading';\r\nimport {Collapsable} from '../components/Collapsable';\r\n\r\nimport {theme, FIRST_BREAKPOINT} from '../utils/theme';\r\nimport {\r\n  IInfoContext,\r\n  InfoContext,\r\n  ISetTransparentCtx,\r\n  SetTransparentCtx,\r\n} from '../utils/contexts';\r\nimport {\r\n  getImageUrl,\r\n  disallowScrolling,\r\n  randNum,\r\n  randInt,\r\n} from '../utils/functions';\r\nimport {Club} from '../utils/interfaces';\r\n\r\nimport clubBackground from '../assets/clubBackground.png';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport {ClubPopup} from '../components/club-popup/ClubPopup';\r\n\r\n//x1, y1 - top middle\r\n//x2, y2 - bottom left\r\n//x3, y3 - bottom right\r\nclass BgTriangleProp {\r\n  private x1: string;\r\n  private y1: string;\r\n  private x2: string;\r\n  private y2: string;\r\n  private x3: string;\r\n  private y3: string;\r\n  private style: SxStyleProp = {};\r\n\r\n  constructor(x1, y1, x2, y2, x3, y3, style: SxStyleProp) {\r\n    this.x1 = x1;\r\n    this.x2 = x2;\r\n    this.x3 = x3;\r\n    this.y1 = y1;\r\n    this.y2 = y2;\r\n    this.y3 = y3;\r\n    this.style = style;\r\n  }\r\n\r\n  public getStyle = () => this.style;\r\n\r\n  public getClipPath = () => {\r\n    return `polygon(${this.x1} ${this.y1}, ${this.x2} ${this.y2}, ${this.x3} ${this.y3})`;\r\n  };\r\n}\r\n\r\nexport const Clubs: React.FC = () => {\r\n  const {clubs, clubHighlights} = useContext<IInfoContext>(InfoContext);\r\n  const [height, setHeight] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [isPopup, setIsPopup] = useState<boolean>(false);\r\n  const [popupClub, setPopupClub] = useState<Club>(null);\r\n  const pageRef = useRef<HTMLDivElement>(null);\r\n  const bgRectWidth = useRef<number[]>([]);\r\n  const bgTriangleProp = useRef<BgTriangleProp[]>([]);\r\n\r\n  const {setTransparent} = useContext<ISetTransparentCtx>(SetTransparentCtx);\r\n  useEffect(() => setTransparent(false), []);\r\n\r\n  useEffect(() => {\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        setHeight(entry.target.clientHeight);\r\n      });\r\n    });\r\n    ro.observe(pageRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  if (!clubs || !clubHighlights) {\r\n    return <React.Fragment />;\r\n  }\r\n\r\n  /**\r\n   * Gets the list of clubs\r\n   */\r\n  const getClubList = () => {\r\n    const categories = {};\r\n    clubs.forEach((club) => {\r\n      if (categories[club.category]) {\r\n        categories[club.category].push(club);\r\n      } else {\r\n        categories[club.category] = [club];\r\n      }\r\n    });\r\n\r\n    const getClubs = (category) => {\r\n      return categories[category].map((club) => {\r\n        return (\r\n          <div\r\n            onClick={() => {\r\n              setPopupClub(club);\r\n              setIsPopup(true);\r\n            }}\r\n          >\r\n            {club.name}\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n\r\n    //remember to change this if you rename\r\n    const other = 'Other';\r\n\r\n    return Object.keys(categories)\r\n      .sort((a, b) => (a === other ? 1 : (b === other ? -1 : a.localeCompare(b)))) \r\n      .map((category, index) => {\r\n        const titleStyle: SxStyleProp = {\r\n          color: theme.colors.text.darkGray,\r\n          borderColor: theme.colors.text.darkGray,\r\n          fontSize: theme.fontSizes.bodyLarge,\r\n          fontFamily: theme.fonts.body,\r\n          '&:hover': {\r\n            color: theme.colors.text.darkGray,\r\n            cursor: 'pointer',\r\n          },\r\n        };\r\n        const childrenStyle: SxStyleProp = {\r\n          color: theme.colors.text.darkSlate,\r\n          borderColor: theme.colors.text.darkSlate,\r\n          ml: '80%',\r\n          pl: '1em',\r\n          fontSize: theme.fontSizes.bodySmall,\r\n          width: '100%',\r\n          '&:hover': {\r\n            cursor: 'pointer',\r\n          },\r\n        };\r\n        const titleWrapper: SxStyleProp = {\r\n          textAlign: 'right',\r\n        };\r\n        const titleComponent = (\r\n          <div sx={titleWrapper}>\r\n            {category} <BsThreeDots />\r\n          </div>\r\n        );\r\n\r\n        return (\r\n          <Collapsable\r\n            title={titleComponent}\r\n            titleStyle={titleStyle}\r\n            childrenStyle={childrenStyle}\r\n            collapsed={true}\r\n            collapseTime={0.002}\r\n          >\r\n            {getClubs(category)}\r\n          </Collapsable>\r\n        );\r\n      });\r\n  };\r\n\r\n  //=================================================\r\n  //querying\r\n  const getSearchResult = (searchStr: string) => {\r\n    return clubs.filter((club) => {\r\n      if (!club.name) return false;\r\n      return club.name.toLowerCase().includes(searchStr.toLowerCase());\r\n    });\r\n  };\r\n\r\n  const displaySearchResults = () => {\r\n    const wrapperStyle: SxStyleProp = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      mx: 'auto',\r\n    };\r\n    const style: SxStyleProp = {\r\n      color: theme.colors.text.darkGray,\r\n      borderColor: theme.colors.text.darkGray,\r\n      fontSize: theme.fontSizes.bodyLarge,\r\n      fontFamily: theme.fonts.body,\r\n      padding: '0.3em',\r\n      zIndex: 2,\r\n      display: 'block',\r\n      margin: 'auto',\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    };\r\n    const results = getSearchResult(query).map((club) => {\r\n      return (\r\n        <div\r\n          sx={style}\r\n          onClick={() => {\r\n            setPopupClub(club);\r\n            setIsPopup(true);\r\n          }}\r\n        >\r\n          {club.name}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return <div sx={wrapperStyle}>{results}</div>;\r\n  };\r\n\r\n  //=================================================\r\n  //background decorations\r\n  const getTransluteRects = () => {\r\n    const getStyle = (i) => {\r\n      const style: SxStyleProp = {\r\n        position: 'absolute',\r\n        height: ['50%', '20%'],\r\n        top: (i + 1) * 200,\r\n        width: ['90%', '70%', `${bgRectWidth.current[i]}%`],\r\n        backgroundColor: theme.colors.background.overlay,\r\n        right: `${0}%`,\r\n        zIndex: 0,\r\n      };\r\n      return style;\r\n    };\r\n\r\n    return Array.from(new Array(Math.floor(height / 250)).keys()).map((i) => {\r\n      if (!bgRectWidth.current[i]) bgRectWidth.current.push(randNum(5, 55));\r\n      return <div sx={getStyle(i)} />;\r\n    });\r\n  };\r\n\r\n  const getTriangleImages = () => {\r\n    const getStyle = (i: number) => {\r\n      const imageUrl = getImageUrl(\r\n        clubHighlights[i % clubHighlights.length].photoId,\r\n        400,\r\n        400,\r\n      );\r\n      const style: SxStyleProp = {\r\n        zIndex: 0,\r\n        backgroundColor: theme.colors.secondary,\r\n        backgroundImage: `url(${imageUrl})`,\r\n        clipPath: bgTriangleProp.current[i].getClipPath(),\r\n        ml: 'auto',\r\n        ...bgTriangleProp.current[i].getStyle(),\r\n        backgroundSize: 'cover',\r\n      };\r\n      return style;\r\n    };\r\n\r\n    const triangles = Array.from(new Array(Math.floor(height / 250)).keys()).map((i) => {\r\n      if (!bgTriangleProp.current[i]) {\r\n        bgTriangleProp.current.push(\r\n          new BgTriangleProp(\r\n            `${randInt(40, 55)}%`,\r\n            0,\r\n            0,\r\n            `${randInt(60, 100)}%`,\r\n            '100%',\r\n            `${randInt(30, 100)}%`,\r\n            {\r\n              width: `${randInt(7, 15)}vmax`,\r\n              height: `${randInt(7, 15)}vmax`,\r\n              mr: `${randInt(20, 50)}%`,\r\n              my: `${randInt(2, 7)}%`,\r\n            },\r\n          ),\r\n        );\r\n      }\r\n      return <div sx={getStyle(i)} />;\r\n    });\r\n\r\n    const wrapper: SxStyleProp = {\r\n      width: ['30%', '40%'],\r\n      top: '40%',\r\n      right: 0,\r\n      position: 'absolute',\r\n      zIndex: 0,\r\n    };\r\n\r\n    //return <div sx={wrapper}>{triangles}</div>;\r\n  };\r\n\r\n  const renderClubPopup = () => {\r\n    if (isPopup && popupClub) {\r\n      disallowScrolling(window.scrollY);\r\n      return (\r\n        <ClubPopup\r\n        clubInfo={popupClub}\r\n        closeHandler={() => setIsPopup(false)}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  //=================================================\r\n  //styles\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.beige,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    ...theme.bodyPadding,\r\n    pb: '20vh',\r\n    overflow: 'hidden',\r\n    flexDirection: ['column', 'row'],\r\n    position: 'relative',\r\n  };\r\n\r\n  const clubListWrapper: SxStyleProp = {\r\n    display: 'block',\r\n    ml: [0, '10%', '30%'],\r\n    zIndex: 2,\r\n    mr: ['50%', 0],\r\n  };\r\n  const lineStyle: SxStyleProp = {\r\n    backgroundColor: theme.colors.secondary,\r\n    height: 2,\r\n    width: '100%',\r\n    borderRadius: 2,\r\n    my: '0.5em',\r\n  };\r\n\r\n  const backgroundImgStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    top: height * 0.4,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    width: '100%',\r\n    height: height * 0.6,\r\n    zIndex: 1,\r\n  };\r\n\r\n  const searchBoxStyle: SxStyleProp = {\r\n    height: '1.3em',\r\n    borderRadius: 15,\r\n    borderColor: theme.colors.navbar,\r\n    borderWidth: 1,\r\n    width: '100%',\r\n    py: '1em',\r\n    px: '0.5em',\r\n    fontSize: theme.fontSizes.bodySmall.map((n) => n + 5),\r\n    fontFamily: theme.fonts.body,\r\n    '&:focus': {\r\n      borderWidth: 1.5,\r\n      outline: 'none',\r\n    },\r\n    bg: theme.colors.background.light,\r\n  };\r\n\r\n  const searchBoxWrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    width: ['100%', '40%', '20%'],\r\n    ml: 'auto', //change to 0 if there's club app button\r\n    mt: ['2em', 'auto'],\r\n    mb: ['1em', 'auto'],\r\n    fontSize: theme.fontSizes.bodySmall.map((n) => n + 5),\r\n  };\r\n  const iconStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    right: '0.5em',\r\n    top: '0.5em',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  };\r\n\r\n  const headingStyle: SxStyleProp = {\r\n    display: 'inline',\r\n    mt: ['20%', 'auto'],\r\n    mb: [0, 'auto'],\r\n  };\r\n\r\n  const clubAppButton: SxStyleProp = {\r\n    color: theme.colors.primary,\r\n    borderWidth: 1,\r\n    borderStyle: 'solid',\r\n    borderColor: theme.colors.primary,\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: [16, 20],\r\n    textAlign: 'center',\r\n    my: 'auto',\r\n    ml: [0, 'auto'],\r\n    mr: [0, '2em'],\r\n    px: '1em',\r\n    py: '0.3em',\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      cursor: 'pointer',\r\n      borderColor: theme.colors.navbar,\r\n      color: theme.colors.navbar,\r\n    },\r\n  };\r\n\r\n  //==============================================================\r\n  //render\r\n\r\n  const isFirstBreakpoint = window.innerWidth > FIRST_BREAKPOINT;\r\n\r\n  return (\r\n    <div sx={wrapperStyle} ref={pageRef}>\r\n      <img src={clubBackground} sx={backgroundImgStyle} />\r\n      {getTransluteRects()}\r\n\r\n      <Heading\r\n        text=\"2021-2022 Clubs\"\r\n        alignment={isFirstBreakpoint ? 'left' : 'center'}\r\n        underline={false}\r\n        extraStyling={headingStyle}\r\n      />\r\n      {/* a rare hard-coded club app cuz i dont feel like making it not hardcoded for now */}\r\n      {/* <a sx={clubAppButton} href=\"https://forms.gle/65KmNA17PayScrqH6\">\r\n        Club application\r\n      </a> */}\r\n\r\n      <div sx={searchBoxWrapperStyle}>\r\n        <input\r\n          sx={searchBoxStyle}\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Club name\"\r\n        />\r\n        {query === '' ? (\r\n          <BsSearch sx={iconStyle} />\r\n        ) : (\r\n          <FaTimes sx={iconStyle} onClick={() => setQuery('')} />\r\n        )}\r\n      </div>\r\n\r\n      <div sx={lineStyle} />\r\n      {query === '' ? (\r\n        <div sx={clubListWrapper}>{getClubList()}</div>\r\n      ) : (\r\n        displaySearchResults()\r\n      )}\r\n\r\n      {isFirstBreakpoint ? getTriangleImages() : undefined}\r\n\r\n      {renderClubPopup()}\r\n    </div>\r\n  );\r\n};","/** @jsx jsx */\r\nimport React, {useState, useContext, useEffect} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n// while it's under construction\r\nimport {FaWrench} from 'react-icons/fa';\r\n\r\nimport {spin} from '../utils/animation';\r\nimport {theme} from '../utils/theme';\r\nimport { ISetTransparentCtx, SetTransparentCtx } from '../utils/contexts';\r\nimport { useToggleNavColour } from '../utils/hooks';\r\n\r\n// import { Calendar } from '@fullcalendar/core';\r\n// import googleCalendarPlugin from '@fullcalendar/google-calendar';\r\n\r\nexport interface CalendarProps {}\r\n\r\nexport const CCalendar: React.FC<CalendarProps> = () => {\r\n  const [spinAmount, setSpinAmount] = useState(1);\r\n  \r\n  const {setTransparent} = useContext<ISetTransparentCtx>(SetTransparentCtx);\r\n  const toggleNavUnsub = useToggleNavColour(window.innerHeight/5);\r\n\r\n  useEffect(() => {\r\n    setTransparent(true);\r\n    return toggleNavUnsub;\r\n  }, [setTransparent, toggleNavUnsub]);\r\n  // Styles for the page\r\n  const wrapperStyle: SxStyleProp = {\r\n    // the main page div\r\n\r\n    width: '100%',\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.beige,\r\n  };\r\n  const innerWrapperStyle: SxStyleProp = {\r\n    // the div that contains everything\r\n\r\n    top: '20vh',\r\n    position: 'relative',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    pb: '14em',\r\n\r\n    textAlign: 'center',\r\n  };\r\n  const iframeContainerStyle: SxStyleProp = {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (spinAmount < 9) {\r\n      setSpinAmount(spinAmount + 1);\r\n    }\r\n  };\r\n\r\n\r\n  const renderSpannerImage = () => {\r\n    return (\r\n      <FaWrench\r\n        size={50}\r\n        sx={{\r\n          position: 'relative',\r\n          maxWidth: [25, 50],\r\n          mb: '2%',\r\n          color: theme.colors.text.light,\r\n          '@keyframes spin': spin,\r\n\r\n          animation:\r\n            spinAmount === 0\r\n              ? 'none'\r\n              : 'spin ' +\r\n                (2.2 - 0.2 * spinAmount).toString() +\r\n                's linear infinite',\r\n        }}\r\n        onClick={handleClick}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <div sx={innerWrapperStyle}>\r\n        <div sx={iframeContainerStyle}>\r\n          <iframe\r\n            title=\"RHHS School Calendar\"\r\n            src=\"https://calendar.google.com/calendar/embed?height=600&wkst=1&bgcolor=%23FFFFFF&src=gapps.yrdsb.ca_3kml71rdv1af34phpclvo9ps50%40group.calendar.google.com&color=%23333333&ctz=America%2FToronto\"\r\n            width=\"80%\"\r\n            height=\"600px\"\r\n          ></iframe>\r\n          {/* <div\r\n            sx={{\r\n              mt: '5%',\r\n              mx: 'auto',\r\n              width: '90%',\r\n            }}\r\n          >\r\n            {renderSpannerImage()}\r\n          </div>\r\n          <p\r\n            sx={{\r\n              fontFamily: theme.fonts.body,\r\n              fontSize: theme.fontSizes.body,\r\n              color: theme.colors.text.light,\r\n            }}\r\n          >\r\n            A more lively calendar is under development! For now, though, enjoy\r\n            this embedded one!\r\n          </p> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useContext, useState, useEffect, ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport { FilledSquareLoader } from \"../components/loading-components/FilledSquareLoader\";\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {LabelledPhotos} from '../utils/interfaces';\r\nimport {InfoContext, IInfoContext, ISetTransparentCtx, SetTransparentCtx} from '../utils/contexts';\r\nimport { useToggleNavColour } from '../utils/hooks';\r\n\r\n// yes i commented out a lot of code\r\n// yes i'll delete it later if we don't end up needing it\r\n\r\nexport const Map: React.FC = () => {\r\n  const [loadingFirstImage, setLoadingFirstImage] = useState<boolean>(true);\r\n  const [loadingSecondImage, setLoadingSecondImage] = useState<boolean>(true);\r\n  // const [showRealMap, setShowRealMap] = useState<boolean>(false);\r\n\r\n  const {setTransparent} = useContext<ISetTransparentCtx>(SetTransparentCtx);\r\n  const toggleNavUnsub = useToggleNavColour(window.innerHeight/3);\r\n\r\n  useEffect(() => {\r\n    setTransparent(true);\r\n    return toggleNavUnsub;\r\n  }, []);\r\n  \r\n  const allLabelledPhotos: LabelledPhotos[] = useContext<IInfoContext>(\r\n    InfoContext,\r\n  ).labelledPhotos;\r\n\r\n  // filter out and find the first and second floor photo\r\n  const firstFloorPhoto = `https://drive.google.com/uc?export=view&id=${\r\n    allLabelledPhotos.find((a) => a.photoLabel === 'School First Floor').photoId\r\n    // allLabelledPhotos.find((a) => a.photoLabel === (showRealMap ?\r\n    // 'School First Floor' : 'Halloweek first floor'))\r\n    // .photoId\r\n  }`;\r\n  const secondFloorPhoto = `https://drive.google.com/uc?export=view&id=${\r\n    allLabelledPhotos.find((a) => a.photoLabel === 'School Second Floor')\r\n    .photoId\r\n    // allLabelledPhotos.find((a) => a.photoLabel === (showRealMap ?\r\n    //   'School Second Floor' : 'Halloweek second floor'))\r\n    //   .photoId\r\n  }`;\r\n\r\n  // styles\r\n  const backgroundStyle: SxStyleProp = {\r\n    backgroundColor: theme.colors.background.dark,\r\n    width: '100%',\r\n    minHeight: '100vh',\r\n    textAlign: 'center',\r\n  };\r\n  const divStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    top: '15vh',\r\n    width: '100%',\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n  };\r\n  const imageDivStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    // push image up\r\n    mt: '5%',\r\n\r\n    // center the image\r\n    ml: 'auto',\r\n    mr: 'auto',\r\n\r\n    // change this if the image should be a diff size\r\n    width: '95%',\r\n    height: 'auto',\r\n  };\r\n  const imageStyle: SxStyleProp = {\r\n    width: '100%',\r\n    // leave this to preserve aspect ratio\r\n    height: 'auto',\r\n  };\r\n  // const mapButtonStyle: SxStyleProp = {\r\n  //   color: theme.colors.background.light,\r\n    \r\n  //   borderWidth: 4,\r\n  //   borderStyle: 'solid',\r\n  //   borderColor: theme.colors.background.light,\r\n  //   borderRadius: \"8px\",\r\n\r\n  //   fontFamily: theme.fonts.body,\r\n  //   fontSize: [16, 20],\r\n  //   textAlign: 'center',\r\n  //   my: 'auto',\r\n  //   ml: [0, 'auto'],\r\n  //   mr: [0, '2em'],\r\n  //   px: '1em',\r\n  //   py: '0.3em',\r\n\r\n  //   transition: 'border-color 0.5s ease, color 0.5s ease',\r\n  //   '&:hover': {\r\n  //     cursor: 'pointer',\r\n  //     borderColor: theme.colors.text.light,\r\n  //     color: theme.colors.text.light,\r\n  //   },\r\n  // };\r\n\r\n  /**\r\n   * Handles an image loading by setting the specified isLoading\r\n   * function to false.\r\n   * @param setLoadingFunction - The React setState function to be called\r\n   * once a load event occurs.\r\n   */\r\n  const handleLoad = (\r\n    setLoadingFunction: React.Dispatch<React.SetStateAction<boolean>>,\r\n  ) => {\r\n    setLoadingFunction(false);\r\n  };\r\n\r\n  // /**\r\n  //  * Handles the map toggle by resetting loading states and toggling\r\n  //  * the map to display.\r\n  //  */\r\n  // const handleToggle = () => {\r\n  //   setLoadingFirstImage(true);\r\n  //   setLoadingSecondImage(true);\r\n\r\n  //   setShowRealMap(!showRealMap);\r\n  // }\r\n\r\n  // This was for HalloWeek\r\n  // Delete this later if not needed\r\n  // const displayLore = (): ReactElement => {\r\n  //   return (\r\n  //     <div sx={{\r\n  //       width: \"100%\",\r\n  //       mt: '1em',\r\n  //       backgroundColor: theme.colors.text.darkSlate\r\n  //     }}>\r\n  //       <div sx={{\r\n  //         width: '90%',\r\n  //         ml: 'auto',\r\n  //         mr: 'auto',\r\n  //         my: '2.5%',\r\n  //         fontSize: theme.fontSizes.bodySmall,\r\n  //       }}>\r\n  //         <p sx={{color: theme.colors.text.light}}> \r\n  //           RHHS HQ, situated on an undisclosed moon orbiting Neptune, \r\n  //           is one of the world's best research institutes. In fact, \r\n  //           they (along with the crew) \r\n  //           recently moved their main facilities to said moon so that they can\r\n  //           truly claim to be \"the best research institute in the world\", and\r\n  //           technically not be wrong (thanks, semantics).\r\n  //         </p>\r\n  //         <p sx={{color: theme.colors.text.light}}> \r\n  //           The HQ contains everything that an isolated external outpost\r\n  //           would need to function and do research, like laboratories,\r\n  //           specimen rooms, a large medBay, social media, and dorms. \r\n  //           RHHS HQ boasts the first greenhouse\r\n  //           on a secluded moon (something a few crewmates have\r\n  //           strongly proposed establishing), and state-of-the-art communications\r\n  //           and electrical equipment, allowing crew to not have 4\r\n  //           tasks in electrical (unlike that dinky ship we also have). This\r\n  //           will likely help reduce electrical-room-related trauma within the crew.\r\n  //           It also possesses lounge and relaxation facilities, as well\r\n  //           as storage units that no one uses, and a large navigation facility\r\n  //           that, frankly, no one really knows the purpose of.\r\n  //         </p>\r\n  //         <p sx={{color: theme.colors.background.light}}>\r\n  //           Unfortunately, some shapeshifting moon inhabitants have\r\n  //           blended in with the crew and wish to take over our whiteboard\r\n  //           tables and cool furniture. It is up to the crew to root out these\r\n  //           \"Impostors\" and secure this essential base, so that it may\r\n  //           once again be used as a center of knowledge, and a\r\n  //           starting point for future adventures.\r\n  //         </p>\r\n  //       </div>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n    <div sx={backgroundStyle}>\r\n      <div sx={divStyle}>\r\n        {/* <div sx={mapButtonStyle} onClick={() => handleToggle()}>\r\n          {showRealMap ? \"Freeplay\" : \"Exit Freeplay\"}\r\n        </div> */}\r\n\r\n        {/* {showRealMap ? undefined : displayLore()} */}\r\n\r\n        <div sx={imageDivStyle}>\r\n          {loadingFirstImage ? (\r\n            <FilledSquareLoader isTransparent={true} />\r\n          ) : undefined}\r\n          <img\r\n            src={firstFloorPhoto}\r\n            alt=\"The school's first floor.\"\r\n            sx={imageStyle}\r\n            onLoad={() => handleLoad(setLoadingFirstImage)}\r\n            onError={() => handleLoad(setLoadingFirstImage)}\r\n          />\r\n        </div>\r\n\r\n        {/* mb to push up footer */}\r\n        <div sx={{...imageDivStyle, mb: ['8em', '14em']}}>\r\n          {loadingSecondImage ? (\r\n            <FilledSquareLoader isTransparent={true} />\r\n          ) : undefined}\r\n          <img\r\n            src={secondFloorPhoto}\r\n            alt=\"The school's second floor.\"\r\n            sx={imageStyle}\r\n            onLoad={() => handleLoad(setLoadingSecondImage)}\r\n            onError={() => handleLoad(setLoadingSecondImage)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  ReactElement,\r\n} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {getImageUrl} from '../../utils/functions';\r\n\r\n/**\r\n * The props for a `ViewerPhoto` component.\r\n */\r\nexport interface ViewerPhotoProps {\r\n  /** A url to an image. */\r\n  photoId: string;\r\n  /** A function that handles the loading of this image externally. */\r\n  loadHandler: () => void;\r\n  /** The orientation of the provided image. */\r\n  orientation: string;\r\n}\r\n\r\n//=====================================================================\r\n/**\r\n * ViewerPhoto is for the main big photo in the PhotoViewer.\r\n * \r\n * @param props   The props for this component.\r\n * @returns       a `ViewerPhoto` component.\r\n */\r\nexport const ViewerPhoto: React.FC<ViewerPhotoProps> = ({\r\n  photoId,\r\n  loadHandler,\r\n  orientation,\r\n}): ReactElement => {\r\n  const [mainImageLimit, setMainImageLimit] = useState<number>(0);\r\n  const mainImageRefDiv = useRef<HTMLDivElement>(null);\r\n\r\n  // Adjusting the image size when fetched based on orientation of image\r\n  useEffect(() => {\r\n    if (!mainImageRefDiv.current) return;\r\n\r\n    // Adjusting the size limit based on the right property\r\n    if (!orientation || orientation === 'portrait') {\r\n      setMainImageLimit(\r\n        Math.round(mainImageRefDiv.current.getBoundingClientRect().width),\r\n      );\r\n    } else {\r\n      setMainImageLimit(\r\n        Math.round(mainImageRefDiv.current.getBoundingClientRect().height),\r\n      );\r\n    }\r\n  }, [mainImageRefDiv, orientation]);\r\n\r\n  // Fun styles --\r\n  const mainImageContainerStyle: SxStyleProp = {\r\n    // positioning\r\n    position: 'relative',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n\r\n    mx: 'auto',\r\n    zIndex: 15, // to draw over the overlay\r\n\r\n    // adjusting the size\r\n    width: orientation === 'landscape' ? '80%' : '35%',\r\n    height: '100%',\r\n\r\n    '@media only screen and (max-width: 800px)': {\r\n      height: orientation === 'landscape' ? '35%' : '75%',\r\n      width: '100%',\r\n      margin: 'auto',\r\n    },\r\n  };\r\n  const mainImageStyle: SxStyleProp = {\r\n    // positioning\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    height: '100%',\r\n\r\n    // to center the image\r\n    ml: 'auto',\r\n    mr: 'auto',\r\n    mt: 'auto',\r\n    mb: 'auto',\r\n\r\n    // small fade animation while hovering\r\n    transition: '.5s ease',\r\n    '&:hover': {\r\n      opacity: 0.9,\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Fetches and returns a url to a specified drive photo with\r\n   * formatted width and height.\r\n   * \r\n   * The exact dimensions of the photo\r\n   * fetched are dependant on the orientation of said photo.\r\n   * \r\n   * @param photoId - the drive id for the photo.\r\n   * @returns a url to the specified photo.\r\n   */\r\n  const fetchMainImageUrl = (photoId: string): string => {\r\n    return orientation === 'landscape'\r\n      ? getImageUrl(photoId, 5000, mainImageLimit)\r\n      : getImageUrl(photoId, mainImageLimit, 5000);\r\n  };\r\n\r\n  /**\r\n   * Performs this image's loading functions.\r\n   */\r\n  const performLoadActivities = (): void => {\r\n    loadHandler();\r\n  };\r\n\r\n  // Returning the viewer code\r\n  return (\r\n    <div sx={mainImageContainerStyle} ref={mainImageRefDiv}>\r\n      <img\r\n        id=\"main-photo\"\r\n        src={fetchMainImageUrl(photoId)}\r\n        alt=\"\"\r\n        sx={mainImageStyle}\r\n        onLoad={performLoadActivities}\r\n        onError={() => {\r\n          console.log('failed to load main image');\r\n          loadHandler();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../../utils/theme';\r\n\r\n/**\r\n * The props for a `ViewerButton` component.\r\n */\r\nexport interface ViewerButtonProps {\r\n  /** Image source, either a URL or a ReactElement (usually a react-icon) */\r\n  imageSrc: string | ReactElement;\r\n  /** An external action that this button will perform on click. */\r\n  actionHandler: () => void;\r\n  /** Extra css for this button. */\r\n  extraButtonStyling?: SxStyleProp;\r\n}\r\n\r\n/**\r\n * Creates a `ViewerButton` component, a general component meant to be\r\n * used for any buttons on a `PhotoViewer` component. \r\n * \r\n * @param props   The props for this component.\r\n * @returns       a `ViewerButton` component.\r\n */\r\nexport const ViewerButton: React.FC<ViewerButtonProps> = ({\r\n  imageSrc,\r\n  actionHandler,\r\n  extraButtonStyling,\r\n}): ReactElement => {\r\n  const buttonContainerStyle: SxStyleProp = {\r\n    position: 'relative',\r\n\r\n    mx: '3%',\r\n\r\n    width: ['50px', '45px', '50px', '55px'],\r\n    height: ['50px', '45px', '50px', '55px'],\r\n\r\n    borderRadius: '50%',\r\n\r\n    backgroundColor: theme.colors.background.darkest,\r\n    color: theme.colors.text.light,\r\n    zIndex: 15, // draw buttons on top of overlay\r\n\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n\r\n    // If imgsrc is a string it can simply be used as background image\r\n    backgroundImage:\r\n      typeof imageSrc === 'string' ? 'url(' + imageSrc + ')' : 'none',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n\r\n    // small fade animation while hovering\r\n    transition: '.2s ease',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      opacity: 0.8,\r\n    },\r\n\r\n    ...extraButtonStyling,\r\n  };\r\n\r\n  return (\r\n    <div sx={buttonContainerStyle} onClick={actionHandler}>\r\n      {!(typeof imageSrc === 'string') ? imageSrc : undefined}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {theme} from '../../utils/theme';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\n/** The props for a `CircleLoader` component. */\r\nexport interface CircleLoaderProps {\r\n  width?: number;\r\n  height?: number;\r\n  color?: string;\r\n}\r\n\r\n// yes shari i decided to import a library just for spinners\r\n\r\n/**\r\n * Constructs a `CircleLoader` component, a wrapper component\r\n * for a tail spin loader from the `react-loader-spinner` library.\r\n *\r\n * @param props   The props for this component.\r\n * @returns       A tail spin loader component from the\r\n *                `react-loader-spinner` library.\r\n * @see           {@link https://www.npmjs.com/package/react-loader-spinner|react-loader-spinner}\r\n */\r\nexport const CircleLoader: React.FC<CircleLoaderProps> = ({\r\n  width,\r\n  height,\r\n  color,\r\n}) => {\r\n  return (\r\n    <Loader\r\n      type=\"TailSpin\"\r\n      color={color ? color : theme.colors.secondary}\r\n      width={width}\r\n      height={height}\r\n    />\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  ReactElement,\r\n  useCallback,\r\n} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {FaTimes, FaArrowRight, FaArrowLeft} from 'react-icons/fa';\r\n\r\nimport {ViewerPhoto} from './ViewerPhoto';\r\nimport {ViewerButton} from './ViewerButton';\r\nimport {CircleLoader} from '../loading-components/CircleLoader';\r\n\r\nimport {theme} from '../../utils/theme';\r\nimport {\r\n  getImageUrl,\r\n  detectSwipeDirection,\r\n  allowScrolling,\r\n  disallowScrolling,\r\n} from '../../utils/functions';\r\n// todo: minor, but make naming consistant i guess\r\nimport {Photo as PhotoInfo} from '../../utils/interfaces';\r\n\r\n// yes shari since this function was messy i tried out a new\r\n// commenting style\r\n\r\n// Interfaces --\r\nexport interface Photo {\r\n  photoUrl: string;\r\n  photoNum: number;\r\n}\r\n\r\nexport interface PhotoViewerProps {\r\n  photos: PhotoInfo[];\r\n  startIndex: number;\r\n  closeHandler: () => void;\r\n}\r\n\r\n//=====================================================================\r\n/**\r\n * Creates a `PhotoViewer` component, which is a gallery viewer of\r\n * provided photos.\r\n *\r\n * This PhotoViewer has a main image which is placed in the center,\r\n * and an overlay that has the main image, only blurred, stretched,\r\n * and in the background.\r\n *\r\n * This PhotoViewer also consists of a left and right button, and an\r\n * exit button.\r\n *\r\n * Upon mounting this component, this PhotoViewer will lock the screen\r\n * and save the scroll location locally. If this PhotoViewer is ever\r\n * unmounting for any reason, it will unlock the screen. Manual locking/\r\n * unlocking of the screen externally from this PhotoViewer is\r\n * ill advised, and will result in unpredictable behaviour.\r\n *\r\n * This viewer does not know how to close itself, and must be provided\r\n * a reference to a parent `closeHandler` function to handle closing.\r\n *\r\n * @example\r\n * const closeHandler = () => {\r\n *    // assuming showViewer determines whether to draw this viewer\r\n *    setShowViewer(false);\r\n * }\r\n *\r\n * <PhotoViewer\r\n *    photos={allPhotos}\r\n *    startIndex={0}\r\n *    closeHandler={closeHandler}\r\n * >\r\n *\r\n * @param props the props for this component.\r\n * @returns     a `PhotoViewer` component.\r\n */\r\nconst PhotoViewer: React.FC<PhotoViewerProps> = ({\r\n  photos,\r\n  startIndex,\r\n  closeHandler,\r\n}): ReactElement => {\r\n  //-------------------------------------------------------------------\r\n  // React Hook Initialization --\r\n  //-------------------------------------------------------------------\r\n  const [index, setIndex] = useState<number>(startIndex);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [overlayWidth, setOverlayWidth] = useState<number>(0);\r\n  const overlayReferenceDiv = useRef<HTMLDivElement>(null);\r\n\r\n  const xTouchLoc = useRef<number>(-1);\r\n  const yTouchLoc = useRef<number>(-1);\r\n\r\n  // Setting up overlay width for proper background image sizing\r\n  useEffect(() => {\r\n    if (!overlayReferenceDiv.current) return;\r\n\r\n    setOverlayWidth(\r\n      Math.round(\r\n        overlayReferenceDiv.current.getBoundingClientRect().width + 1000,\r\n      ),\r\n    );\r\n  }, [overlayReferenceDiv]);\r\n\r\n  // Clean-up the viewer\r\n  useEffect(() => {\r\n    disallowScrolling(window.scrollY);\r\n    /*\r\n    Allow the user to scroll again if they exit the viewer\r\n    \r\n    Very important for mobile users! If they press back without\r\n    this while viewing a photo, their screens will be locked\r\n    (unscrollable)!\r\n\r\n    TODO: figure out how to return people to gallery if back button\r\n    is pressed here\r\n    */\r\n    return () => {\r\n      allowScrolling();\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * Increases the current image index.\r\n   */\r\n  const incrementIdx = useCallback(() => {\r\n    setIndex((index + 1) % photos.length);\r\n\r\n    setLoading(true);\r\n  }, [photos, index]);\r\n\r\n  /**\r\n   * Decreases the current image index.\r\n   */\r\n  const decrementIdx = useCallback(() => {\r\n    setIndex(index - 1 < 0 ? photos.length - 1 : index - 1);\r\n\r\n    setLoading(true);\r\n  }, [photos, index]);\r\n\r\n  /**\r\n   * Handles this viewer's cleanup functions, like re-enabling scrolling\r\n   * and closing the viewer.\r\n   *\r\n   * This function should not disable scrolling lock. Let the\r\n   * final clean-up unmount useEffect hook handle any clean-up of\r\n   * state that may persist after this component is unmounted.\r\n   *\r\n   * If this function allows scrolling, the clean-up function will\r\n   * send the viewer straight back up to top instead of back where\r\n   * they were before.\r\n   */\r\n  const handleClosing = useCallback((): void => {\r\n    closeHandler();\r\n  }, [closeHandler]);\r\n\r\n  /**\r\n   * Determines the action to be taken depending on what key was pressed.\r\n   *\r\n   * This is a memoized callback function to interact with keyboard\r\n   * functionality. It only needs to be created once.\r\n   * @param event - The event object emitted upon keyDown.\r\n   */\r\n  const reactToKeystrokes = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      switch (event.code) {\r\n        case 'Escape':\r\n          handleClosing();\r\n          break;\r\n        case 'ArrowRight':\r\n          incrementIdx();\r\n          break;\r\n        case 'ArrowLeft':\r\n          decrementIdx();\r\n          break;\r\n      }\r\n    },\r\n    [handleClosing, incrementIdx, decrementIdx],\r\n  );\r\n\r\n  /**\r\n   * Handles touchstart events for devices, and determines whether\r\n   * to later react to this event or not.\r\n   */\r\n  const initializeTouch = useCallback((event: TouchEvent) => {\r\n    const touchLocations = event.touches;\r\n\r\n    if (touchLocations.length === 1 && touchLocations[0]) {\r\n      // If the tap starts at the picture, just ignore.\r\n      // (for adjusting zoom level, perhaps).\r\n      if ((event.target as Element).id !== 'main-photo') {\r\n        xTouchLoc.current = touchLocations[0].clientX;\r\n        yTouchLoc.current = touchLocations[0].clientY;\r\n      }\r\n\r\n      /* \r\n    If you put a second finger down, there will be a very small\r\n    amount of time where an event with only one touch property \r\n    propegates before the proper 2 touch property event propegates,\r\n    and that can cause unwanted scrolling/shuffling.\r\n\r\n    We solve this by simply listening to any events with more than\r\n    one touch event, and reset the x and y location if we detect any.\r\n    Now we know that any touch events that pass these checks are\r\n    from a single finger.\r\n    */\r\n    } else if (touchLocations.length > 1) {\r\n      xTouchLoc.current = -1;\r\n      yTouchLoc.current = -1;\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Handles a touchend event, implying that a swipe has occured.\r\n   * Reacts to said swipe and performs any tasks as a result from that\r\n   * swipe.\r\n   */\r\n  const reactToSwipe = useCallback(\r\n    (event: TouchEvent) => {\r\n      // Make sure we are actually supposed to react to this event.\r\n      if (xTouchLoc.current === -1 || yTouchLoc.current === -1) return;\r\n\r\n      const xOld = xTouchLoc.current;\r\n      const yOld = yTouchLoc.current;\r\n      // Reset location\r\n      xTouchLoc.current = -1;\r\n      yTouchLoc.current = -1;\r\n\r\n      // If this doesn't exist, do nothing.\r\n      if (!event.changedTouches[0]) return;\r\n\r\n      const xMove = event.changedTouches[0].clientX;\r\n      const yMove = event.changedTouches[0].clientY;\r\n\r\n      switch (detectSwipeDirection({x: xOld, y: yOld}, {x: xMove, y: yMove})) {\r\n        case 'down': // swipe down == going up\r\n          decrementIdx();\r\n          break;\r\n        case 'up': // swipe up == going down\r\n          incrementIdx();\r\n          break;\r\n      }\r\n    },\r\n    [decrementIdx, incrementIdx],\r\n  );\r\n\r\n  // Setting up keyboard functionality\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', reactToKeystrokes, false);\r\n    document.addEventListener('touchstart', initializeTouch, false);\r\n    document.addEventListener('touchend', reactToSwipe, false);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', reactToKeystrokes, false);\r\n      document.removeEventListener('touchstart', initializeTouch, false);\r\n      document.removeEventListener('touchend', reactToSwipe, false);\r\n    };\r\n  }, [reactToKeystrokes, initializeTouch, reactToSwipe]);\r\n\r\n  //-------------------------------------------------------------------\r\n  // Functions --\r\n  //-------------------------------------------------------------------\r\n  /**\r\n   * Generates a larger version of the specified image, usable as a full\r\n   * page background.\r\n   * @param photoId - the drive id of the photo.\r\n   * @returns a url to the enlarged photo.\r\n   */\r\n  const fetchOverlayImageUrl = (photoId: string): string => {\r\n    return getImageUrl(photoId, overlayWidth, 5000);\r\n  };\r\n\r\n  /**\r\n   * Determines if this viewer's loading state should be changed\r\n   * or not, based on if all the images loaded or not.\r\n   */\r\n  const handleLoadingState = (): void => {\r\n    if (checkIfImagesLoaded(overlayReferenceDiv.current)) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles when the overlay loads.\r\n   */\r\n  const handleOverlayLoadingState = (): void => {\r\n    handleLoadingState();\r\n  };\r\n\r\n  /**\r\n   * Checks a provided html div's img children and sees if they loaded\r\n   * in or not.\r\n   * @param refDiv - the html div that contains all the imgs\r\n   * @returns true if all the imgs have loaded, false otherwise.\r\n   */\r\n  const checkIfImagesLoaded = (refDiv: HTMLDivElement): boolean => {\r\n    const imgElements = refDiv.querySelectorAll('img');\r\n\r\n    for (const img of imgElements) {\r\n      if (!img.complete) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Renders an X button intended for exiting the viewer.\r\n   * @returns an X button which exits the viewer upon click.\r\n   */\r\n  const renderExitButton = (): ReactElement => {\r\n    const buttonStyling: SxStyleProp = {\r\n      position: 'absolute',\r\n      top: '5%',\r\n      right: '3%',\r\n      mx: '0%',\r\n\r\n      '@media only screen and (max-width: 800px)': {\r\n        transform: 'rotate(720deg)', // extremely very important :)))\r\n        right: '5%',\r\n      },\r\n    };\r\n    return (\r\n      <ViewerButton\r\n        imageSrc={<FaTimes sx={arrowStyle} />}\r\n        actionHandler={handleClosing}\r\n        extraButtonStyling={buttonStyling}\r\n      />\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Renders a spinner if the images are currently loading in.\r\n   * @returns a circle spinner if images are loading, nothing otherwise.\r\n   */\r\n  const renderSpinner = (): ReactElement | void => {\r\n    if (loading) {\r\n      return (\r\n        <div\r\n          sx={{\r\n            position: 'relative',\r\n            height: '100vh',\r\n            width: '100vw',\r\n            display: 'flex',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 20, // big big index to overlay over everything\r\n          }}\r\n        >\r\n          <div sx={{display: 'inline-block', mx: 'auto'}}>\r\n            <CircleLoader />\r\n          </div>\r\n          {renderExitButton()}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------------\r\n  // Styles for the components --\r\n  //-------------------------------------------------------------------\r\n  /** For the actual picture in the overlay. */\r\n  const overlayStyle: SxStyleProp = {\r\n    objectFit: 'cover',\r\n    opacity: '0.9',\r\n    height: '100%',\r\n    width: '100%',\r\n\r\n    display: loading ? 'none' : 'block',\r\n\r\n    // blur the image (note: edge and ie will die, but who cares lmao)\r\n    filter: 'blur(8px) brightness(0.5)',\r\n  };\r\n\r\n  /** The div containing the overlay picture. */\r\n  const overlayContainerStyle: SxStyleProp = {\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 12, // make this higher priority than main wrapper\r\n\r\n    backgroundColor: theme.colors.background.black,\r\n  };\r\n\r\n  /** The main wrapper for everything in this viewer. */\r\n  const mainWrapperStyle: SxStyleProp = {\r\n    position: 'fixed',\r\n    height: '100vh',\r\n    width: '100vw',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    zIndex: 11, // cause nav is 10 :/\r\n\r\n    textAlign: 'center',\r\n    overscrollBehavior: 'contain',\r\n  };\r\n\r\n  /** The wrapper for all the interactable things in this viewer. */\r\n  const contentWrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    textAlign: 'center',\r\n    alignItems: 'center',\r\n\r\n    '@media only screen and (max-width: 800px)': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  };\r\n\r\n  const arrowStyle: SxStyleProp = {\r\n    margin: 'auto',\r\n    padding: '2.5px',\r\n    width: ['35px', '30px', '35px', '40px'],\r\n    height: ['35px', '30px', '35px', '40px'],\r\n  };\r\n\r\n  const bothButtonStyle: SxStyleProp = {\r\n    // rotate to look like an up or down arrow\r\n    transform: 'rotate(90deg)',\r\n    position: 'fixed',\r\n    mx: 'auto',\r\n\r\n    // Overwrite previous hover code to keep consistant rotation\r\n    '&:hover': {\r\n      transform: 'rotate(90deg) scale(1.2)',\r\n      cursor: 'pointer',\r\n      opacity: 0.8,\r\n    },\r\n  };\r\n\r\n  const leftButtonStyle: SxStyleProp = {\r\n    '@media only screen and (max-width: 800px)': {\r\n      top: '5%',\r\n\r\n      ...bothButtonStyle,\r\n    },\r\n  };\r\n\r\n  const rightButtonStyle: SxStyleProp = {\r\n    '@media only screen and (max-width: 800px)': {\r\n      bottom: '5%',\r\n\r\n      ...bothButtonStyle,\r\n    },\r\n  };\r\n\r\n  //-------------------------------------------------------------------\r\n  // The actual viewer code --\r\n  //-------------------------------------------------------------------\r\n  return (\r\n    // the wrapper that wraps everything\r\n    <div sx={mainWrapperStyle} ref={overlayReferenceDiv}>\r\n      {/* the overlay */}\r\n      <div sx={overlayContainerStyle} onClick={handleClosing}>\r\n        <img\r\n          src={fetchOverlayImageUrl(photos[index].photoId)}\r\n          alt=\"\"\r\n          sx={overlayStyle}\r\n          onLoad={handleOverlayLoadingState}\r\n          onError={() => {\r\n            console.log('failed to load overlay');\r\n            handleLoadingState();\r\n          }}\r\n        />\r\n      </div>\r\n      {/* drawing the spinner if images don't load */}\r\n      {renderSpinner()}\r\n      {/* the content wrapper */}\r\n      <div sx={contentWrapperStyle}>\r\n        <ViewerButton\r\n          imageSrc={<FaArrowLeft sx={arrowStyle} />}\r\n          actionHandler={decrementIdx}\r\n          extraButtonStyling={leftButtonStyle}\r\n        />\r\n\r\n        <ViewerPhoto\r\n          photoId={photos[index].photoId}\r\n          loadHandler={handleLoadingState}\r\n          orientation={photos[index].orientation}\r\n        />\r\n\r\n        <ViewerButton\r\n          imageSrc={<FaArrowRight sx={arrowStyle} />}\r\n          actionHandler={incrementIdx}\r\n          extraButtonStyling={rightButtonStyle}\r\n        />\r\n\r\n        {renderExitButton()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoViewer;\r\n","/** @jsx jsx */\r\nimport React, {\r\n  useContext,\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  ReactElement,\r\n  useMemo,\r\n} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {Heading} from '../components/Heading';\r\nimport PhotoViewer, {Photo} from '../components/gallery-viewer/PhotoViewer';\r\nimport {CircleLoader} from '../components/loading-components/CircleLoader';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {\r\n  IInfoContext,\r\n  InfoContext,\r\n  ISetTransparentCtx,\r\n  SetTransparentCtx,\r\n} from '../utils/contexts';\r\nimport {getImageUrl, disallowScrolling} from '../utils/functions';\r\n// todo: minor, but make naming consistant i guess\r\nimport {Photo as PhotoInfo} from '../utils/interfaces';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\n\r\n//the max width will be < 700 cuz this tries to fit as many images as possible\r\n//while still maintaining a min width of whatever imgMinWidth is\r\nconst imgMinWidth = 350; \r\n//scaled in relation to width\r\nconst portraitHeightScale = 1.5;\r\nconst landscapeHeightScale = 0.65;\r\n\r\n\r\nexport interface GalleryPhotoProps {\r\n  photo: Photo;\r\n  initializeDisplay: (index: number) => void;\r\n  extraPhotoStyle?: SxStyleProp;\r\n}\r\n\r\n//=====================================================================\r\n/**\r\n * GalleryPhoto element handles the actual img element.\r\n * \r\n * This assumes that each img will be placed in an appropriately sized\r\n * div or element.\r\n */\r\nexport const GalleryPhoto: React.FC<GalleryPhotoProps> = ({\r\n  photo,\r\n  initializeDisplay,\r\n  extraPhotoStyle,\r\n}): ReactElement => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const photoStyle: SxStyleProp = {\r\n    width: '100%',\r\n    height: '100%',\r\n    margin: 0,\r\n    objectFit: 'cover',\r\n\r\n    display: loading ? 'none' : 'block',\r\n\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Displays the photo viewer.\r\n   * \r\n   * Locking of the screen and scroll will be done on\r\n   * mount in PhotoViewer.\r\n   */\r\n  const displayViewer = () => {\r\n    initializeDisplay(photo.photoNum);\r\n  };\r\n\r\n  const getSpinner = (): JSX.Element => {\r\n    return (\r\n      <div sx={{display: 'inline-block', my: '50%'}}>\r\n        <CircleLoader />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading ? getSpinner() : undefined}\r\n      <img\r\n        src={photo.photoUrl}\r\n        alt=\"\"\r\n        onClick={displayViewer}\r\n        onLoad={() => setLoading(false)}\r\n        sx={{...photoStyle, ...extraPhotoStyle}}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n//==============================================================================\r\nexport const Gallery: React.FC = (): ReactElement => {\r\n  const galleryPhotos: PhotoInfo[] = useContext<IInfoContext>(InfoContext)\r\n    .gallery;\r\n\r\n  const [viewIndex, setViewIndex] = useState<number>(0);\r\n  const [showViewer, setShowViewer] = useState<boolean>(false);\r\n  const [numColumns, setNumColumns] = useState<number>(\r\n    Math.floor(window.innerWidth / imgMinWidth),\r\n  );\r\n  //the image width as it changes based on window resize\r\n  const imageWrapperRef = useRef<HTMLDivElement>(null);\r\n  const [imageWidth, setImageWidth] = useState<number>(imgMinWidth);\r\n\r\n  //navbar transparency\r\n  const {setTransparent} = useContext<ISetTransparentCtx>(SetTransparentCtx);\r\n  useEffect(() => setTransparent(false), []);\r\n\r\n  //calculate the number of columns that can be displayed based on\r\n  //the window width\r\n  useEffect(() => {\r\n    const calculateNumCols = () => {\r\n      if (Math.floor(window.innerWidth / imgMinWidth) === numColumns) return;\r\n      setNumColumns(Math.floor(window.innerWidth / imgMinWidth));\r\n    };\r\n    window.addEventListener('resize', calculateNumCols);\r\n    return () => window.removeEventListener('resize', calculateNumCols);\r\n  }, [window.innerWidth]);\r\n\r\n  //to handle the image resizing as the window resizes\r\n  useEffect(() => {\r\n    const ro = new ResizeObserver((entries) => {\r\n      const {width} = entries[0].contentRect;\r\n      setImageWidth(width);\r\n    });\r\n    ro.observe(imageWrapperRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  //the number of columns are controlled via the flex box max-height property\r\n  //they are forced to wrap around once the max height is reached\r\n  const galleryHeight = useMemo(() => {\r\n    //buffer out in case one image doesn't fit after dividing\r\n    const heightBuffer = imageWidth * portraitHeightScale;\r\n    const totalHeight = galleryPhotos.reduce((acc, cur) => {\r\n      const height =\r\n        cur.orientation === 'portrait'\r\n          ? imageWidth * portraitHeightScale\r\n          : imageWidth * landscapeHeightScale;\r\n      return height + acc;\r\n    }, 0);\r\n    return Math.ceil(totalHeight / numColumns) + heightBuffer;\r\n  }, [numColumns, imageWidth]);\r\n\r\n  //get all the photo preview displays\r\n  const getGalleryPhotos = () => {\r\n    return galleryPhotos.map((photo, curIdx) => {\r\n      const photoData: Photo = {\r\n        photoUrl: getImageUrl(photo.photoId, imgMinWidth * 2, 1000),\r\n        photoNum: curIdx,\r\n      };\r\n\r\n      const photoContainerStyle: SxStyleProp = {\r\n        margin: '2px',\r\n        width: Math.floor(100 / numColumns).toString() + '%', //width based on window width\r\n        //height based on width\r\n        height:\r\n          photo.orientation === 'portrait'\r\n            ? imageWidth * portraitHeightScale\r\n            : imageWidth * landscapeHeightScale,\r\n        transition: '.2s',\r\n        '&:hover': {\r\n          opacity: 0.6,\r\n          cursor: 'pointer',\r\n        },\r\n      };\r\n\r\n      return (\r\n        <div\r\n          sx={photoContainerStyle}\r\n          key={photoData.photoNum}\r\n          ref={imageWrapperRef}\r\n        >\r\n          <GalleryPhoto\r\n            photo={photoData}\r\n            initializeDisplay={initializeDisplay}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Functions regarding the displaying of the photo viewer --\r\n  /**\r\n   * Initializes the photo viewer.\r\n   * @param startIndex - the photo index which the viewer should begin at.\r\n   */\r\n  const initializeDisplay = (startIndex: number) => {\r\n    setViewIndex(startIndex);\r\n    setShowViewer(true);\r\n  };\r\n\r\n  /**\r\n   * Actually displays the photo viewer, if it should be shown.\r\n   * @returns the photo viewer at the right image\r\n   */\r\n  const getViewer = (): ReactElement | void => {\r\n    return (\r\n      <PhotoViewer\r\n        photos={galleryPhotos}\r\n        startIndex={viewIndex}\r\n        closeHandler={() => setShowViewer(false)}\r\n      />\r\n    );\r\n  };\r\n\r\n  //-----------------------------------------------------\r\n  // Styles\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.beige,\r\n  };\r\n\r\n  const innerWrapperStyle: SxStyleProp = {\r\n    top: '20vh',\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    px: '5%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  };\r\n\r\n  const headingWrapperStyle: SxStyleProp = {\r\n    mt: '13vh',\r\n    maxWidth: '90%', // to make sure the page doesn't scroll to the right\r\n    mb: '8em',\r\n  };\r\n\r\n  const photoColumnContainerStyle: SxStyleProp = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n    flexWrap: 'wrap',\r\n    maxHeight: galleryHeight,\r\n    overflow: 'hidden', //just in case something goes wrong\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      {showViewer ? getViewer() : undefined}\r\n      <div sx={innerWrapperStyle}>\r\n        <div sx={headingWrapperStyle}>\r\n          <Heading text=\"Gallery\" alignment=\"left\" />\r\n        </div>\r\n        <div className=\"row\" sx={photoColumnContainerStyle}>\r\n          {/* Reverse the gallery because I THINK the photos are sorted\r\n          from oldest to newest, and we want the newest at the top */}\r\n          {getGalleryPhotos().reverse()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement, useState, useEffect, useRef} from 'react';\r\nimport {jsx} from 'theme-ui';\r\n\r\n/** Props for a `VideoItem` component. */\r\ninterface VideoItemProps {\r\n  src: string;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\n/**\r\n * Constructs a `VideoItem` component, which displays\r\n * a youtube video.\r\n *\r\n * The VideoItem should be placed in a div that contains\r\n * its proper measured proportions (at least, in terms of\r\n * width), as this VideoItem will resize the iframe with\r\n * the video to the width of its outer containing div.\r\n *\r\n * Height is determined using width by using a 16:9 aspect ratio.\r\n * The default video width is 560px.\r\n *\r\n * @param props the props for this component.\r\n * @returns     a `VideoItem` component.\r\n */\r\nexport const VideoItem: React.FC<VideoItemProps> = ({\r\n  src,\r\n  width,\r\n  height,\r\n}): ReactElement => {\r\n  const [videoWidth, setVideoWidth] = useState<number>(560);\r\n  const videoWidthRefDiv = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!videoWidthRefDiv.current) return;\r\n\r\n    setVideoWidth(videoWidthRefDiv.current.getBoundingClientRect().width);\r\n  }, [videoWidthRefDiv]);\r\n\r\n  return (\r\n    <div ref={videoWidthRefDiv}>\r\n      <iframe\r\n        width={width ? width : videoWidth}\r\n        height={height ? height : Math.round((videoWidth / 16) * 9)}\r\n        src={src}\r\n        frameBorder=\"0\"\r\n        allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen={true}\r\n      ></iframe>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport {useContext, useEffect} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {Heading} from '../components/Heading';\r\nimport {ScrollToTopButton} from '../components/ScrollToTopButton';\r\nimport {VideoItem} from '../components/media-components/VideoItem';\r\n\r\nimport {\r\n  IInfoContext,\r\n  InfoContext,\r\n  ISetTransparentCtx,\r\n  SetTransparentCtx,\r\n} from '../utils/contexts';\r\nimport {theme} from '../utils/theme';\r\nimport {Media as MediaInterface} from '../utils/interfaces';\r\n\r\n//=====================================================================\r\n\r\nexport const Media = ({}) => {\r\n  const allMedia: MediaInterface[] = useContext<IInfoContext>(InfoContext)\r\n    .media;\r\n\r\n  const {setTransparent} = useContext<ISetTransparentCtx>(SetTransparentCtx);\r\n  useEffect(() => setTransparent(false), []);\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    // the main page div\r\n\r\n    width: '100%',\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.beige,\r\n  };\r\n  const innerWrapperStyle: SxStyleProp = {\r\n    // the div that contains everything\r\n    top: '20vh',\r\n    position: 'relative',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: theme.colors.beige,\r\n    mb: '6em', // push away footer\r\n  };\r\n  const headerWrapperStyle: SxStyleProp = {\r\n    // the header div\r\n\r\n    left: '5%',\r\n    mb: '4em',\r\n    maxWidth: '90%', // to make sure the page doesn't scroll to the right\r\n\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: ['column', 'row'],\r\n  };\r\n  const headingStyle: SxStyleProp = {\r\n    width: ['100%', '50%'],\r\n    mb: ['1em', 0],\r\n  };\r\n\r\n  /**\r\n   * Retrieves all the video links in the supplied context\r\n   * and creates a list of `VideoItem`s with title and\r\n   * description for each of them.\r\n   */\r\n  const getAllVideoItems = () => {\r\n    const videoDivStyle: SxStyleProp = {\r\n      width: ['95%', '80%', '60%'],\r\n      mx: 'auto',\r\n    };\r\n    const titleStyle: SxStyleProp = {\r\n      textAlign: 'center',\r\n      py: '0.5em',\r\n\r\n      fontFamily: theme.fonts.heading,\r\n      fontSize: theme.fontSizes.heading.primary,\r\n      color: theme.colors.text.darkSlate,\r\n    };\r\n    const descriptionDivStyle: SxStyleProp = {\r\n      width: '90%',\r\n      mx: 'auto',\r\n      py: '0.5em',\r\n      textAlign: 'center',\r\n\r\n      fontFamily: theme.fonts.body,\r\n      fontSize: theme.fontSizes.body,\r\n      color: theme.colors.navbar,\r\n    };\r\n\r\n    return allMedia.map((mediaItem) => {\r\n      console.log(mediaItem.mediaLink);\r\n      return (\r\n        <div key={mediaItem.title} sx={{mb: ['6em', '8em']}}>\r\n          <h2 sx={titleStyle}>{mediaItem.title}</h2>\r\n\r\n          <div sx={videoDivStyle}>\r\n            <VideoItem src={mediaItem.mediaLink} />\r\n          </div>\r\n\r\n          <div sx={descriptionDivStyle}>\r\n            <p> {mediaItem.description} </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <ScrollToTopButton />\r\n\r\n      <div sx={innerWrapperStyle}>\r\n        <div sx={headerWrapperStyle}>\r\n          <div sx={headingStyle}>\r\n            <Heading\r\n              text=\"Media\"\r\n              alignment=\"left\"\r\n              extraStyling={{width: ['100%', '200%']}}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Reverse the videos to get the most recent at the top */}\r\n        {getAllVideoItems().reverse()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport {jsx} from 'theme-ui';\r\nimport React, {useEffect, useState, useMemo} from 'react';\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\r\n// import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport {Navigation} from './components/Navigation';\r\nimport {Footer} from './components/footer-components/Footer';\r\nimport {ScrollToTop} from './components/ScrollToTop';\r\nimport {LoadingScreen} from './components/loading-components/LoadingScreen';\r\n\r\nimport {useUnmountingDelay} from './utils/hooks';\r\n\r\nimport {Home} from './pages/Home';\r\nimport {Events} from './pages/Events';\r\nimport {Clubs} from './pages/Clubs';\r\nimport {CCalendar} from './pages/Calendar';\r\nimport {Map} from './pages/Map';\r\nimport {Gallery} from './pages/Gallery';\r\nimport {Media} from './pages/Media';\r\nimport {FAQ} from './pages/FAQ';\r\nimport {AboutUs} from './pages/AboutUs';\r\n\r\nimport {\r\n  IInfoContext,\r\n  InfoContext,\r\n  TransparentCtx,\r\n  ITransparentCtx,\r\n  SetTransparentCtx,\r\n  ISetTransparentCtx,\r\n} from './utils/contexts';\r\nimport { theme } from './utils/theme';\r\n\r\nconst backendUrl = 'http://localhost:8080';\r\n//const backendUrl = 'https://us-central1-newstuco.cloudfunctions.net/test';\r\n\r\nconst Main: React.FC = React.memo(() => {\r\n  const [info, setInfo] = useState<IInfoContext | undefined>();\r\n  const [showLoading, setShowLoading] = useState<boolean>(true);\r\n  /** Speed to unmount the loading screen, in ms. */\r\n  const unmountSpeed = 500;\r\n  const shouldRenderLoading = useUnmountingDelay(showLoading, unmountSpeed);\r\n\r\n  const getData = async () => {\r\n    let data: IInfoContext;\r\n    try {\r\n      const res = await fetch(backendUrl, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n          accept: 'application/json',\r\n        },\r\n      });\r\n      data = await res.json();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    setInfo(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // Indicate that the load is done\r\n  useEffect(() => {\r\n    if (info) {\r\n      setShowLoading(false);\r\n    }\r\n  }, [info]);\r\n\r\n  // Load the awesome loader screen if need be\r\n  if (shouldRenderLoading) {\r\n    return (\r\n      <LoadingScreen\r\n        isMounted={showLoading}\r\n        unmountSpeed={unmountSpeed}\r\n        hasLoader={false}\r\n        loadingImage={\"android-chrome-192x192.png\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  // console.log(process.env.PUBLIC_URL);\r\n\r\n  return (\r\n    <InfoContext.Provider value={info}>\r\n      <Router>\r\n        <ScrollToTop />\r\n        <Navigation />\r\n        <Switch>\r\n          <Route path=\"/events\">\r\n            <Events />\r\n          </Route>\r\n          <Route path=\"/clubs\">\r\n            <Clubs />\r\n          </Route>\r\n          <Route path=\"/calendar\">\r\n            <CCalendar />\r\n          </Route>\r\n          <Route path=\"/map\">\r\n            <Map />\r\n          </Route>\r\n          <Route path=\"/gallery\">\r\n            <Gallery />\r\n          </Route>\r\n          <Route path=\"/media\">\r\n            <Media />\r\n          </Route>\r\n          {/* <Route path=\"/faq\">\r\n            <FAQ />\r\n          </Route> */}\r\n          {/* <Route path=\"/about\">\r\n            <AboutUs />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </InfoContext.Provider>\r\n  );\r\n});\r\n\r\nconst App: React.FC = () => {\r\n  const [transparent, setTransparent] = useState<boolean>(true);\r\n  \r\n\r\n  //why is this split in two?\r\n  //so it won't force a re-render on places that used setTransparent\r\n  //if transparent changed but setTransparent didn't change\r\n  const transparentCtx: ITransparentCtx = {\r\n    transparent: transparent,\r\n  };\r\n\r\n  const setTransparentCtx: ISetTransparentCtx = {\r\n    setTransparent: setTransparent,\r\n  };\r\n\r\n  //why do I have to wrap it around so many times?\r\n  //don't ask me why, it's so this thing won't re-render\r\n  //each time I use setTransparent\r\n  const MemoMain: JSX.Element = useMemo(() => {\r\n    return (\r\n      <SetTransparentCtx.Provider value={setTransparentCtx}>\r\n        <div sx={{bg: theme.colors.background.light}}>\r\n          <Main />\r\n        </div>\r\n        \r\n      </SetTransparentCtx.Provider>\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <TransparentCtx.Provider value={transparentCtx}>\r\n      {MemoMain}\r\n    </TransparentCtx.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Architects Daughter', 'Rowdies:300,400', 'Open Sans :a9,f9']\r\n  },\r\n  // inactive: () => console.log('aslkdjflsdjf'),\r\n});\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}