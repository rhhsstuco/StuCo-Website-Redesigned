{"version":3,"sources":["assets/logo.svg","assets/clubBackground.png","assets/speech bubble.png","assets/speechBubbleMobile.png","assets/BottomPageDecor.svg","utils/theme.ts","components/Navigation.tsx","utils/contexts.ts","components/Resources.tsx","components/Footer.tsx","components/ScrollToTop.tsx","components/ThreeDotsLoader.tsx","components/LoaderComponents.tsx","utils/hooks.tsx","components/CountDownTimer.tsx","components/Heading.tsx","components/Collapsable.tsx","utils/animation.ts","components/PhotoSlideDeck.tsx","utils/functions.ts","utils/RandomDot.tsx","pages/Home.tsx","components/TranslucentRectangle.tsx","components/ScrollToTopButton.tsx","pages/Events.tsx","components/ClubPopup.tsx","pages/Clubs.tsx","pages/Calendar.tsx","pages/Map.tsx","components/ViewerPhoto.tsx","components/ViewerButton.tsx","components/CircleSpinner.tsx","components/PhotoViewer.tsx","pages/Gallery.tsx","pages/FAQ.tsx","components/RotatingQuotes.tsx","pages/AboutUs.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","theme","colors","text","light","darkSlate","darkGray","navbar","background","dark","darkest","black","overlay","darkOverlay","primary","secondary","footer","yellow","imageOverlayForText","imageGrayOverlay","imageDarkGrayOverlay","searchBox","lightGray","modes","fonts","heading","body","fontSizes","event","bodySmall","bodyBig","footerBig","bodyPadding","pt","pb","px","links","nav","py","textTransform","letterSpacing","NavItem","route","extraStyling","children","style","color","fontFamily","display","textDecoration","order","width","textAlign","to","sx","Toggle","toggle","onClick","toggleStyle","fontSize","mr","routes","events","clubs","calendar","map","gallery","faq","about","Navigation","useState","setToggle","navItemsHeight","setNavItemsHeight","navItemsRef","useRef","navRef","curLocation","useLocation","pathname","current","transparent","setTransparent","useEffect","scrollEvent","clickEvent","e","target","window","addEventListener","removeEventListener","toggleColourSettings","top","document","scrollTop","documentElement","height","innerHeight","ro","ResizeObserver","entries","forEach","entry","contentRect","console","log","observe","disconnect","wrapperStyle","justifyContent","flexDirection","transitionDuration","alignItems","position","zIndex","boxShadow","flexWrap","navItemsWrapper","transform","transition","overflow","logoStyle","justifySelf","marginRight","marginLeft","cursor","ref","src","logo","alt","navItemsStyle","backgroundColor","opacity","backdropFilter","undefined","outlineOffset","outlineWidth","outlineColor","outlineStyle","Object","keys","toUpperCase","key","getNavItems","InfoContext","createContext","countdown","members","recents","upcomingMiniEvents","resources","aboutStuco","clubHighlights","labelledPhotos","Resources","textStyling","allResources","useContext","headerTextStyle","resourceStyle","ml","my","resourceContainerStyle","margin","listStyle","listStyleType","pl","pr","getResourceColumn","linkStyle","mx","resource","resourceName","href","resourceLink","mb","leftResources","slice","Math","ceil","length","rightResources","className","getAllResources","socialMediaStyle","socialMediaList","email","link","image","size","instagram","facebook","twitter","SocialMediaItem","name","pictureLink","paddingX","imageStyle","borderRadius","iconStyle","renderIcon","CopyrightItem","textStyle","copyrightTextStyle","mt","Date","getFullYear","FooterRoutes","half","leftRoutes","rightRoutes","routesStyle","getRouteItems","navStyle","Footer","footerStyle","bottom","whiteSpace","left","sitename","right","ScrollToTop","withRouter","scroll","behavior","Fragment","ThreeDotsLoader","type","LoadingSquare","loaderHeight","loaderWidth","loaderColor","isTransparent","loadingSquareStyle","LoadingScreen","isMounted","unmountSpeed","titleTextStyle","toString","useUnmountingDelay","shouldBeMounted","delayTime","shouldRender","setShouldRender","timerID","setTimeout","clearTimeout","CountDownTimer","date","timer","setTimer","formattedTime","setFormattedTime","getFormattedTime","getTime","timeInMilli","days","floor","hours","minutes","seconds","borderColor","borderWidth","borderStyle","TimeUnit","number","numDigit","textSize","numSize","padStart","Heading","alignment","underline","fontWeight","lineStyle","Collapsable","title","titleStyle","collapsed","childrenStyle","childrenCollapsed","setChildrenCollapsed","childrenHeight","setChildrenHeight","childrenRef","prevHeight","textOverflow","verticalAlign","fill","padding","transitionTime","diff","abs","getHeightDiff","childrenWrapperStyle","borderLeftWidth","borderLeftColor","borderLeftStyle","overflowY","defaultTitleStyle","React","Children","count","slideUp","slideBackDown","fadeIn","fadeOut","fadeInPartially","popIn","spin","GrayImage","url","photoDimension","objectFit","CenterImage","description","lockImage","unlockImage","wrapperWidth","setWrapperWidth","wrapperRef","getBoundingClientRect","animation","descriptionStyle","animationFillMode","animationName","animationDuration","animationTimingFunction","onMouseOver","onMouseLeave","onFocus","PhotoSlideDeck","photos","curPhoto","setCurPhoto","timerId","startRotation","clearTimerIds","getPrevIdx","useMemo","curIdx","newIdx","getNextIdx","id","setInterval","push","resetTimer","clearInterval","interval","getImageUrl","imageId","round","hex","alpha","randNum","min","max","random","randInt","hexToRgbArr","parseInt","disallowScrolling","topPos","allowScrolling","topY","scrollTo","RandomDot","x","y","getComponent","dotStyle","this","Main","countdownEvent","backgroundSize","backgroundImage","buttonStyle","fontVariantCaps","eventName","BackgroundWithDots","props","randomDots","setRandomDots","numDots","setNumDots","componentRef","generateRandomDots","numNewDots","i","oldArr","clone","innerWidth","dot","UpcomingBoard","n","getEventsList","getPlaceHolder","Recent","setWidth","thisComponentRef","scale","photoId","line","Home","backRgba","replace","hexNum","r","g","b","hexToRgb","a","TranslucentRectangle","lengthX","lengthY","minLengthY","rectStyle","minHeight","hasOwnProperty","ScrollToTopButton","showScrollButton","setShowScrollButton","shouldRenderButton","handleScroll","useCallback","pageYOffset","scrollToTop","renderScrollButton","EventHeading","textLocation","extraHeaderStyling","extraTextStyling","EventPhoto","photoID","photoLocation","imgWidth","setImgWidth","loading","setLoading","renderLoadingSquare","imageRef","maxWidth","maxHeight","rectStyling","displayLoadingSquare","onLoad","EventButton","buttonText","buttonLink","extraButtonStyling","EventInfoItem","eventDetails","textWrapperStyle","wordWrap","lineHeight","dateStyle","buttonContainerStyle","EventItem","imgHeight","setImgHeight","eventItemRef","currentEventDetails","rectangleBarrierStyling","Events","eventInfo","overflowX","index","extraRectStyling","ClubDescriptionDimensions","ClubInfoItemDimensions","ClubPhotoDimensions","ClubDescriptionItem","clubname","titleWrapperStyle","clipPath","ClubInfoItem","clubContactInfo","contactInfoWrapperStyle","flex","marginY","wordBreak","colStyle","leftColStyle","rightColStyle","info","formattedTitle","value","getAllContactInfo","ClubPhoto","ClubPopup","closeHandler","clubInfo","clubPhotoRef","overlayStyle","mainWrapperStyle","photoContainerStyle","meetingDate","meetingDay","meetingFreq","meetingFrequency","meetingLoc","meetingLocation","currentTarget","BgTriangleProp","x1","y1","x2","y2","x3","y3","getStyle","getClipPath","Clubs","setHeight","query","setQuery","isPopup","setIsPopup","popupClub","setPopupClub","pageRef","bgRectWidth","bgTriangleProp","clientHeight","backgroundImgStyle","searchBoxStyle","outline","searchBoxWrapperStyle","isFirstBreakpoint","clubBackground","Array","from","getTransluteRects","onChange","placeholder","categories","club","category","titleComponent","getClubs","getClubList","searchStr","results","filter","toLowerCase","includes","displaySearchResults","imageUrl","triangles","getTriangleImages","scrollY","renderClubPopup","Calendar","spinAmount","setSpinAmount","handleClick","Map","loadingFirstImage","setLoadingFirstImage","loadingSecondImage","setLoadingSecondImage","allLabelledPhotos","firstFloorPhoto","find","photoLabel","secondFloorPhoto","backgroundStyle","imageDivStyle","handleLoad","setLoadingFunction","ViewerPhoto","loadHandler","originalDimensions","mainImageLimit","setMainImageLimit","orientation","setOrientation","mainImageRefDiv","determineOrientation","h","w","mainImageContainerStyle","fetchMainImageUrl","onError","ViewerButton","imageSrc","actionHandler","backgroundRepeat","CircleSpinner","PhotoViewer","startIndex","setIndex","overlayWidth","setOverlayWidth","overlayReferenceDiv","xTouchLoc","yTouchLoc","incrementIdx","decrementIdx","handleClosing","reactToKeystrokes","keyCode","initializeTouch","touchLocations","touches","clientX","clientY","reactToSwipe","xOld","yOld","changedTouches","oldPos","newPos","xDiff","yDiff","detectSwipeDirection","handleLoadingState","checkIfImagesLoaded","refDiv","imgElements","querySelectorAll","complete","renderExitButton","arrowStyle","overlayContainerStyle","bothButtonStyle","leftButtonStyle","rightButtonStyle","overscrollBehavior","renderSpinner","GalleryPhoto","photo","initializeDisplay","extraPhotoStyle","photoStyle","newPhotoDimensions","displayLoadSpinner","photoUrl","photoNum","Gallery","galleryPhotos","referenceDiv","viewIndex","setViewIndex","showViewer","setShowViewer","currentImageNumber","arr","array","result","splice","splitArray","photoGroup","originalPhotoDimensions","leftPhotos","centerPhotos","rightPhotos","allGalleryStyle","getGalleryColumn","photoColumn","startDisplay","toggleViewer","displayViewer","QuestionItem","question","imageExtraStyling","outerContainerDiv","innerWrapperDiv","ResponseItem","response","textExtraStyling","rectExtraStyling","responseTextStyle","FAQItem","styling","imageStyling","faqQuestion","questionNumber","isLoading","setIsLoading","wrapperDiv","answer","FAQ","faqQuestions","getFaqItems","vmax","isSecondBreakpoint","imgSize","GrayBubble","sizeInNum","setSizeInNum","sizeRef","imgRef","marginRef","ShownBubble","quote","closing","bubbleHeight","setBubbleHeight","quoteWrapperRef","bubbleAndQuoteWrapperStyle","quoteWrapperStyle","speechBubbleStyle","AboutUsSpeechBubble","AboutUsSpeechBubbleMobile","RotatingQuotes","originalQuoteSets","quoteSets","setQuoteSets","timerIds","oldSet","unshift","pop","grayBubbleWrapper","grayBubbles","getGrayBubbles","Paragraph","headingStyle","bodyStyle","stucoTagline","stucoDescription","AboutUs","bodyRef","decorRef","pageHeight","decorHeight","wrapper","decorWrapper","translateScale","member","BottomPageDecor","App","setInfo","showLoading","setShowLoading","shouldRenderLoading","getData","fetch","method","mode","headers","accept","res","json","data","process","Provider","basename","path","Boolean","location","hostname","match","WebFont","load","google","families","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,6C,2MCG9BC,EAAQ,CACnBC,OAAQ,CACNC,KAAM,CACJC,MAAO,UACPC,UAAW,UACXC,SAAU,WAEZC,OAAQ,UACRC,WAAY,CACVJ,MAAO,UACPK,KAAM,UACNC,QAAS,YACTC,MAAO,UACPC,QAAS,YACTC,YAAa,WAEfC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,OAAQ,UACRC,oBAAqB,YACrBC,iBAAkB,YAClBC,qBAAsB,YACtBC,UAAW,CACTf,SAAU,UACVgB,UAAW,WAEbC,MAAO,CACLd,KAAM,KAGVe,MAAO,CACLC,QAAS,UACTC,KAAM,aAERC,UAAW,CACTF,QAAS,CACPX,QAAS,CAAC,GAAI,IACdc,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,KAE1BF,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BE,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAChCC,UAAW,CAAC,GAAI,GAAI,IACpBC,QAAS,CAAC,GAAI,GAAI,IAClBd,OAAQ,CAAC,GAAI,GAAI,GAAI,IACrBe,UAAW,CAAC,GAAI,GAAI,GAAI,KAE1BC,YAAa,CACXC,GAAI,KACJC,GAAI,MACJC,GAAI,MAENC,MAAO,CACLC,IAAK,CACHF,GAAI,EACJG,GAAI,EACJC,cAAe,YACfC,cAAe,W,gCC5CRC,EAA+B,SAAC,GAKtC,IAJLC,EAII,EAJJA,MACAvC,EAGI,EAHJA,KACAwC,EAEI,EAFJA,aACAC,EACI,EADJA,SAEMC,EAAqB,CACzBC,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB2C,WAAY9C,EAAMuB,MAAME,KACxBsB,QAAS,QACT,UAAW,CACTC,eAAgB,OAChBzC,WAAYP,EAAMC,OAAOc,OACzB8B,MAAO7C,EAAMC,OAAOC,KAAKC,OAE3B8C,MAAO,EACPf,GAAI,GACJG,GAAI,CAAC,EAAG,EAAG,GACXa,MAAO,CAAC,OAAQ,OAAQ,QACxBC,UAAW,UAGb,OACE,YAAC,IAAD,CAAMC,GAAI,IAAMX,EAAOY,GAAE,2BAAMT,GAAUF,IACtCxC,EACAyC,IAUDW,EAAgC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACxCC,EAA2B,CAC/BR,MAAO,EACPF,QAAS,CAAC,QAAS,QAAS,QAC5BW,SAAU,QACVb,MAAO7C,EAAMC,OAAOC,KAAKC,MACzBwD,GAAI,MAGN,OAAIJ,EACK,YAAC,IAAD,CAASF,GAAII,EAAaD,QAASA,IAErC,YAAC,IAAD,CAAQH,GAAII,EAAaD,QAASA,KAc9BI,EAAS,CAEpBC,OAAQ,SACRC,MAAO,QACPC,SAAU,WACVC,IAAK,MACLC,QAAS,UACTC,IAAK,MACLC,MAAO,YAGIC,EAAuB,WAAO,IAAD,EACZC,oBAAkB,GADN,mBACjCd,EADiC,KACzBe,EADyB,OAEID,mBAAiB,MAFrB,mBAEjCE,EAFiC,KAEjBC,EAFiB,KAIlCC,EAAcC,iBAAuB,MACrCC,EAASD,iBAAuB,MAChCE,EAAcF,iBAAeG,cAAcC,UANT,EAOFT,mBAA0C,MAAxBO,EAAYG,SAP5B,mBAOjCC,EAPiC,KAOpBC,EAPoB,KAUxCC,qBAAU,WACR,IAAMC,EAAc,kBAAMb,GAAU,IAC9Bc,EAAa,SAACC,GACd9B,GAAU8B,EAAEC,SAAWX,EAAOI,SAChCT,GAAU,IAKd,OAFAiB,OAAOC,iBAAiB,SAAUL,GAClCI,OAAOC,iBAAiB,QAASJ,GAC1B,WACLG,OAAOE,oBAAoB,SAAUN,GACrCI,OAAOE,oBAAoB,QAASL,MAErC,CAAC7B,IAEJ2B,qBAAU,WAER,IAAMQ,EAAuB,WAC3B,GAA4B,MAAxBd,EAAYG,QAAhB,CACA,IAAMY,EAAMC,SAASnE,KAAKoE,WAAaD,SAASE,gBAAgBD,UAC1DE,EAASR,OAAOS,YACtBf,EAAeU,EAAMI,KAGvB,OADAR,OAAOC,iBAAiB,SAAUE,GAC3B,kBAAMH,OAAOE,oBAAoB,SAAUC,MACjD,IAGHR,qBAAU,WACR,IAAMe,EAAK,IAAIC,KAAe,SAACC,GAC7BA,EAAQC,SAAQ,SAACC,GAAW,IACnBN,EAAUM,EAAMC,YAAhBP,OACPQ,QAAQC,IAAIT,GACZvB,EAAkBuB,SAItB,OADAE,EAAGQ,QAAQhC,EAAYM,SAChB,kBAAMkB,EAAGS,gBACf,IAEH,IAkCMC,EAA4B,CAChC5D,QAAS,OACTG,MAAO,OACP0D,eAAgB,gBAChBC,cAAe,MACftG,WAAYyE,EAAc,cAAgBhF,EAAMC,OAAOK,OACvDwG,mBAAoB,MACpBC,WAAY,SACZC,SAAU,QACVC,OAAQ,GACRC,UAAW,aAAelH,EAAMC,OAAOc,OACvCoG,SAAU,QAGNC,EAA+B,CACnCrE,QAAS,OACToE,SAAU,OACVlE,MAAO,EACPoE,UAAW,CACT9D,EAAS,gBAAkB,oBAC3BA,EAAS,gBAAkB,oBAC3B,iBAEF+D,WAAY,MACZC,SAAU,SACVxB,OAAQ,CAACxC,EAASgB,EAAiB,EAAGhB,EAASgB,EAAiB,EAAG,QACnE0C,OAAQ,EACR/D,MAAO,CAAC,OAAQ,OAAQ,SAGpBsE,EAAyB,CAC7BvE,MAAO,EACPwE,YAAa,aACbC,YAAa,OACbC,WAAY,CAAC,KAAM,OACnB,UAAW,CACTC,OAAQ,WAEV7B,OAAQ,SACRkB,OAAQ,GAGV,OACE,mBAAK5D,GAAIsD,EAAckB,IAAKlD,GAC1B,YAAC,IAAD,CAAMvB,GAAG,IAAIC,GAAImE,GACf,mBAAKM,IAAKC,IAAMC,IAAI,GAAG3E,GAAImE,KAE7B,YAAC,EAAD,CAAQjE,OAAQA,EAAQC,QAAS,kBAAMc,GAAU,SAACf,GAAD,OAAaA,QAC9D,mBAAKF,GAAI+D,GACP,mBACES,IAAKpD,EACL9B,SArFY,WAClB,IACMsF,EAA6B,CACjCC,gBAAiB,CACflI,EAAMC,OAAOK,OACb,eAEF6H,QAAS,CAAC,GAAK,GACfC,eAAgB,CAAC,iBAAaC,GAC9B,UAAW,CACTT,OAAQ,UACR5E,eAAgB,OAChBH,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB+H,gBAAiBlD,EAAc,cAAgBhF,EAAMC,OAAOc,OAC5DuH,eAbiB,IAcjBC,aAAcvD,EAdG,IAc0B,EAC3CwD,aAAcxI,EAAMC,OAAOc,OAC3B0H,aAAc,UAKlB,OAAOC,OAAOC,KAAK/E,GAAQI,KAAI,SAACvB,GAC9B,OACE,YAAC,EAAD,CACEA,MAAOA,EACPvC,KAAM0D,EAAOnB,GAAOmG,cACpBC,IAAKjF,EAAOnB,GACZC,aAAcuF,OAyDJa,GACVzF,GAAI,CACFN,QAAS,OACToE,SAAU,OACVjE,MAAO,CAAC,OAAQ,OAAQ,cCpMvB6F,EAAcC,wBAA4B,CACrDnF,OAAQ,GACRoF,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,mBAAoB,GACpBtF,MAAO,GACPI,IAAK,GACLmF,UAAW,GACXpF,QAAS,GACTqF,WAAY,GACZC,eAAgB,GAChBC,eAAgB,KC3BLC,EAAsC,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAC7CC,EAAqCC,qBACzCb,GACAM,UACF9C,QAAQC,IAAImD,GAKZ,IAQME,EAA+B,CACnC/G,WAAY9C,EAAMuB,MAAMC,QACxBkC,SAAU1D,EAAM0B,UAAUI,UAC1Be,MAAO7C,EAAMC,OAAOC,KAAKC,OAErB2J,EAA0B,2BAC3BJ,GAD2B,IAG9BxG,MAAO,MACP6G,GAAI,EACJpG,GAAI,OACJqG,GAAI,IAEAC,EAAsC,CAC1C/G,MAAO,OACPgH,OAAQ,OAERnH,QAAS,OACT8D,cAAe,CAAC,SAAU,QAEtBsD,EAAyB,CAC7BC,cAAe,OACfC,GAAI,EACJC,GAAI,MACJP,GAAI,EACJC,GAAI,GAsCAO,EAAoB,SAAClB,GACzB,IAAMmB,EAAyB,CAC7BtI,GAAI,EACJG,GAAI,MACJoI,GAAI,EACJ5H,MAAO7C,EAAMC,OAAOC,KAAKC,MAEzB4C,QAAS,SACT,UAAW,CACTF,MAAO7C,EAAMC,OAAOY,QACpBmC,eAAgB,SAIpB,OAAOqG,EAAUrF,KAAI,SAAC0G,GACpB,OACE,kBAAI7B,IAAK6B,EAASC,cAChB,iBAAGC,KAAMF,EAASG,aAAcxH,GAAImH,GACjCE,EAASC,mBAOpB,OACE,mBAAKtH,GAjG+B,CACpCnB,GAAI,OAkGF,mBAAKmB,GAhG+B,CACtCH,MAAO,OACPC,UAAW,OACX2H,GAAI,UA8FA,kBAAIzH,GAAIwG,GAAR,cA1DkB,WAEtB,IAAMkB,EAAgBpB,EAAaqB,MACjC,EACAC,KAAKC,KAAKvB,EAAawB,OAAS,IAE5BC,EAAiBzB,EAAaqB,MAClCC,KAAKC,KAAKvB,EAAawB,OAAS,IAGlC,OACE,mBAAKE,UAAU,MAAMhI,GAAI4G,GACvB,mBAAK5G,GAAIyG,GAEP,kBAAIzG,GAAI8G,GAAYI,EAAkBQ,KAExC,mBAAK1H,GAAIyG,GAEP,kBAAIzG,GAAI8G,GAAYI,EAAkBa,MA0CzCE,KCjGDC,EAAgC,CACpCjE,WAAY,qBACZ,UAAW,CACTD,UAAW,aACXO,OAAQ,YAMN4D,EAAwC,CAC5CC,MAAO,CACLC,KAAM,qCACNC,MAAO,YAAC,IAAD,CAAkBC,KAAM,GAAIvI,GAAIkI,KAEzCM,UAAW,CACTH,KAAM,uCACNC,MAAO,YAAC,IAAD,CAAmBC,KAAM,GAAIvI,GAAIkI,KAE1CO,SAAU,CACRJ,KAAM,sCACNC,MAAO,YAAC,IAAD,CAAkBC,KAAM,GAAIvI,GAAIkI,KAEzCQ,QAAS,CACPL,KAAM,iCACNC,MAAO,YAAC,IAAD,CAAiBC,KAAM,GAAIvI,GAAIkI,MAYpCS,EAA8C,SAAC,GAI9C,IAHLC,EAGI,EAHJA,KACAP,EAEI,EAFJA,KACAQ,EACI,EADJA,YA6BA,OACE,iBAAGtB,KAAMc,EAAMrI,GA5Bc,CAC7B8I,SAAU,UAGO,WACjB,IAAMC,EAA0B,CAC9BC,aAAc,MACd,UAAW,IAGPC,EAAS,aACbvJ,QAAS,SACTF,MAAO7C,EAAMC,OAAOM,WAAWJ,MAE/B4F,OAAQ,OACR7C,MAAO,QAEJkJ,GAGL,MAA0B,iBAAfF,EACF,mBAAK7I,GAAI+I,EAAYtE,IAAKoE,EAAalE,IAAKiE,IAG9C,mBAAK5I,GAAIiJ,GAAYJ,GAKzBK,KA4BDC,EAA8C,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAC9CjC,EAAyB,CAC7B3H,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB2K,GAAI,SAEJ,UAAW,CACTjI,MAAO7C,EAAMC,OAAOY,QACpBmC,eAAgB,SAId0J,EAA+B,2BAChCD,GADgC,IAEnCzC,GAAI,OAEJ2C,GAAI,CAAC,MAAO,KAId,OACE,iBAAGtJ,GAAIqJ,GAAP,8BAC+B,IAAIE,MAAOC,cAD1C,aAGE,iBACEjC,KAAK,sDACLvH,GAAImH,GAEJ,YAAC,IAAD,CAAUnH,GAVgB,CAACM,GAAI,QAASmH,GAAI,UAUlBc,KAAM,KAJlC,YAuBAkB,EAA4C,SAAC,GAG9B,IAFnBlJ,EAEkB,EAFlBA,OACA6I,EACkB,EADlBA,UAGMM,EAAe9B,KAAKC,KAAKxC,OAAOC,KAAK/E,GAAQuH,OAAS,GACtD6B,EAAyBtE,OAAOvC,QAAQvC,GAAQoH,MACpD,EACA+B,GAEIE,EAA0BvE,OAAOvC,QAAQvC,GAAQoH,MACrD+B,GAYIlD,EAA+B,CACnC/G,WAAY9C,EAAMuB,MAAMC,QACxBkC,SAAU1D,EAAM0B,UAAUI,UAC1Be,MAAO7C,EAAMC,OAAOC,KAAKC,OAGrB+M,EAAwB,2BACzBT,GADyB,IAI5B1C,GAAI,OACJpG,GAAI,EACJT,MAAO,QASHiH,EAAyB,CAC7BhH,UAAW,QAEXiH,cAAe,OACfC,GAAI,MACJC,GAAI,EACJ3G,GAAI,EACJqG,GAAI,GAQAmD,EAAgB,SAACvJ,GACrB,IAAMwJ,EAAwB,CAC5BlL,GAAI,EACJG,GAAI,MACJoI,GAAI,EAEJ1H,QAAS,SACT,UAAW,CACTF,MAAO7C,EAAMC,OAAOY,QACpBmC,eAAgB,SAIpB,OAAOY,EAAOI,KAAI,SAACvB,GACjB,OACE,kBAAIoG,IAAKpG,EAAM,IACb,YAAC,EAAD,CAASA,MAAOA,EAAM,GAAIvC,KAAMuC,EAAM,GAAIC,aAAc0K,SAMhE,OACE,mBAAK/J,GAnE+B,CACpCnB,GAAI,OAoEF,mBAAKmB,GAlE+B,CACtCH,MAAO,OACPC,UAAW,QACX2H,GAAI,UAgEA,kBAAIzH,GAAIwG,GAAR,eAIF,mBAAKwB,UAAU,MAAMhI,GApDgB,CACvCH,MAAO,OACPgH,OAAQ,OAERnH,QAAS,OACT8D,cAAe,CAAC,SAAU,SAgDtB,mBAAKxD,GAAI6J,GAEP,kBAAI7J,GAAI8G,GAAYgD,EAAcH,KAEpC,mBAAK3J,GAAI6J,GAEP,kBAAI7J,GAAI8G,GAAYgD,EAAcF,QAW/BI,EAAmB,WAE9B,IAhLA7B,EAgLM8B,EAA2B,CAC/BzK,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB+H,gBAAiBlI,EAAMC,OAAOc,OAC9BiB,GAAI,QACJgF,SAAU,WAEVC,OAAQ,EAER/D,MAAO,OACPyC,IAAK,OACLgH,GAAI,OACJ7B,GAAI,EACJyC,OAAQ,GAEJd,EAAyB,CAC7B3J,WAAY9C,EAAMuB,MAAME,KACxBiC,SAAU1D,EAAM0B,UAAUX,OAC1B8B,MAAO7C,EAAMC,OAAOC,KAAKC,MAEzBqN,WAAY,CAAC,SAAU,iBAqCzB,OAGE,WAFA,CAEA,OAAKnK,GAAIiK,GAEP,mBAAKjK,GAxC2B,CAClCH,MAAO,OACPH,QAAS,OACT8D,cAAe,QAsCX,mBAAKxD,GAAI,CAACH,MAAO,MAAO8D,SAAU,WAAY+C,GAAI,QAChD,YAAC,EAAD,CAAcnG,OAAQA,EAAQ6I,UAAWA,KAE3C,mBAAKpJ,GAAI,CAACH,MAAO,MAAO8D,SAAU,WAAYrD,GAAI,QAChD,YAAC,EAAD,CAAW+F,YAAa+C,MAK5B,mBAAKpB,UAAU,MAAMhI,GA7Cc,CAErCN,QAAS,OACT8D,cAAe,CAAC,SAAU,OAC1BE,WAAY,CAAC,SAAU,MACvB5D,UAAW,CAAC,SAAU,MAEtBD,MAAO,OACPuH,GAAI,OACJkC,GAAI,QAqCA,mBAAKtB,UAAU,MAAMhI,GAnCoB,CAE7CsJ,GAAI,EACJc,KAAM,CAAC,EAAG,MACVvK,MAAO,CAAC,OAAQ,OAEhBqK,OAAQ,QAERxG,WAAY,CAAC,SAAU,aACvB5D,UAAW,CAAC,SAAU,WA9NxBqI,EAyPwBA,EAvPjB9C,OAAOC,KAAK6C,GAAiBxH,KAAI,SAAC0J,GACvC,OACE,YAAC,EAAD,CACEzB,KAAMyB,EACNhC,KAAMF,EAAgBkC,GAAUhC,KAChCQ,YAAaV,EAAgBkC,GAAU/B,MACvC9C,IAAK6E,SAqPL,mBAAKrC,UAAU,MAAMhI,GA7BkB,CAC3CsK,MAAO,CAAC,EAAG,MACXzK,MAAO,CAAC,OAAQ,OAChBC,UAAW,CAAC,SAAU,SACtB2H,GAAI,CAAC,QAAS,KA0BR,YAAC,EAAD,CAAe2B,UAAWA,QCvWvBmB,EAAcC,aAAW,WAIpC,OAHA3I,qBAAU,WACRK,OAAOuI,OAAO,CAACnI,IAAK,EAAGoI,SAAU,cAE5B,kBAAC,IAAMC,SAAP,S,iBCKIC,EAAkD,SAAC,GAIzD,IAHL/K,EAGI,EAHJA,MACA6C,EAEI,EAFJA,OACAlD,EACI,EADJA,MAEA,OACE,kBAAC,IAAD,CACEqL,KAAK,YACLrL,MAAOA,GAAgB7C,EAAMC,OAAOa,UACpCoC,MAAOA,EACP6C,OAAQA,KCODoI,EAA8C,SAAC,GAMrD,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,cACA7L,EACI,EADJA,aAEM8L,EAA+B,aACnCxH,SAAU,WACV9D,MAAO,OACP6C,OAAQ,OACRmC,gBAAiBqG,EAAgB,cAAgBvO,EAAMC,OAAOM,WAAWC,KAEzEuC,QAAS,OACTgE,WAAY,UACZ5D,UAAW,UAERT,GAGL,OACE,mBAAKW,GAAImL,GACP,mBAAKnL,GAAI,CAACN,QAAS,SAAUmH,OAAQ,SACnC,YAAC,EAAD,CACEhH,MAAOmL,EACPtI,OAAQqI,EACRvL,MAAOyL,GAA4BtO,EAAMC,OAAOC,KAAKC,WAWlDsO,EAA8C,SAAC,GAGrD,IAFLC,EAEI,EAFJA,UACAC,EACI,EADJA,aAWMC,EAA8B,CAClC9L,WAAY9C,EAAMuB,MAAMC,QACxBkC,SAAU1D,EAAM0B,UAAUF,QAAQX,QAClCgC,MAAO7C,EAAMC,OAAOC,KAAKE,UACzB8J,OAAQ,QAaV,OACE,mBACE7G,GAAE,2BA5B4B,CAChCH,MAAO,QACP6C,OAAQ,QAER5C,UAAW,SACXJ,QAAS,OACT8D,cAAe,SACfE,WAAY,WAqBR,IAEAO,WAAYoH,EACR,OACA,YAAcC,EAAe,KAAME,WAAa,YACpD1G,QAASuG,EAAY,EAAI,KAG3B,mBAAKrL,GArBwB,CAC/BN,QAAS,eACT+H,GAAI,EACJ6B,GAAI,SAmBA,kBAAItJ,GAAIuL,GAAR,4BAGF,mBAAKvL,GApB2B,CAClCN,QAAS,eACT4J,GAAI,EACJ7B,GAAI,SAkBA,YAAC,EAAD,SCnGKgE,EAAqB,SAChCC,EACAC,GACI,IAAD,EACqC3K,mBAAkB0K,GADvD,mBACIE,EADJ,KACkBC,EADlB,KAmBH,OAhBAhK,qBAAU,WACR,IAAIiK,EAUJ,OARIJ,EACFG,GAAgB,GAGhBC,EAAU5J,OAAO6J,YAAW,kBAAMF,GAAgB,KAAQF,GAIrD,WACLzJ,OAAO8J,aAAaF,MAErB,CAACJ,EAAiBC,EAAWC,IAEzBA,G,gBCbIK,EAAkC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EAC/BlL,qBAD+B,mBAClDmL,EADkD,KAC3CC,EAD2C,OAEfpL,qBAFe,mBAElDqL,EAFkD,KAEnCC,EAFmC,KAIzDzK,qBAAU,WACHsK,GAILG,EAAiBC,EAAiBJ,IAClCjK,OAAO6J,YAAW,WAChBK,EAASD,EAAQ,OAChB,MANDC,EAASF,EAAKM,WAAY,IAAIjD,MAAOiD,aAOtC,CAACL,EAAOD,IAEX,IAAMK,EAAmB,SAACE,GACxB,IAAMC,EAAO9E,KAAK+E,MAAMF,EAAW,OACnCA,GAAyB,MACzB,IAAMG,EAAQhF,KAAK+E,MAAMF,EAAW,MACpCA,GAAyB,KACzB,IAAMI,EAAUjF,KAAK+E,MAAMF,EAAW,KAItC,OAHAA,GAAyB,IAGlB,CACLC,KAAMA,EACNE,MAAOA,EACPC,QAASA,EACTC,QANclF,KAAK+E,MAAMF,EAAc,OAU3C,IAAKJ,EACH,OAAO,wBAGT,IAAM9M,EAAqB,CACzB+C,IAAK,MACL8H,KAAM,KACNzG,SAAU,CAAC,SAAU,YACrBoJ,YAAapQ,EAAMC,OAAOM,WAAWJ,MACrCkQ,YAAa,CAAC,EAAG,GACjBC,YAAa,QACbzN,MAAO7C,EAAMC,OAAOC,KAAKC,MACzBgD,UAAW,SACXL,WAAY9C,EAAMuB,MAAMC,QACxBkC,SAAU,GACV,UAAW,CACTV,eAAgB,OAChBH,MAAO7C,EAAMC,OAAOC,KAAKC,OAE3B+B,GAAI,GACJG,GAAI,CAAC,EAAG,GAGRU,QAAS,CAAC,OAAQ,UAClB8D,cAAe,SACfM,SAAU,OACVlE,MAAO,EACP0J,GAAI,CAAC,MAAO,IAGR4D,EAAgC,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,OAAQtQ,EAAU,EAAVA,KAExCuQ,EAAWD,EAAS,IAAM,EAAI,EAC9BE,EAFU,QAECxQ,EAAmB,GAAK,GACnCyQ,EAHU,QAGAzQ,EAAmB,GAAK,GACxC,OACE,oBAAMmD,GAAI,CAACoH,GAAI,KACb,oBAAMpH,GAAI,CAACK,SAAUiN,IAClBH,EAAO3B,WAAW+B,SAASH,EAAU,MAExC,oBAAMpN,GAAI,CAACK,SAAUgN,IAAYxQ,KAKvC,OACE,mBAAKmD,GAAIT,GACP,YAAC2N,EAAD,CAAUC,OAAQd,EAAcK,KAAM7P,KAAK,SAC3C,YAACqQ,EAAD,CAAUC,OAAQd,EAAcO,MAAO/P,KAAK,QAC5C,YAACqQ,EAAD,CAAUC,OAAQd,EAAcQ,QAAShQ,KAAK,SAC9C,YAACqQ,EAAD,CAAUC,OAAQd,EAAcS,QAASjQ,KAAK,UCxFvC2Q,EAAkC,SAAC,GAKzC,IAJL3Q,EAII,EAJJA,KACA4Q,EAGI,EAHJA,UAGI,IAFJC,iBAEI,SADJrO,EACI,EADJA,aAEMiE,EAA4B,CAChCxD,UAAW2N,GAGPrE,EAAyB,CAC7B3J,WAAY9C,EAAMuB,MAAMC,QACxBkC,SAAU1D,EAAM0B,UAAUF,QAAQX,QAClCgC,MAAO7C,EAAMC,OAAOY,QACpBmQ,WAAY,UAGRC,EAAyB,CAC7B1Q,WAAYP,EAAMC,OAAOY,QACzBwL,aAAc,GACdtG,OAAQ,EACR7C,MAAO,CAAC,OAAQ,OAChBgH,OAAsB,SAAd4G,OAAuBzI,EAAY,QAG7C,OACE,mBAAKhF,GAAE,2BAAMsD,GAAiBjE,IAC5B,mBAAKW,GAAIoJ,GAAYvM,GACpB6Q,EAAY,mBAAK1N,GAAI4N,SAAgB5I,ICX/B6I,EAA+B,SAAC,GAMtC,IALLvO,EAKI,EALJA,SACAwO,EAII,EAJJA,MACAC,EAGI,EAHJA,WAGI,IAFJC,iBAEI,SADJC,EACI,EADJA,cACI,EAC8CjN,mBAChDgN,GAFE,mBACGE,EADH,KACsBC,EADtB,OAIwCnN,mBAAiB,GAJzD,mBAIGoN,EAJH,KAImBC,EAJnB,KAKEC,EAAcjN,iBAAuB,MACrCkN,EAAalN,iBAAe,GAElCQ,qBAAU,WAIR,IAAMe,EAAK,IAAIC,KAAe,SAACC,GAC7BA,EAAQC,SAAQ,SAACC,GACfuL,EAAW7M,QAAU0M,EADI,IAElB1L,EAAUM,EAAMC,YAAhBP,OACP2L,EAAkB3L,SAItB,OADAE,EAAGQ,QAAQkL,EAAY5M,SAChB,kBAAMkB,EAAGS,gBACf,IAEH,IAAMC,EAA4B,CAChCK,SAAU,WACV6K,aAAc,WACdrE,WAAY,SACZjG,SAAU,UACVuK,cAAe,SACfjP,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB4R,KAAM/R,EAAMC,OAAOC,KAAKC,MACxB4F,OAAQ,OACRiM,QAAS,QACT9O,MAAO,QAYH+O,EAAc,UAAwB,IANtB,WACpB,IAAMC,EAAOjH,KAAKkH,IAAIV,EAAiBG,EAAW7M,SAClD,OAAa,IAATmN,EAAmBT,EAChBS,EAGiBE,GAAN,KAEdC,EAAoC,CACxCtI,GAAI,MACJO,GAAI,GACJgI,gBAAiB,EACjBC,gBAAiBvS,EAAMC,OAAOC,KAAKC,MACnCqS,gBAAiB,SACjBC,UAAW,SACX1M,OAAQwL,EAAoB,EAAIE,EAChC3K,mBAAoBmL,GAGhBS,EAAiC,CACrCxP,MAAO,OAEP,UAAW,CACT0E,OAAQ+K,IAAMC,SAASC,MAAMlQ,GAAY,EAAI,UAAY,UACzDE,MAAO,CACL7C,EAAMC,OAAOC,KAAKC,MAClBwS,IAAMC,SAASC,MAAMlQ,GAAY,EAC7B3C,EAAMC,OAAOc,OACbf,EAAMC,OAAOC,KAAKC,SAK5B,OACE,mBAAKkD,GAAIsD,GACP,oBACEtD,GAAE,2BAAMqP,GAAsBtB,GAC9B5N,QAAS,WACgC,IAAnCmP,IAAMC,SAASC,MAAMlQ,IACzB6O,GAAqB,SAACD,GAAD,OAAwBA,OAG9CJ,GAEH,mBACE9N,GAAE,2BAAMgP,GAAyBf,IAEjC,mBAAKzJ,IAAK8J,EAAahP,SAAUA,OC1H5BmQ,EAAuB,CAClC,KAAM,CACJ3K,QAAS,EACTd,UAAW,oBAEb,OAAQ,CACNc,QAAS,EACTd,UAAW,kBAIF0L,EAA6B,CACxC,KAAM,CACJ5K,QAAS,EACTd,UAAW,iBAEb,OAAQ,CACNc,QAAS,EACTd,UAAW,qBA2DF2L,EAAsB,CACjC,KAAM,CACJ7K,QAAS,GAEX,OAAQ,CACNA,QAAS,IAIA8K,EAAuB,CAClC,KAAM,CACJ9K,QAAS,GAEX,OAAQ,CACNA,QAAS,IAIA+K,EAA+B,CAC1C,KAAM,CACJ/K,QAAS,GAEX,OAAQ,CACNA,QAAS,KAIAgL,EAAqB,CAChC,KAAM,CACJhL,QAAS,EACTjF,MAAO,EACP6C,OAAQ,EACRsB,UAAW,4BAEb,OAAQ,CACNc,QAAS,EACTjF,MAAO,OACP6C,OAAQ,OACRsB,UAAW,yBAIF+L,EAAoB,CAC/B,KAAM,CACJ/L,UAAW,gBAEb,OAAQ,CACNA,UAAW,mBCnFTgM,EAAsC,SAAC,GAKtC,IAJLC,EAII,EAJJA,IACAC,EAGI,EAHJA,eACA/P,EAEI,EAFJA,QACAd,EACI,EADJA,aAIME,EAAqB,CACzBM,MAFY,GAELqQ,EAAerQ,MACtB6C,OAHY,GAGJwN,EAAexN,OACvByN,UAAW,SAGP7S,EAAuB,CAC3BuH,gBAAiBlI,EAAMC,OAAOiB,iBAC9B8F,SAAU,WACV9D,MAAO,OACP6C,OAAQ,OACRwH,OAAQ,GAGJ5G,EAAyB,aAC7BK,SAAU,WACVjE,QAAS,eACT,UAAW,CACT6E,OAAQ,WAEVjC,IAAK,MACL0B,UAAW,sBACR3E,GAGL,OACE,mBAAKW,GAAIsD,EAAcnD,QAASA,GAC9B,mBAAKH,GAAIT,EAAOkF,IAAKwL,IACrB,mBAAKjQ,GAAI1C,MAUT8S,EAA0C,SAAC,GAM1C,IALLH,EAKI,EALJA,IACAI,EAII,EAJJA,YACAH,EAGI,EAHJA,eACAI,EAEI,EAFJA,UACAC,EACI,EADJA,YACI,EACoCvP,mBAAiB,MADrD,mBACGwP,EADH,KACiBC,EADjB,KAEEC,EAAarP,iBAAyB,MAE5CQ,qBAAU,WACR4O,EAAgBC,EAAWhP,QAAQiP,wBAAwB9Q,SAC1D,IAEH,IACMyD,EAA4B,CAChCO,UAAW,oBACXnE,QAAS,eACTiE,SAAU,WACVyD,GAAI,OACJxD,OAAQ,EACRM,SAAU,SACV,cAAe,CACb0M,UAAW,uBACX5M,UAAW,iBAEb,cAAe,CACbnE,MAAO,CAAC2Q,EAbO,IAaON,EAAerQ,OACrC6C,OAAQ,CAdO,IAcNwN,EAAexN,QACxBe,mBAAoB,OAEtBoB,gBAAiB,cACjBpB,mBAAoB,MACpB,oBAAqBkM,EACrB,qBAAsBF,EACtB,2BAA4BC,GAGxBmB,EAAgC,CACpChM,gBAAiBlI,EAAMC,OAAOgB,oBAC9B+Q,QAAS,GACT3P,GAAI,MACJqB,SAAU1D,EAAM0B,UAAUE,UAC1BkB,WAAY9C,EAAMuB,MAAME,KACxBuF,SAAU,WACVuG,OAAQ,EACRrK,MAAO,OACPC,UAAW,QACXkE,UAAW,mBACX4M,UAAW,8BAGP7H,EAA0B,CAC9BoH,UAAW,QACXtQ,MAAOqQ,EAAerQ,MACtB6C,OAAQwN,EAAexN,OACvBoO,kBAAmB,WACnBC,cAAe,SACfC,kBAAmB,KACnBC,wBAAyB,SACzBxN,mBAAoB,OAGtB,OACE,YAAC,IAAMkH,SAAP,KAEE,mBAAKnG,IAAKkM,EAAY1Q,GAAI,CAACH,MAAO,OAAQ8D,SAAU,cACpD,mBACE3D,GAAIsD,EACJ4N,YAAaZ,EACba,aAAcZ,EACda,QAASd,GAGT,mBAAK7L,IAAKwL,EAAKjQ,GAAI+I,EAAYvD,IAAKyK,IACpC,mBAAKjQ,GAAI6Q,GAAmBR,MA+BvBgB,EAAkC,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,OAAQpB,EAAoB,EAApBA,eAAoB,EAC3ClP,mBAAiB,GAD0B,mBACpEuQ,EADoE,KAC1DC,EAD0D,KAErEC,EAAUpQ,iBAAiB,IAKjCQ,qBAAU,WAER,OADA6P,IACOC,IACN,IAEH,IAAMC,EAAaC,mBAAQ,kBAAM,SAACC,GAChC,IAAIC,EAASD,EAAS,EAEtB,OADIC,EAAS,IAAGA,EAAST,EAAOxJ,OAAS,GAClCiK,KACN,CAACR,IAEES,EAAaH,mBAAQ,kBAAM,SAACC,GAChC,IAAIC,GAAUD,EAAS,GAAKR,EAAOxJ,OAEnC,OADA5E,QAAQC,IAAI2O,GACLC,KACN,CAACR,IASEG,EAAgB,WACpB,IAAMO,EAAK/P,OAAOgQ,aAAY,WAC5BV,EAAYQ,KA7BC,KA+BfP,EAAQ/P,QAAQyQ,KAAKF,IAUjBG,EAAa,WACjBT,IACAD,KAGIC,EAAgB,WACpBF,EAAQ/P,QAAQqB,QAAQb,OAAOmQ,gBAUjC,OACE,mBAAKrS,GARoB,CACzBF,UAAW,SACXwJ,GAAI,KACJ5J,QAAS,OACTiE,SAAU,aAKR,YAAC,EAAD,CACEsM,IAAKqB,EAAOM,EAAWL,IAAWtB,IAClCC,eAAgBA,EAChB/P,QAAS,WACPqR,EAAYI,GACZQ,KAEF/S,aAAc,CAAC+K,KAAM,KAEvB,YAAC,EAAD,CACE6F,IAAKqB,EAAOC,GAAUtB,IACtBI,YAAaiB,EAAOC,GAAUlB,YAC9BH,eAAgBA,EAChBI,UApDY,WAChBqB,KAoDIpB,YAvCc,WAClBrO,OAAO6J,YAAW,WAChByF,EAAYQ,GACZN,MApCsBY,QA0EtB,YAAC,EAAD,CACErC,IAAKqB,EAAOU,EAAWT,IAAWtB,IAClCC,eAAgBA,EAChB/P,QAAS,WACPqR,EAAYQ,GACZI,KAEF/S,aAAc,CAACiL,MAAO,OClOjBiI,GAAc,SACzBC,EACA3S,EACA6C,GAEA,MAAM,yCAAN,OAAgD8P,EAAhD,gBAA+D5K,KAAK6K,MAClE5S,GADF,aAEM+H,KAAK6K,MAAM/P,KAwBZ,IA/CmBgQ,GAAaC,GA+C1BC,GAAU,SAACC,EAAaC,GAAd,OACrBlL,KAAK6K,MAA4C,KAArC7K,KAAKmL,UAAYD,EAAMD,GAAOA,IAAc,KAE7CG,GAAU,SAACH,EAAaC,GAAd,OACrBlL,KAAK+E,MAAMiG,GAAQC,EAAKC,KAGbG,GAAc,SAACP,GAO1B,MANe,MAAXA,EAAI,KAAYA,EAAMA,EAAI/K,MAAM,IACxB,CACVuL,SAASR,EAAI/K,MAAM,EAAG,GAAI,IAC1BuL,SAASR,EAAI/K,MAAM,EAAG,GAAI,IAC1BuL,SAASR,EAAI/K,MAAM,EAAG,GAAI,MAUjBwL,GAAoB,SAACC,GAChC7Q,SAASnE,KAAKmB,MAAMoE,SAAW,SAC/BpB,SAASnE,KAAKmB,MAAM6P,UAAY,SAChC7M,SAASnE,KAAKmB,MAAM+C,IAApB,WAA8B8Q,EAA9B,OAOWC,GAAiB,WAC5B,IAAMC,EAAO/Q,SAASnE,KAAKmB,MAAM+C,IAEjCC,SAASnE,KAAKmB,MAAMoE,SAAW,GAC/BpB,SAASnE,KAAKmB,MAAM+C,IAAM,OAC1BC,SAASnE,KAAKmB,MAAM6P,UAAY,UAGhClN,OAAOqR,SAAS,GAAIL,SAASI,GAAQ,O,SC1H1BE,GAKX,WAAYC,EAAWC,EAAW7T,EAAe6C,GAAiB,IAAD,iCAJzD6F,UAIyD,OAHzD6B,UAGyD,OAFzD9H,SAEyD,OAM1DqR,aAAe,WACpB,IAAMC,EAAwB,CAC5B/O,gBAAiBlI,EAAMC,OAAOe,OAC9BqL,aAAc,GACdnJ,MAAO,EAAK0I,KACZ7F,OAAQ,EAAK6F,KACb6B,KAAM,EAAKA,KACX9H,IAAK,EAAKA,IACVqB,SAAU,YAEZ,OAAO,mBAAK3D,GAAI4T,KAfhBC,KAAKtL,KAAqB,EAAdX,KAAKmL,SACjBc,KAAKzJ,KAAOxC,KAAKmL,SAASlT,EAAM4T,EAChCI,KAAKvR,IAAMsF,KAAKmL,SAASrQ,EAAOgR,GCO9BI,GAAiB,WACrB,IAAMC,EAAiBxN,qBAAyBb,GAAaE,UAAU,GAEvE,IAAKmO,EACH,OAAO,wBAKT,IAAMxU,EAAqB,CACzBM,MAAO,OACP6C,OAAQ,QACRsR,eAAgB,QAChBC,gBACE,+BAAwBhB,GAAYtW,EAAMC,OAAOK,QAAjD,0BACUgW,GAAYtW,EAAMC,OAAOK,QADnC,mDAGFyC,QAAS,OACT8D,cAAe,UAGX0Q,EAA2B,CAC/B5R,IAAK,MACL8H,KAAM,KACNvK,MAAO,cACPuH,GAAI,OACJkC,GAAI,MACJ3F,SAAU,CAAC,SAAU,YAErBnE,MAAO7C,EAAMC,OAAOC,KAAKC,MACzBgD,UAAW,SACXL,WAAY9C,EAAMuB,MAAMC,QACxBkC,SAAU,CAAC,GAAI,IACf,UAAW,CACTV,eAAgB,OAChBH,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB+H,gBAAiBlI,EAAMC,OAAOM,WAAWI,SAE3C6W,gBAAiB,eACjBtV,GAAI,EACJe,MAAO,EAGPmN,YAAapQ,EAAMC,OAAOM,WAAWJ,MACrCkQ,YAAa,CAAC,EAAG,GACjBC,YAAa,SAIf,OACE,mBAAKjN,GAAIT,GACP,YAAC,EAAD,CAAgB2M,KAAM,IAAI3C,KAAKwK,EAAe7H,QAC9C,YAAC,IAAD,CAAMnM,GAAG,SAASC,GAAIkU,GACpB,mBAAKlU,GAAI,CAAC2G,GAAI,IAAKoN,EAAeK,UAAU7O,kBAY9C8O,GAA+B,SAACC,GAAW,IAAD,EACVtT,mBAAsB,IADZ,mBACvCuT,EADuC,KAC3BC,EAD2B,OAEhBxT,mBAAiB,MAFD,mBAEvCyT,EAFuC,KAE9BC,EAF8B,KAKxCC,EAAetT,iBAAuB,MAE5CQ,qBAAU,WAER,IAAMe,EAAK,IAAIC,KAAe,SAACC,GAC7BA,EAAQC,SAAQ,SAACC,GACf,IAAMN,EAASM,EAAMC,YAAYP,OACjCkS,EAAmBlS,SAIvB,OADAE,EAAGQ,QAAQuR,EAAajT,SACjB,kBAAMkB,EAAGS,gBACf,CAACkR,IAMJ,IAAMK,EAAqB,SAAClS,GAC1B,IAAM7C,EAAQ8U,EAAajT,QAAQiP,wBAAwB9Q,MAE3D6U,EAAYhS,EADsB,GACgB,GAIlD,IAHA,IAAMmS,EACJnS,EAHgC,GAGK6R,EAAWzM,OAAS,EAElDgN,EAAI,EAAGA,EAAID,EAAYC,IAC9BN,GAAc,SAACO,GACb,IAAMC,EAAK,YAAOD,GAYlB,OAXAC,EAAM7C,KACJ,IAAIqB,GACF3T,EAAQA,EAAQ,EAChB6C,EAAS,GACT7C,EAAQ,EACR6C,EAASA,EAAS,KAGtBsS,EAAM7C,KACJ,IAAIqB,GAAU,EAAG9Q,EAAS,GAAI7C,EAAQ,EAAG6C,EAASA,EAAS,KAEtDsS,MAKPzV,EAAqB,CACzBsF,gBAAiBlI,EAAMC,OAAOa,UAC9BuL,aAAc,GACdM,GAAI,GACJ3F,SAAU,WACV/E,GAAI,GACJD,GAAI,GACJe,QAAS,QAIX,OACE,mBAAKM,GAAIT,EAAOiF,IAAKmQ,GAClBzS,OAAO+S,WhBjJkB,IgBkJtBV,EAAW5T,KAAI,SAACuU,GAAD,OAASA,EAAIvB,kBAAgBhM,MAAM,EAAG8M,QACrDzP,EAEHsP,EAAMhV,WAOP6V,GAA0B,WAAO,IAC9BpP,EAAsBQ,qBAAyBb,GAA/CK,mBAEDxG,EAAqB,CACzBZ,GAAIhC,EAAM+B,YAAYC,GACtBC,GAAIjC,EAAM+B,YAAYE,GACtBC,GAAIlC,EAAM+B,YAAYG,IA4ExB,OAAKkH,EAKH,mBAAK/F,GAAIT,GACP,YAAC,EAAD,CAASkO,UAAU,SAAS5Q,KAAK,aACjC,YAAC,GAAD,KACGkJ,EAAmB+B,OAAS,EAC3B,mBAAK9H,GAbyB,CACpC6G,OAAQ,SAnEY,WACpB,IAAMtH,EAAqB,CACzBc,SAAU1D,EAAM0B,UAAUG,QAC1BiB,WAAY9C,EAAMuB,MAAME,MAGpByS,EAAgC,CACpC/Q,UAAW,OACXkH,GAAI,MACJ3G,SAAU1D,EAAM0B,UAAUD,KAAKuC,KAAI,SAAAyU,GAAC,OAAIA,EAAE,KAC1CpW,GAAI,SAGN,OAAO+G,EAAmBpF,KAAI,SAACrC,GAEpB3B,EAAMC,OAAOc,OADtB,IAQMyJ,EAAyB,CAC7B3H,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB,UAAW,CACT6C,eAAgB,OAChBH,MAAO7C,EAAMC,OAAOc,SAIlBoQ,EACJ,YAAC,IAAMnD,SAAP,KACE,YAAC,IAAD,CAAgB3K,GAAI,CAACM,GAAI,SACxBhC,EAAM+J,KACL,iBAAGd,KAAMjJ,EAAM+J,KAAMrI,GAAImH,GACtB7I,EAAMsK,MAGPtK,EAAMsK,MAId,OAAKtK,EAAM+R,YAGT,YAAC,EAAD,CAAavC,MAAOA,EAAOC,WAAYxO,EAAO0O,cAAe,CAACvH,GAAI,CAAC,MAAO,UACxE,mBAAK1G,GAAI6Q,GAAmBvS,EAAM+R,cAH7B,YAAC,EAAD,CAAavC,MAAOA,EAAOC,WAAYxO,OAoChB8V,IAxBb,WACrB,IAAM9V,EAAqB,CACzBc,SAAU1D,EAAM0B,UAAUG,QAC1BsB,UAAW,SACXN,MAAO7C,EAAMC,OAAOC,KAAKC,MACzBkC,GAAI,GAGN,OAAO,mBAAKgB,GAAIT,GAAT,gBAkBD+V,KAVC,yBAsBLC,GAAmB,WAAO,IACvBzP,EAAWS,qBAAyBb,GAApCI,QADsB,EAEH9E,mBAAiB,GAFd,mBAEtBnB,EAFsB,KAEf2V,EAFe,KAGvBC,EAAmBpU,iBAAuB,MAOhD,GALAQ,qBAAU,WACH4T,EAAiB/T,SACtB8T,EAASC,EAAiB/T,QAAQiP,wBAAwB9Q,SACzD,KAEEiG,EACH,OAAO,wBAGT,IAAMvG,EAAqB,CACzBsF,gBAAiBlI,EAAMC,OAAOM,WAAWI,QACzCuB,GAAIlC,EAAM+B,YAAYG,GACtBF,GAAIhC,EAAM+B,YAAYC,GACtBC,GAAIjC,EAAM+B,YAAYE,IAIlB8W,EAAQ7V,EhB3RgB,IgB2RW,IAAO,IAE1CyR,EAAkBxL,EAAQnF,KAAI,SAACrC,GACnC,MAAO,CACL2R,IAAKsC,GAAYjU,EAAMqX,QAAS/N,KAAK6K,MAAM5S,EAAQ6V,GAAQ,KAC3DrF,YAAa/R,EAAM+R,gBAMjBH,EAAiB,CACrBrQ,MAAOA,EAAQ6V,EACfhT,OAAQ7C,EAAQ6V,EAAQ,KAGpBE,EAAoB,CACxB/Q,gBAAiBlI,EAAMC,OAAOY,QAC9BkF,OAAQ,QACR7C,MAAO,CAAC,MAAO,OACfmJ,aAAc,EACdM,GAAI,CAAC,MAAO,SACZlC,GAAI,QAEN,OACE,mBAAKpH,GAAIT,EAAOiF,IAAKiR,GACnB,YAAC,EAAD,CAAS5Y,KAAK,UAAU4Q,UAAU,WAClC,YAAC,EAAD,CAAgB6D,OAAQA,EAAQpB,eAAgBA,IAChD,mBAAKlQ,GAAI4V,MAOFC,GAAiB,WAC5B,OACE,uBACE,YAAC,GAAD,MACA,YAAC,GAAD,MACA,YAAC,GAAD,QCtTAC,IHyBoBpD,GGxBxB/V,EAAMC,OAAOa,UHwBwBkV,GGvBrC,GHwBO,2BAzBe,SAACD,GAEvBA,EAAMA,EAAIqD,QAAQ,cAAe,IAGjC,IAAIC,EAAiB9C,SAASR,EAAK,IAMnC,MAAO,CACLuD,EAAID,GAAU,GAAM,IACpBE,EAAIF,GAAU,EAAK,IACnBG,EAAY,IAATH,GAYAI,CAAS1D,KADd,IAEE2D,EAAG1D,MGvBM2D,GAAiD,SAAC,GAM1C,IALnBC,EAKkB,EALlBA,QACAC,EAIkB,EAJlBA,QACAC,EAGkB,EAHlBA,WACApX,EAEkB,EAFlBA,aACAC,EACkB,EADlBA,SAEMoX,EAAsB,aAC1B7W,MAAO0W,EACP7T,OAAQ8T,EACRG,UAAWF,EAEX5R,gBAAiBiR,GAASc,eAAe,KAAxB,eACLd,GAASG,EADJ,aACUH,GAASK,EADnB,aACyBL,GAASI,EADlC,aACwCJ,GAASO,EADjD,iDAIdhX,GAGL,OAAO,mBAAKW,GAAI0W,GAAYpX,IC5BjBuX,GAA8B,WAAO,IAAD,EACC7V,oBAAkB,GADnB,mBACxC8V,EADwC,KACtBC,EADsB,KAGzCC,EAAqBvL,EAAmBqL,EAAkB,KAE1DG,EAAeC,uBAAY,YAC1BJ,GAAoB5U,OAAOiV,YAAc,IAC5CJ,GAAoB,GACXD,GAAoB5U,OAAOiV,aAAe,KACnDJ,GAAoB,KAErB,CAACD,IAEJjV,qBAAU,WAGR,OAFAU,SAASJ,iBAAiB,SAAU8U,GAAc,GAE3C,kBAAM1U,SAASH,oBAAoB,SAAU6U,GAAc,MACjE,CAACA,IAKJ,IAAMG,EAAc,WAClBlV,OAAOqR,SAAS,CAACjR,IAAK,EAAGoI,SAAU,YAsDrC,OAAOsM,EA/CoB,WACzB,IAAM9C,EAA2B,CAC/BvQ,SAAU,QACVuG,OAAQ,KACRI,MAAO,KAEPzK,MAAO,CAAC,OAAQ,OAAQ,QACxB6C,OAAQ,CAAC,OAAQ,OAAQ,QACzBsG,aAAc,MAEd,oBAAqB6G,EACrBkB,cAAe,SACfC,kBAAmB,OAEnBtR,QAAS,OACTgE,WAAY,SACZH,eAAgB,SAEhBsB,gBAAiBlI,EAAMC,OAAOa,UAC9BoG,UAAW,qCAEXI,WAAY,gDACZa,QAASgS,EAAmB,GAAM,EAElClT,OAAQ,GAER,UAAW,CACTkB,QAAS,EACTD,gBAAiBlI,EAAMC,OAAOY,QAC9B+G,OAAQ,YAWZ,OACE,mBAAKvE,GAAIkU,EAAa/T,QAASiX,GAC7B,YAAC,IAAD,CAAW5X,MAAO7C,EAAMC,OAAOC,KAAKC,MAAOkD,GAThB,CAC7B6G,OAAQ,OACRhH,MAAO,CAAC,OAAQ,OAAQ,QACxB6C,OAAQ,WAWgB2U,GAAuB,YAAC,IAAM1M,SAAP,OCrB/C2M,GAA4C,SAAC,GAK5C,IAJLza,EAII,EAJJA,KACA0a,EAGI,EAHJA,aACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,iBAEMnU,EAAyB,aAC7BK,SAAU,WACV2F,GAAI,KACJ7B,GAAI,KACJzI,GAAI,KACJa,MAAO,CAAC,MAAO,MAAO,OACtB6C,OAAQ,OAGRgE,GAAqB,SAAjB6Q,EAA0B,OAAS,EACvCjX,GAAqB,UAAjBiX,EAA2B,OAAS,EACxCtQ,GAAqB,UAAjBsQ,EAA2B,MAAQ,EACvCvQ,GAAqB,SAAjBuQ,EAA0B,MAAQ,EACtC3T,OAAQ,EAER9D,UAAWyX,EAEX1S,gBAAiBlI,EAAMC,OAAOY,SAE3Bga,GAECjM,EAA2B,aAC/B7L,QAAS,SACTiE,SAAU,WACVtD,SAAU1D,EAAM0B,UAAUF,QAAQG,MAClCmB,WAAY9C,EAAMuB,MAAME,KACxBoB,MAAO7C,EAAMC,OAAOC,KAAKC,MAEzB+J,OAAQ,QAEL4Q,GAGL,OACE,mBAAKzX,GAAIsD,GACP,iBAAGtD,GAAIuL,GAAiB1O,KAQxB6a,GAAwC,SAAC,GAKxC,IAJLC,EAII,EAJJA,QACA9X,EAGI,EAHJA,MACA6C,EAEI,EAFJA,OACAkV,EACI,EADJA,cACI,EAC4B5W,mBAAiB,GAD7C,mBACG6W,EADH,KACaC,EADb,OAE0B9W,oBAAkB,GAF5C,mBAEG+W,EAFH,KAEYC,EAFZ,KAGEC,EAAsBxM,EAAmBsM,EAAS,KAClDG,EAAW7W,iBAAuB,MAIxCQ,qBAAU,WACHqW,EAASxW,SAEdoW,EAAYlQ,KAAK6K,MAAMyF,EAASxW,QAAQiP,wBAAwB9Q,UAC/D,CAACqY,IAGJ,IAAM5U,EAA4B,CAGhCK,SAAU,WACVrB,IAAK,KACLgI,MAAyB,UAAlBsN,EAA4B,EAAI,OACvCxN,KAAwB,SAAlBwN,EAA2B,EAAI,OAErC/X,MAAOA,EACPsY,SAAUtY,EACV6C,OAAQA,EACR0V,UAAW,OAEXxU,OAAQ,EAERK,WAAY,0BACZ,UAAW,CACTD,UAAW,eACXc,QAAS,MAGPiE,EAA0B,CAC9BrJ,QAASqY,EAAU,OAAS,QAC5B,qBAAsBpI,EACtBiB,UAAW,oBAEXT,UAAW,QACXtQ,MAAO,OACP6C,OAAQ,QAEJ2V,EAA2B,CAG/B1U,SAAU,WACVkB,gBAAiBlI,EAAMC,OAAOK,OAAS,KACvCmb,UAAW,OACXvY,MAAO,OACP+D,OAAQ,EAERtB,IAAK,KACLgI,MAAyB,UAAlBsN,EAA4B,KAAO,OAC1CxN,KAAwB,SAAlBwN,EAA2B,KAAO,QAwB1C,OAGE,WAFA,CAEA,OAAK5X,GAAIsD,EAAckB,IAAK0T,GACzBD,EAbwB,WAC3B,IAAM9M,EAAkC,CACtC,sBAAuByE,EACvBgB,UAAWmH,EAAU,OAAS,sBAGhC,OAAO,YAAC,EAAD,CAAe1Y,aAAc8L,IAOXmN,QAAyBtT,EAChD,mBACEP,IAAK8N,GAAYoF,EAAS,IAAMjV,GAChCiC,IAAI,GACJ3E,GAAI+I,EACJwP,OA1BgB,WACpBP,GAAW,MA2BT,YAAC,GAAD,CACEzB,QAASsB,EACTrB,QAAS9T,EACTrD,aAAcgZ,MAQhBG,GAA0C,SAAC,GAI1C,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,mBAGMrV,EAAyB,aAC7B5D,QAAS,eACTmF,gBAAiBlI,EAAMC,OAAOY,QAE9BsC,UAAW,SAEXjB,GAAI,KACJG,GAAI,KACJoI,GAAI,KACJkC,GAAI,KACJ7B,GAAI,OAEJxD,WAAY,0BACZ,UAAW,CACTD,UAAW,eACXO,OAAQ,YAGPoU,GAECzE,EAA2B,CAC/B1U,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB2C,WAAY9C,EAAMuB,MAAME,KACxBiC,SAAU1D,EAAM0B,UAAUD,KAC1B+L,WAAY,SAEZ,UAAW,CACT3K,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB6C,eAAgB,SAoBpB,OAAO,mBAAKK,GAAIsD,GAXVoV,EAEA,iBAAGnR,KAAMmR,EAAY1Y,GAAIkU,GACtBuE,GAKA,oBAAMzY,GAAIkU,GAAV,IAAyBuE,KAQ9BG,GAA8C,SAAC,GAI9C,IAHL/Y,EAGI,EAHJA,MACA0X,EAEI,EAFJA,aACAsB,EACI,EADJA,aAGMC,EAAgC,CACpCnV,SAAU,WACVjE,QAAS,OACT8D,cAAe,SAEf3D,MAAOA,EACPsY,SAAUtY,EAGV6G,GAAqB,SAAjB6Q,EAA0B,EAAI,OAClCjX,GAAqB,UAAjBiX,EAA2B,EAAI,OACnCzX,UAA4B,UAAjByX,EAA2B,OAAS,SAE3C1G,EAAgC,CACpClN,SAAU,WAEVjE,QAAS,eACTb,GAAI,KAEJY,WAAY9C,EAAMuB,MAAME,KACxBiC,SAAU1D,EAAM0B,UAAUC,MAC1BkB,MAAO7C,EAAMC,OAAOC,KAAKG,SAEzB+b,SAAU,SACVC,WAAY,KAERC,EAAsB,2BACvBpI,GADuB,IAG1BrR,MAAO7C,EAAMC,OAAOa,UACpB4C,SAAU1D,EAAM0B,UAAUC,MAAMqC,KAAI,SAAC4H,GAAD,OAAUA,EAAO,KACrDoF,WAAY,OACZ/O,GAAI,OAEAsa,EAAoC,CACxCxZ,QAAS,OACT8D,cAAe,MACfD,eAAiC,UAAjBgU,EAA2B,aAAe,YAqB5D,OACE,mBAAKvX,GAAI8Y,GACP,iBAAG9Y,GAAIiZ,GAAYJ,EAAa3M,MAEhC,iBAAGlM,GAAI6Q,GAAmBgI,EAAaxI,aACvC,mBAAKrQ,GAAIkZ,GAjBPL,EAAaJ,WAEb,YAAC,GAAD,CACEA,WAAYI,EAAaJ,WACzBC,WAAYG,EAAaH,aAKxB,2BAkBLS,GAAsC,SAAC,GAMtC,IALLzW,EAKI,EALJA,OACA7C,EAII,EAJJA,MACAvB,EAGI,EAHJA,MACAiZ,EAEI,EAFJA,aACAc,EACI,EADJA,YACI,EAC8BrX,mBAAiB,GAD/C,mBACGoY,EADH,KACcC,EADd,KAEEC,EAAejY,iBAAuB,MAI5CQ,qBAAU,WACHyX,EAAa5X,SAElB2X,EACEzR,KAAK6K,MAAM6G,EAAa5X,QAAQiP,wBAAwBjO,WAEzD,CAAC4W,IAGJ,IAAMC,EAAoC,CACxClJ,YAAa/R,EAAM+R,YACnBnE,KAAM5N,EAAM4N,KACZuM,WAAYna,EAAMma,WAClBC,WAAYpa,EAAMoa,YAQdc,EAAoC,aACxC7S,GAAI,SACJ/H,GAAI,KAEJc,QAAS,OACT8D,cAAe,SAEfmT,UAAW,CAAC,OAAQ,OAAQ,OAAQjU,IAEjC2V,GAyBL,OACE,mBAAKrY,GAvC2B,CAChChB,GAAI,KACJ2H,GAAI,CAAC,KAAM,KAAM,IAqCMnC,IAAK8U,GAC1B,YAAC,GAAD,CACE/C,QAAS1W,EACTR,aAAcma,GAEd,YAAC,GAAD,CAAc3c,KAAMyB,EAAM8V,UAAWmD,aAAcA,IACnD,YAAC,GAAD,CACE1X,MAAOvB,EAAMqX,QAAU,MAAQ,MAC/B4B,aAAcA,EACdsB,aAAcU,IA1BhBjb,EAAMqX,QAEN,YAAC,GAAD,CACEgC,QAASrZ,EAAMqX,QACf9V,MAAM,MACN6C,OAAQ0W,EACRxB,cAAgC,SAAjBL,EAA0B,QAAU,SAKlD,2BAyBEkC,GAAmB,WAC9B,IAAMC,EAAqBnT,qBAAyBb,GAAalF,OAG3D8C,EAA4B,CAGhCzD,MAAO,OACPsY,SAAU,OACVxB,UAAW,QACX9R,gBAAiBlI,EAAMC,OAAOM,WAAWJ,OAqB3C+E,qBAAU,WAGR,OAFAU,SAASnE,KAAKmB,MAAMoa,UAAY,SAEzB,kBAAOpX,SAASnE,KAAKmB,MAAMoa,UAAY,cA6BhD,OACE,mBAAK3Z,GAAIsD,GAEP,YAAC,GAAD,MAEA,mBAAKtD,GAxD8B,CAGrCsC,IAAK,OACLqB,SAAU,WACV9D,MAAO,OACPH,QAAS,OACT8D,cAAe,SACfiE,GAAI,SAiDA,mBAAKzH,GA/C8B,CAGvCoK,KAAM,KACN+N,SAAU,MACVxU,SAAU,aA2CJ,YAAC,EAAD,CAAS9G,KAAK,SAAS4Q,UAAU,UA3BhCiM,EAAU/Y,KAAI,SAACrC,EAAOsb,GAC3B,IAAMC,EAAgC,CACpChV,gBACE+U,EAAQ,IAAM,EAAIjd,EAAMC,OAAOM,WAAWI,QAAU,eAGxD,OACE,mBAAKkI,IAAKoU,EAAO5Z,GAAI,CAAC2D,SAAU,WAAYjE,QAAS,WACnD,YAAC,GAAD,CACEG,MAAM,OACN6C,OAAO,OACPpE,MAAOA,EACPiZ,aAAcqC,EAAQ,IAAM,EAAI,OAAS,QACzCvB,YAAawB,W,6BCncnBC,GAA4B,CAChCxX,IAAK,CAAC,QAAS,QAAS,QAAS,OACjC8H,KAAM,CAAC,KAAM,KAAM,KAAM,OACzBvK,MAAO,CAAC,MAAO,MAAO,MAAO,OAC7B6C,OAAQ,CAAC,MAAO,MAAO,MAAO,QAI1BqX,GAAyB,CAC7B7P,OAAQ,CAAC,MAAO,MAAO,MAAO,MAC9BI,MAAO,CAAC,OAAQ,MAAO,MAAO,OAC9BzK,MAAO,CAAC,MAAO,MAAO,MAAO,QAIzBma,GAAsB,CAC1B1X,IAAK,CAAC,QAAS,QAAS,QAAS,OACjC8H,KAAM,CAAC,KAAM,MAAO,MAAO,OAC3BvK,MAAO,CAAC,MAAO,MAAO,MAAO,OAC7B6C,OAAQ,CAAC,MAAO,MAAO,MAAO,QAO1BuX,GAA0D,SAAC,GAG5C,IAFnBC,EAEkB,EAFlBA,SACA7J,EACkB,EADlBA,YAGM/M,EAA4B,CAKhCK,SAAU,WACV9D,MAAOia,GAA0Bja,MACjCuK,KAAM0P,GAA0B1P,KAChC1H,OAAQoX,GAA0BpX,OAClCJ,IAAKwX,GAA0BxX,IAE/B5C,QAAS,OACT8D,cAAe,SACf1D,UAAW,SAEX+E,gBAAiBlI,EAAMC,OAAOM,WAAWJ,OAErCqd,EAAiC,CACrCxW,SAAU,WACV9D,MAAO,OACP6C,OAAQ,MAGRhD,QAAS,OACTgE,WAAY,SACZ5D,UAAW,SAEX+E,gBAAiBlI,EAAMC,OAAOa,UAG9B2c,SAAU,0CAONrM,EAA0B,CAC9BtO,WAAY9C,EAAMuB,MAAMC,QACxBkC,SAAU1D,EAAM0B,UAAUF,QAAQG,MAClCkB,MAAO7C,EAAMC,OAAOC,KAAKC,MAEzB+J,OAAQ,QAEJgK,EAAgC,CACpCpR,WAAY9C,EAAMuB,MAAME,KACxBiC,SAAU1D,EAAM0B,UAAUC,MAC1BkB,MAAO7C,EAAMC,OAAOC,KAAKE,UAGzB8B,GAAI,KACJgI,OAAQ,QAGV,OACE,mBAAK7G,GAAIsD,GACP,mBAAKtD,GAAIma,GACP,kBAAIna,GAAI+N,GAAamM,IAEvB,mBAAKla,GA3BoC,CAC3C2W,UAAW,MACXjX,QAAS,cACTgE,WAAY,WAyBR,iBAAG1D,GAAI6Q,GAAmBR,MAQ5BgK,GAA4C,SAAC,GAE9B,IADnBC,EACkB,EADlBA,gBAGMhX,EAA4B,CAChCK,SAAU,WACVuG,OAAQ6P,GAAuB7P,OAC/BI,MAAOyP,GAAuBzP,MAC9BzK,MAAOka,GAAuBla,MAO9BmJ,aAAc,OACdnE,gBAAiBlI,EAAMC,OAAOM,WAAWJ,MAEzC4C,QAAS,OACT8D,cAAe,SACf1D,UAAW,UA4Eb,OACE,mBAAKE,GAAIsD,GACP,mBAAKtD,GA5E+B,CACtC2D,SAAU,WACV9D,MAAO,OACP6C,OAAQ,OACRiE,GAAI,OAQoB,WACxB,IAAM4T,EAAuC,CAC3C7a,QAAS,OACT8D,cAAe,MACf3D,MAAO,OACP6C,OAAQ,OAERiE,GAAI,KACJ6T,KAAM,KAEFpR,EAAyB,CAC7B3J,WAAY9C,EAAMuB,MAAME,KACxBiC,SAAU1D,EAAM0B,UAAUC,MAC1BkB,MAAO7C,EAAMC,OAAOC,KAAKE,UAEzB0d,QAAS,OACTC,UAAW,aACX1B,WAAY,KAER2B,EAAwB,CAC5BhX,SAAU,WACVjE,QAAS,gBAELkb,EAA4B,CAChC9a,UAAW,OACX4G,GAAI,KACJ8T,KAAM,KAEFK,EAA6B,CACjC/a,UAAW,QACXQ,GAAI,KACJka,KAAM,KAGR,OAAOnV,OAAOC,KAAKgV,GAAiB3Z,KAAI,SAACma,GACvC,OAEE,WADA,CACA,OAAK9a,GAAIua,EAAyB/U,IAAKsV,GAErC,mBACE9a,GAAE,2BACG2a,GACAC,IAGL,iBAAG5a,GAAIoJ,GAAYkR,EAAgBQ,GAAMC,iBAI3C,mBACE/a,GAAE,2BACG2a,GACAE,IAGL,iBAAG7a,GAAIoJ,GAAYkR,EAAgBQ,GAAME,YASjBC,MAO9BC,GAAsC,SAAC,GAGxB,IAFnBvF,EAEkB,EAFlBA,QACA9V,EACkB,EADlBA,MACkB,EACYmB,oBAAkB,GAD9B,mBACX+W,EADW,KACFC,EADE,KAUZtB,EAAyB,CAC7B/S,SAAU,WACVrB,IAAK,MACL8H,KAAM,MAENvF,gBAAiBlI,EAAMC,OAAOa,UAAY,MAuB5C,OACE,YAAC,IAAMkN,SAAP,KAT2B,WAC3B,GAAIoN,EACF,OACE,YAAC,EAAD,CAAe1Y,aAAc,CAACwF,gBAAiBlI,EAAMC,OAAOK,UAO7Dqb,GACD,mBACE7T,IAAK8N,GAAYoD,EAAS9V,EAAO,KACjC8E,IAAI,GACJ3E,GAvC0B,CAC9BmQ,UAAW,QACXtQ,MAAO,OACP6C,OAAQ,QAqCJ6V,OAvBgB,WACpBP,GAAW,MAwBT,YAAC,GAAD,CACEzB,QAAQ,OACRC,QAAQ,OACRnX,aAAcqX,MAUTyE,GAAsC,SAAC,GAG/B,IAFnBC,EAEkB,EAFlBA,aACAC,EACkB,EADlBA,SACkB,EACQra,mBAAiB,GADzB,mBACXnB,EADW,KACJ2V,EADI,KAEZ8F,EAAeja,iBAAuB,MAE5CQ,qBAAU,WACHyZ,EAAa5Z,SAElB8T,EAAS5N,KAAK6K,MAAM6I,EAAa5Z,QAAQiP,wBAAwB9Q,UAChE,CAACyb,IAGJ,IAAMC,EAA4B,CAChC1b,MAAO,QACP6C,OAAQ,QACRiB,SAAU,QACVrB,IAAK,EACL8H,KAAM,EACNE,MAAO,EACPJ,OAAQ,EACRrF,gBAAiBlI,EAAMC,OAAOM,WAAWK,YACzCuH,QAAS,GACTlB,OAAQ,GACRmB,eAAgB,cAGZyW,EAAgC,CACpC7X,SAAU,QACV9D,MAAO,QACP6C,OAAQ,QACRJ,IAAK,EACL8H,KAAM,EACNE,MAAO,EACPJ,OAAQ,EAERtG,OAAQ,GAER,mBAAoBkM,EACpBiB,cAAe,QACfC,kBAAmB,MAMfyK,EAAmC,CACvC9X,SAAU,WACVkD,OAAQ,OACRvE,IAAK0X,GAAoB1X,IACzB8H,KAAM4P,GAAoB5P,KAC1BvK,MAAOma,GAAoBna,MAC3B6C,OAAQsX,GAAoBtX,QAMxB4X,EAAmC,CACvCoB,YAAa,CACXX,eAAgB,YAChBC,MAAOK,EAASM,YAElBC,YAAa,CACXb,eAAgB,QAChBC,MAAOK,EAASQ,kBAElBC,WAAY,CACVf,eAAgB,YAChBC,MAAOK,EAASU,iBAElB3T,MAAO,CAAC2S,eAAgB,SAAUC,MAAOK,EAASjT,OAClDI,UAAW,CAACuS,eAAgB,YAAaC,MAAOK,EAAS7S,YAoB3D,OAEE,WADA,CACC,IAAMmC,SAAP,KACE,mBAAK3K,GAAIub,IACT,mBAAKvb,GAAIwb,GAEP,mBAAKxb,GAxDmC,CAC5CH,MAAO,OACP6C,OAAQ,QAsD+BvC,QAlBb,SAC1B6B,GAKIA,EAAEC,SAAWD,EAAEga,gBACjB3I,KACA+H,OAYI,mBAAKpb,GAAIyb,EAAqBjX,IAAK8W,GACjC,YAAC,GAAD,CAAW3F,QAAS0F,EAAS1F,QAAS9V,MAAOA,KAI/C,YAAC,GAAD,CACEqa,SAAUmB,EAASzS,KACnByH,YAAagL,EAAShL,cAExB,YAAC,GAAD,CAAciK,gBAAiBA,QCnZnC2B,GASJ,WAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIhd,GAAqB,IAAD,iCARhD2c,QAQgD,OAPhDC,QAOgD,OANhDC,QAMgD,OALhDC,QAKgD,OAJhDC,QAIgD,OAHhDC,QAGgD,OAFhDhd,MAAqB,GAE2B,KAUjDid,SAAW,kBAAM,EAAKjd,OAV2B,KAYjDkd,YAAc,WACnB,MAAM,WAAN,OAAkB,EAAKP,GAAvB,YAA6B,EAAKC,GAAlC,aAAyC,EAAKC,GAA9C,YAAoD,EAAKC,GAAzD,aAAgE,EAAKC,GAArE,YAA2E,EAAKC,GAAhF,MAZA1I,KAAKqI,GAAKA,EACVrI,KAAKuI,GAAKA,EACVvI,KAAKyI,GAAKA,EACVzI,KAAKsI,GAAKA,EACVtI,KAAKwI,GAAKA,EACVxI,KAAK0I,GAAKA,EACV1I,KAAKtU,MAAQA,GAUJmd,GAAkB,WAAO,IAAD,EACHnW,qBAAyBb,GAAlDjF,EAD4B,EAC5BA,MAAOyF,EADqB,EACrBA,eADqB,EAEPlF,mBAAiB,GAFV,mBAE5B0B,EAF4B,KAEpBia,EAFoB,OAGT3b,mBAAiB,IAHR,mBAG5B4b,EAH4B,KAGrBC,EAHqB,OAIL7b,oBAAkB,GAJb,mBAI5B8b,EAJ4B,KAInBC,EAJmB,OAKD/b,mBAAe,MALd,mBAK5Bgc,EAL4B,KAKjBC,EALiB,KAM7BC,EAAU7b,iBAAuB,MACjC8b,EAAc9b,iBAAiB,IAC/B+b,EAAiB/b,iBAAyB,IAYhD,GAVAQ,qBAAU,WACR,IAAMe,EAAK,IAAIC,KAAe,SAACC,GAC7BA,EAAQC,SAAQ,SAACC,GACf2Z,EAAU3Z,EAAMf,OAAOob,oBAI3B,OADAza,EAAGQ,QAAQ8Z,EAAQxb,SACZ,kBAAMkB,EAAGS,gBACf,KAEE5C,IAAUyF,EACb,OAAO,YAAC,IAAMyE,SAAP,MAMT,IA6MMrH,EAAyB,yBAC7BqT,UAAW,QACX9R,gBAAiBlI,EAAMC,OAAOM,WAAWJ,MACzC4C,QAAS,OACToE,SAAU,QACPnH,EAAM+B,aALoB,IAM7BE,GAAI,OACJsF,SAAU,SACVV,cAAe,CAAC,SAAU,OAC1BG,SAAU,aASNiK,EAAyB,CAC7B/I,gBAAiBlI,EAAMC,OAAOa,UAC9BiF,OAAQ,EACR7C,MAAO,OACPmJ,aAAc,EACdrC,GAAI,SAGA2W,EAAkC,CACtC3Z,SAAU,WACVrB,IAAc,GAATI,EACLwH,OAAQ,EACRE,KAAM,EACNE,MAAO,EACPzK,MAAO,OACP6C,OAAiB,GAATA,EACRkB,OAAQ,GAGJ2Z,EAA8B,CAClC7a,OAAQ,QACRsG,aAAc,GACd+D,YAAapQ,EAAMC,OAAOK,OAC1B+P,YAAa,EACbnN,MAAO,OACPb,GAAI,MACJH,GAAI,QACJwB,SAAU1D,EAAM0B,UAAUE,UAAUoC,KAAI,SAACyU,GAAD,OAAOA,EAAI,KACnD3V,WAAY9C,EAAMuB,MAAME,KACxB,UAAW,CACT4O,YAAa,IACbwQ,QAAS,SAIPC,EAAqC,CACzC9Z,SAAU,WACV9D,MAAO,CAAC,OAAQ,MAAO,OACvB6G,GAAI,CAAC,EAAG,QACR4C,GAAI,CAAC,MAAO,QACZ7B,GAAI,CAAC,MAAO,QACZpH,SAAU1D,EAAM0B,UAAUE,UAAUoC,KAAI,SAACyU,GAAD,OAAOA,EAAI,MAE/CnM,EAAyB,CAC7BtF,SAAU,WACV2G,MAAO,QACPhI,IAAK,SAYDob,EAAoBxb,OAAO+S,WrBvWH,IqByW9B,OACE,mBAAKjV,GAAIsD,EAAckB,IAAK0Y,GAC1B,mBAAKzY,IAAKkZ,KAAgB3d,GAAIsd,IAzKR,WACxB,IAAMd,EAAW,SAAC1H,GAUhB,MAT2B,CACzBnR,SAAU,WACVjB,OAAQ,CAAC,MAAO,OAChBJ,IAAe,KAATwS,EAAI,GACVjV,MAAO,CAAC,MAAO,MAAR,UAAkBsd,EAAYzb,QAAQoT,GAAtC,MACPjQ,gBAAiBlI,EAAMC,OAAOM,WAAWI,QACzCgN,MAAM,GAAD,OAAK,EAAL,KACL1G,OAAQ,IAKZ,OAAOga,MAAMC,KAAK,IAAID,MAAMhW,KAAK+E,MAAMjK,EAAS,MAAM4C,QAAQ3E,KAAI,SAACmU,GAEjE,OADKqI,EAAYzb,QAAQoT,IAAIqI,EAAYzb,QAAQyQ,KAAKS,GAAQ,EAAG,KAC1D,mBAAK5S,GAAIwc,EAAS1H,QA0JxBgJ,GAED,YAAC,EAAD,CACEjhB,KAAK,QACL4Q,UAAWiQ,EAAoB,OAAS,SACxChQ,WAAW,EACXrO,aApB4B,CAChCK,QAAS,SACT4J,GAAI,CAAC,MAAO,QACZ7B,GAAI,CAAC,EAAG,WAoBN,mBAAKzH,GAAIyd,GACP,qBACEzd,GAAIud,EACJ1S,KAAK,OACLmQ,MAAO4B,EACPmB,SAAU,SAAC/b,GAAD,OAAO6a,EAAS7a,EAAEC,OAAO+Y,QACnCgD,YAAY,cAEH,KAAVpB,EACC,YAAC,KAAD,CAAU5c,GAAIiJ,IAEd,YAAC,IAAD,CAASjJ,GAAIiJ,EAAW9I,QAAS,kBAAM0c,EAAS,QAIpD,mBAAK7c,GAAI4N,IACE,KAAVgP,EACC,mBAAK5c,GA/F0B,CACnCN,QAAS,QACTgH,GAAI,CAAC,EAAG,MAAO,OACf9C,OAAQ,EACRtD,GAAI,CAAC,MAAO,KA7NM,WAClB,IAAM2d,EAAa,GACnBxd,EAAMsC,SAAQ,SAACmb,GACTD,EAAWC,EAAKC,UAClBF,EAAWC,EAAKC,UAAUhM,KAAK+L,GAE/BD,EAAWC,EAAKC,UAAY,CAACD,MAmBjC,OAAO7Y,OAAOC,KAAK2Y,GAAYtd,KAAI,SAACwd,EAAUvE,GAC5C,IAAM7L,EAA0B,CAC9BvO,MAAO7C,EAAMC,OAAOC,KAAKG,SACzB+P,YAAapQ,EAAMC,OAAOC,KAAKG,SAC/BqD,SAAU1D,EAAM0B,UAAUG,QAC1BiB,WAAY9C,EAAMuB,MAAME,KACxB,UAAW,CACToB,MAAO7C,EAAMC,OAAOC,KAAKG,SACzBuH,OAAQ,YAGN0J,EAA6B,CACjCzO,MAAO7C,EAAMC,OAAOC,KAAKE,UACzBgQ,YAAapQ,EAAMC,OAAOC,KAAKE,UAC/B2J,GAAI,MACJM,GAAI,MACJ3G,SAAU1D,EAAM0B,UAAUE,UAC1BsB,MAAO,OACP,UAAW,CACT0E,OAAQ,YAMN6Z,EACJ,mBAAKpe,GAJ2B,CAChCF,UAAW,UAIRqe,EADH,IACa,YAAC,KAAD,OAIf,OACE,YAAC,EAAD,CACErQ,MAAOsQ,EACPrQ,WAAYA,EACZE,cAAeA,EACfD,UAAqB,IAAV4L,GAnDA,SAACuE,GAChB,OAAOF,EAAWE,GAAUxd,KAAI,SAACud,GAC/B,OACE,mBACE/d,QAAS,WACP8c,EAAaiB,GACbnB,GAAW,KAGZmB,EAAKtV,SA4CPyV,CAASF,OAyPeG,IA1OJ,WAC3B,IARuBC,EAajBhf,EAAqB,CACzBC,MAAO7C,EAAMC,OAAOC,KAAKG,SACzB+P,YAAapQ,EAAMC,OAAOC,KAAKG,SAC/BqD,SAAU1D,EAAM0B,UAAUG,QAC1BiB,WAAY9C,EAAMuB,MAAME,KACxBuQ,QAAS,QACT/K,OAAQ,EACRlE,QAAS,QACTmH,OAAQ,OACR,UAAW,CACTtC,OAAQ,YAGNia,GA1BiBD,EA0BS3B,EAzBzBnc,EAAMge,QAAO,SAACP,GACnB,QAAKA,EAAKtV,MACHsV,EAAKtV,KAAK8V,cAAcC,SAASJ,EAAUG,mBAuBb/d,KAAI,SAACud,GAC1C,OACE,mBACEle,GAAIT,EACJY,QAAS,WACP8c,EAAaiB,GACbnB,GAAW,KAGZmB,EAAKtV,SAKZ,OAAO,mBAAK5I,GAhCsB,CAChCN,QAAS,OACT8D,cAAe,SACf4D,GAAI,SA6ByBoX,GA2M3BI,GAGDlB,EArLqB,WACxB,IAAMlB,EAAW,SAAC1H,GAChB,IAAM+J,EAAWtM,GACfrM,EAAe4O,EAAI5O,EAAe4B,QAAQ6N,QAC1C,IACA,KAWF,OATwB,yBACtB/R,OAAQ,EACRiB,gBAAiBlI,EAAMC,OAAOa,UAC9BwW,gBAAgB,OAAD,OAAS4K,EAAT,KACfzE,SAAUgD,EAAe1b,QAAQoT,GAAG2H,cACpC/V,GAAI,QACD0W,EAAe1b,QAAQoT,GAAG0H,YANP,IAOtBxI,eAAgB,WAKd8K,EAAYlB,MAAMC,KACtB,IAAID,MAAMhW,KAAK+E,MAAMjK,EAAS,MAAM4C,QACpC3E,KAAI,SAACmU,GAmBL,OAlBKsI,EAAe1b,QAAQoT,IAC1BsI,EAAe1b,QAAQyQ,KACrB,IAAI8J,GAAJ,UACKjJ,GAAQ,GAAI,IADjB,KAEE,EACA,EAHF,UAIKA,GAAQ,GAAI,KAJjB,KAKE,OALF,UAMKA,GAAQ,GAAI,KANjB,KAOE,CACEnT,MAAM,GAAD,OAAKmT,GAAQ,EAAG,IAAhB,QACLtQ,OAAO,GAAD,OAAKsQ,GAAQ,EAAG,IAAhB,QACN1S,GAAG,GAAD,OAAK0S,GAAQ,GAAI,IAAjB,KACFrM,GAAG,GAAD,OAAKqM,GAAQ,EAAG,GAAhB,QAKH,mBAAKhT,GAAIwc,EAAS1H,QAW3B,OAAO,mBAAK9U,GARiB,CAC3BH,MAAO,CAAC,MAAO,OACfyC,IAAK,MACLgI,MAAO,EACP3G,SAAU,WACVC,OAAQ,IAGgBkb,GAkIHC,QAAsB/Z,EA/HvB,WACtB,GAAI8X,GAAWE,EAEb,OADA7J,GAAkBjR,OAAO8c,SAEvB,YAAC,GAAD,CACE5D,aAAc,kBAAM2B,GAAW,IAC/B1B,SAAU2B,IA2HbiC,KCnYMC,GAAoC,WAAO,IAAD,EACjBle,mBAAS,GADQ,mBAC9Cme,EAD8C,KAClCC,EADkC,KAI/C9b,EAA4B,CAGhCzD,MAAO,OACP8W,UAAW,QACX9R,gBAAiBlI,EAAMC,OAAOM,WAAWC,MAmBrCkiB,EAAc,WACdF,EAAa,GACfC,EAAcD,EAAa,IA2B/B,OACE,mBAAKnf,GAAIsD,GACP,mBAAKtD,GAhD8B,CAGrCsC,IAAK,OACLqB,SAAU,WACV9D,MAAO,OACPH,QAAS,OACT8D,cAAe,SACf5E,GAAI,OAEJkB,UAAW,WAuCP,mBAAKE,GArC+B,CACxCH,MAAO,OACPC,UAAW,WAoCL,sBACE2E,IAAI,iMACJ5E,MAAM,MACN6C,OAAO,UAET,mBACE1C,GAAI,CACFsJ,GAAI,KACJlC,GAAI,OACJvH,MAAO,QAlCf,YAAC,IAAD,CACE0I,KAAM,GACNvI,GAAI,CACF2D,SAAU,WACVwU,SAAU,CAAC,GAAI,IACf1Q,GAAI,KACJjI,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB,kBAAmBiT,EAEnBa,UACiB,IAAfuO,EACI,OACA,SACC,IAAM,GAAMA,GAAY3T,WACzB,qBAERrL,QAASkf,KAuBP,iBACErf,GAAI,CACFP,WAAY9C,EAAMuB,MAAME,KACxBiC,SAAU1D,EAAM0B,UAAUD,KAC1BoB,MAAO7C,EAAMC,OAAOC,KAAKC,QAJ7B,2IC5EGwiB,GAAgB,WAAO,IAAD,EACiBte,oBAAkB,GADnC,mBAC1Bue,EAD0B,KACPC,EADO,OAEmBxe,oBAAkB,GAFrC,mBAE1Bye,EAF0B,KAENC,EAFM,KAI3BC,EAAsCpZ,qBAC1Cb,GACAS,eAGIyZ,EAAe,qDACnBD,EAAkBE,MAAK,SAACxJ,GAAD,MAAwB,uBAAjBA,EAAEyJ,cAAqCnK,SAEjEoK,EAAgB,qDACpBJ,EAAkBE,MAAK,SAACxJ,GAAD,MAAwB,wBAAjBA,EAAEyJ,cAC7BnK,SAICqK,EAA+B,CACnCnb,gBAAiBlI,EAAMC,OAAOM,WAAWC,KACzC0C,MAAO,OACP8W,UAAW,QACX7W,UAAW,UAaPmgB,EAA6B,CACjCtc,SAAU,WAEV2F,GAAI,MAGJ5C,GAAI,OACJpG,GAAI,OAGJT,MAAO,MACP6C,OAAQ,QAEJqG,EAA0B,CAC9BlJ,MAAO,OAEP6C,OAAQ,QASJwd,EAAa,SACjBC,GAEAA,GAAmB,IAGrB,OACE,mBAAKngB,GAAIggB,GACP,mBAAKhgB,GA5CqB,CAC5B2D,SAAU,WACVrB,IAAK,OACLzC,MAAO,OAEPH,QAAS,OACT8D,cAAe,SACfE,WAAY,SACZH,eAAgB,SAChBzD,UAAW,WAoCP,mBAAKE,GAAIigB,GACNV,EACC,YAAC,EAAD,CAAerU,eAAe,SAC5BlG,EACJ,mBACEP,IAAKmb,EACLjb,IAAI,4BACJ3E,GAAI+I,EACJwP,OAAQ,kBAAM2H,EAAWV,OAK7B,mBAAKxf,GAAE,2BAAMigB,GAAN,IAAqBxY,GAAI,CAAC,MAAO,WACrCgY,EACC,YAAC,EAAD,CAAevU,eAAe,SAC5BlG,EACJ,mBACEP,IAAKsb,EACLpb,IAAI,6BACJ3E,GAAI+I,EACJwP,OAAQ,kBAAM2H,EAAWR,U,SC7ExBU,GAA0C,SAAC,GAInC,IAHnBzK,EAGkB,EAHlBA,QACA0K,EAEkB,EAFlBA,YACAC,EACkB,EADlBA,mBACkB,EAC0Btf,mBAAiB,GAD3C,mBACXuf,EADW,KACKC,EADL,OAEoBxf,mBAAiB,MAFrC,mBAEXyf,EAFW,KAEEC,EAFF,KAGZC,EAAkBtf,iBAAuB,MAOzCuf,EAAuB1J,uBAAY,WACvC,IAAM2J,EAAIP,EAAmB5d,OACvBoe,EAAIR,EAAmBzgB,MAErB6gB,EAARG,EAAIC,EAAmB,WAA6B,eACnD,CAACR,IAEJze,qBAAU,WACR+e,MACC,CAACjL,EAASiL,IAEb/e,qBAAU,WACH8e,EAAgBjf,SAQnB8e,EALGC,GAA+B,aAAhBA,EAMhB7Y,KAAK6K,MAAMkO,EAAgBjf,QAAQiP,wBAAwBjO,QAJ3DkF,KAAK6K,MAAMkO,EAAgBjf,QAAQiP,wBAAwB9Q,UAO9D,CAAC8gB,EAAiBF,IAGrB,IAAMM,EAAuC,CAE3Cpd,SAAU,WACVjE,QAAS,cACTgE,WAAY,SAEZ0D,GAAI,OACJxD,OAAQ,GAGR/D,MAAuB,cAAhB4gB,EAA8B,MAAQ,MAC7C/d,OAAQ,OAER,4CAA6C,CAC3CA,OAAwB,cAAhB+d,EAA8B,MAAQ,MAC9C5gB,MAAO,OACPgH,OAAQ,SA6CZ,OACE,mBAAK7G,GAAI+gB,EAAyBvc,IAAKmc,GACrC,mBACE1O,GAAG,aACHxN,IAnBoB,SAACkR,GACzB,MAAuB,cAAhB8K,EACHlO,GAAYoD,EAAS,IAAM4K,GAC3BhO,GAAYoD,EAAS4K,EAAgB,KAgBhCS,CAAkBrL,GACvBhR,IAAI,GACJ3E,GAhD8B,CAElCmQ,UAAW,QACXtQ,MAAO,OACP6C,OAAQ,OAGRgE,GAAI,OACJpG,GAAI,OACJgJ,GAAI,OACJ7B,GAAI,OAGJxD,WAAY,WACZ,UAAW,CACTa,QAAS,KAkCPyT,OAZwB,WAC5B8H,KAYIY,QAAS,WACP/d,QAAQC,IAAI,6BACZkd,SC1HGa,GAA4C,SAAC,GAIrC,IAHnBC,EAGkB,EAHlBA,SACAC,EAEkB,EAFlBA,cACAzI,EACkB,EADlBA,mBAEMO,EAAiC,aACrCvV,SAAU,WAEVyD,GAAI,KAEJvH,MAAO,CAAC,OAAQ,OAAQ,OAAQ,QAChC6C,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,QAEjCsG,aAAc,MAEdnE,gBAAiBlI,EAAMC,OAAOM,WAAWE,QACzCoC,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB8G,OAAQ,GAERlE,QAAS,OACTgE,WAAY,SACZ5D,UAAW,SACXyD,eAAgB,SAGhB0Q,gBACsB,kBAAbkN,EAAwB,OAASA,EAAW,IAAM,OAC3DE,iBAAkB,YAClBrN,eAAgB,QAGhB/P,WAAY,0BACZ,UAAW,CACTD,UAAW,aACXO,OAAQ,UACRO,QAAS,KAGR6T,GAGL,OACE,mBAAK3Y,GAAIkZ,EAAsB/Y,QAASihB,GACf,kBAAbD,EAAyBA,OAAWnc,IC5CvCsc,GAA8C,SAAC,GAIrD,IAHLzhB,EAGI,EAHJA,MACA6C,EAEI,EAFJA,OACAlD,EACI,EADJA,MAEA,OACE,kBAAC,IAAD,CACEqL,KAAK,WACLrL,MAAOA,GAAgB7C,EAAMC,OAAOa,UACpCoC,MAAOA,EACP6C,OAAQA,KCgbC6e,GAhZiC,SAAC,GAI5B,IAHnBjQ,EAGkB,EAHlBA,OACAkQ,EAEkB,EAFlBA,WACApG,EACkB,EADlBA,aACkB,EAIQpa,mBAAiBwgB,GAJzB,mBAIX5H,EAJW,KAIJ6H,EAJI,OAKYzgB,oBAAkB,GAL9B,mBAKX+W,EALW,KAKFC,EALE,OAMsBhX,mBAAiB,GANvC,mBAMX0gB,EANW,KAMGC,EANH,KAOZC,EAAsBvgB,iBAAuB,MAE7CwgB,EAAYxgB,kBAAgB,GAC5BygB,EAAYzgB,kBAAgB,GAGlCQ,qBAAU,WACH+f,EAAoBlgB,SAEzBigB,EACE/Z,KAAK6K,MACHmP,EAAoBlgB,QAAQiP,wBAAwB9Q,MAAQ,QAG/D,CAAC+hB,IAKJ,IAAMG,EAAe7K,uBAAY,WAC/BuK,GAAU7H,EAAQ,GAAKtI,EAAOxJ,QAE9BkQ,GAAW,KACV,CAAC1G,EAAQsI,IAKNoI,EAAe9K,uBAAY,WAC/BuK,EAAS7H,EAAQ,EAAI,EAAItI,EAAOxJ,OAAS,EAAI8R,EAAQ,GAErD5B,GAAW,KACV,CAAC1G,EAAQsI,IAMNqI,EAAgB/K,uBAAY,WAChC7D,KACA+H,MACC,CAACA,IAQE8G,EAAoBhL,uBACxB,SAAC5Y,GACC,OAAQA,EAAM6jB,SACZ,KAAK,GACHF,IACA,MACF,KAAK,GACHF,IACA,MACF,KAAK,GACHC,OAIN,CAACC,EAAeF,EAAcC,IAO1BI,EAAkBlL,uBAAY,SAAC5Y,GACnC,IAAM+jB,EAAiB/jB,EAAMgkB,QAEC,IAA1BD,EAAeva,QAAgBua,EAAe,GAGZ,cAA/B/jB,EAAM2D,OAAmBgQ,KAC5B4P,EAAUngB,QAAU2gB,EAAe,GAAGE,QACtCT,EAAUpgB,QAAU2gB,EAAe,GAAGG,SAc/BH,EAAeva,OAAS,IACjC+Z,EAAUngB,SAAW,EACrBogB,EAAUpgB,SAAW,KAEtB,IAOG+gB,EAAevL,uBACnB,SAAC5Y,GAEC,IAA2B,IAAvBujB,EAAUngB,UAAyC,IAAvBogB,EAAUpgB,QAA1C,CAEA,IAAMghB,EAAOb,EAAUngB,QACjBihB,EAAOb,EAAUpgB,QAMvB,GAJAmgB,EAAUngB,SAAW,EACrBogB,EAAUpgB,SAAW,EAGhBpD,EAAMskB,eAAe,GAK1B,ObjD8B,SAClCC,EACAC,GAEA,IAAMC,EAAQF,EAAOpP,EAAIqP,EAAOrP,EAC1BuP,EAAQH,EAAOnP,EAAIoP,EAAOpP,EAGhC,OAAIqP,GAAS,IAAMA,EAAQ,IAAMC,GAAS,IAAMA,EAAQ,GAC/C,QAGLpb,KAAKkH,IAAIiU,GAASnb,KAAKkH,IAAIkU,GACzBD,EAAQ,EACH,OAEA,QAGLC,EAAQ,EACH,KAEA,Oa2BCC,CAAqB,CAACxP,EAAGiP,EAAMhP,EAAGiP,GAAO,CAAClP,EAHpCnV,EAAMskB,eAAe,GAAGL,QAGsB7O,EAF9CpV,EAAMskB,eAAe,GAAGJ,WAGpC,IAAK,OACHR,IACA,MACF,IAAK,KACHD,QAIN,CAACC,EAAcD,IAIjBlgB,qBAAU,WAKR,OAJAU,SAASJ,iBAAiB,UAAW+f,GAAmB,GACxD3f,SAASJ,iBAAiB,aAAcigB,GAAiB,GACzD7f,SAASJ,iBAAiB,WAAYsgB,GAAc,GAE7C,WACLlgB,SAASH,oBAAoB,UAAW8f,GAAmB,GAC3D3f,SAASH,oBAAoB,aAAcggB,GAAiB,GAC5D7f,SAASH,oBAAoB,WAAYqgB,GAAc,MAExD,CAACP,EAAmBE,EAAiBK,IAWxC,IAA8B9M,EAQxBuN,EAAqB,WACrBC,EAAoBvB,EAAoBlgB,UAC1CsW,GAAW,IAiBTmL,EAAsB,SAACC,GAC3B,IAD+D,EACzDC,EAAcD,EAAOE,iBAAiB,OADmB,eAG7CD,GAH6C,IAG/D,2BAA+B,CAC7B,IAD6B,QACpBE,SACP,OAAO,GALoD,8BAS/D,OAAO,GAOHC,EAAmB,WAYvB,OACE,YAAC,GAAD,CACErC,SAAU,YAAC,IAAD,CAASnhB,GAAIyjB,IACvBrC,cAAea,EACftJ,mBAf+B,CACjChV,SAAU,WACVrB,IAAK,KACLgI,MAAO,KACPlD,GAAI,KAEJ,4CAA6C,CAC3CpD,UAAW,iBACXsG,MAAO,UA0CPiR,EAA4B,CAGhCpL,UAAW,QACXrL,QAAS,MACTpC,OAAQ,OACR7C,MAAO,OAEPH,QAASqY,EAAU,OAAS,QAG5B0G,OAAQ,6BAEJiF,EAAqC,CAGzC/f,SAAU,QACV9D,MAAO,OACP6C,OAAQ,OACRkB,OAAQ,GAERiB,gBAAiBlI,EAAMC,OAAOM,WAAWG,OAoCrComB,EAA0B,CAC9B5c,OAAQ,OACR8H,QAAS,QACT9O,MAAO,CAAC,OAAQ,OAAQ,OAAQ,QAChC6C,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,SAE7BihB,EAA+B,CAEnC3f,UAAW,gBACXL,SAAU,QACVyD,GAAI,OAGJ,UAAW,CACTpD,UAAW,2BACXO,OAAQ,UACRO,QAAS,KAGP8e,EAA+B,CACnC,4CAA4C,aAC1CthB,IAAK,MAEFqhB,IAGDE,EAAgC,CACpC,4CAA4C,aAC1C3Z,OAAQ,MAELyZ,IAOP,OAEE,WADA,CACA,OAAK3jB,GAzE+B,CAGpC2D,SAAU,QACVjB,OAAQ,QACR7C,MAAO,QACPyC,IAAK,EACL8H,KAAM,EACNE,MAAO,EACPJ,OAAQ,EACRtG,OAAQ,GAER9D,UAAW,SAEXgkB,mBAAoB,WA2DOtf,IAAKod,GAE9B,mBAAK5hB,GAAI0jB,EAAuBvjB,QAAS8hB,GACvC,mBACExd,KAlMsBkR,EAkMIrE,EAAOsI,GAAOjE,QAjMvCpD,GAAYoD,EAAS+L,EAAc,MAkMpC/c,IAAI,GACJ3E,GAAIub,EACJhD,OApL0B,WAChC2K,KAoLMjC,QAAS,WACP/d,QAAQC,IAAI,0BACZ+f,QApIY,WACpB,GAAInL,EACF,OACE,mBACE/X,GAAI,CACF2D,SAAU,WACVjB,OAAQ,QACR7C,MAAO,QACPH,QAAS,OACTI,UAAW,SACX4D,WAAY,SACZE,OAAQ,KAGV,mBAAK5D,GAAI,CAACN,QAAS,eAAgB0H,GAAI,SACrC,YAAC,GAAD,OAEDoc,KAwHJO,GAED,mBAAK/jB,GA1EgC,CAGvC2D,SAAU,WACVjB,OAAQ,OACR7C,MAAO,OACPH,QAAS,OACT8D,cAAe,MACf1D,UAAW,SACX4D,WAAY,SAEZ,4CAA6C,CAC3ChE,QAAS,OACT8D,cAAe,SACf1D,UAAW,SACX4D,WAAY,YA4DV,YAAC,GAAD,CACEyd,SAAU,YAAC,IAAD,CAAanhB,GAAIyjB,IAC3BrC,cAAeY,EACfrJ,mBAAoBiL,IAGtB,YAAC,GAAD,CACEjO,QAASrE,EAAOsI,GAAOjE,QACvB0K,YAAa6C,EACb5C,mBAAoB,CAClBzgB,MAAOqT,SAAS5B,EAAOsI,GAAO/Z,OAC9B6C,OAAQwQ,SAAS5B,EAAOsI,GAAOlX,WAInC,YAAC,GAAD,CACEye,SAAU,YAAC,IAAD,CAAcnhB,GAAIyjB,IAC5BrC,cAAeW,EACfpJ,mBAAoBkL,IAGrBL,OC3ZIQ,GAA4C,SAAC,GAIrC,IAHnBC,EAGkB,EAHlBA,MACAC,EAEkB,EAFlBA,kBACAC,EACkB,EADlBA,gBACkB,EACYnjB,oBAAkB,GAD9B,mBACX+W,EADW,KACFC,EADE,KAIZoM,EAA0B,CAC9BjM,SAAU,OACV/Q,GAAI,OACJ+I,UAAW,QACXtQ,MAAOokB,EAAMI,mBAAmBxkB,MAChC6C,OAAQuhB,EAAMI,mBAAmB3hB,OAEjChD,QAASqY,EAAU,OAAS,QAE5B,UAAW,CACTxT,OAAQ,YAyCZ,OACE,uBAXyB,WACzB,GAAIwT,EACF,OACE,mBAAK/X,GAAI,CAACN,QAAS,eAAgBiH,GAAI,QACrC,YAAC,GAAD,OAQH2d,GACD,mBACE7f,IAAKwf,EAAMM,SACX5f,IAAI,GACJxE,QAxBmB,WACvBgT,GAAkBjR,OAAO8c,SARzBkF,EAAkBD,EAAMO,WAgCpBjM,OAxCgB,WACpBP,GAAW,IAwCPhY,GAAE,2BAAMokB,GAAeD,OAOlBM,GAAoB,WAC/B,IAAMC,EAA6Bne,qBAAyBb,GACzD9E,QAFgD,EAKzBI,mBAAiB,GALQ,mBAK5CnB,EAL4C,KAKrC2V,EALqC,OAMvBxU,mBAAiB,GANM,mBAM5C0B,EAN4C,KAMpCia,EANoC,KAQ7CgI,EAAetjB,iBAAuB,MARO,EASjBL,mBAAiB,GATA,mBAS5C4jB,EAT4C,KASjCC,EATiC,OAUf7jB,oBAAkB,GAVH,mBAU5C8jB,EAV4C,KAUhCC,EAVgC,KAanDljB,qBAAU,WACH8iB,EAAajjB,UAElB8T,EACE5N,KAAK6K,MA1GgB,EA2GnBkS,EAAajjB,QAAQiP,wBAAwB9Q,QAGjD8c,EACE/U,KAAK6K,MA7GiB,KA8GpBkS,EAAajjB,QAAQiP,wBAAwB9Q,WAGhD,CAAC8kB,IAuBJ,IAAIK,GAAsB,EAjDyB,EdvC9C,SAAuBC,EAAU7P,GAGtC,IAFA,IAAM8P,EAAaD,EAAItd,QACjBwd,EAAgB,GACfD,EAAMpd,OAAS,GAKpBqd,EAAOhT,KAAK+S,EAAME,OAAO,EAAGxd,KAAKC,KAAKqd,EAAMpd,OAASsN,OAGvD,OAAO+P,Ec8EoDE,CAEzDX,EAAe,GAAG/jB,KAAI,SAAC2kB,GACvB,OAAOA,EAAW3kB,KAAI,SAACsjB,GAErB,OADAe,IACO,CACLT,SAAUhS,GAAY0R,EAAMtO,QAAS,IAAMjT,GAC3C8hB,SAAUQ,EACVO,wBAAyB,CACvB1lB,MAAOqT,SAAS+Q,EAAMpkB,OACtB6C,OAAQwQ,SAAS+Q,EAAMvhB,SAEzB2hB,mBAAoB,CAClBxkB,MAAOA,EACP6C,OAAQA,UAhEmC,mBAkD5C8iB,EAlD4C,KAkDhCC,EAlDgC,KAkDlBC,EAlDkB,KAuE7CvB,EAA+B,GAS/BwB,EAA+B,CACnC7lB,UAAW,SACXqY,SAAU,MACVtY,MAAO,MACP8D,SAAU,WAGV8D,GAAI,MAEJ,4CAA6C,CAC3C5H,MAAO,MACPsY,SAAU,MAEVxR,GAAI,EACJyD,KAAM,OACNE,MAAO,OACPlD,GAAI,SA2BFwe,EAAmB,SACvBC,EACA1B,GAEA,IAAK0B,EAAa,MAAO,CAAC,mBAAKrgB,IAAI,OAEnC,IAAMiW,EAAmC,CAEvChU,GAAI,KACJ5H,MAAO,OAGPoE,WAAY,0BACZ,UAAW,CACTD,UAAW,cACXc,QAAS,GACTP,OAAQ,YAIZ,OAAOshB,EAAYllB,KAAI,SAACsjB,GACtB,OACE,mBAAKjkB,GAAIyb,EAAqBjW,IAAKye,EAAMO,UACvC,YAAC,GAAD,CACEP,MAAOA,EACPE,gBAAiBA,EACjBD,kBAAmB4B,SAYvBA,EAAe,SAACtE,GACpBqD,EAAarD,GAEbuE,KAMIA,EAAe,WACnBhB,GAAeD,IAqBXxhB,EAA4B,CAGhCzD,MAAO,OACPsY,SAAU,OACVxB,UAAW,QACX9R,gBAAiBlI,EAAMC,OAAOM,WAAWJ,OAsB3C,OACE,mBAAKkD,GAAIsD,GA1CW,WACpB,GAAIwhB,EACF,OACE,YAAC,GAAD,CACExT,OAAQoT,EACRlD,WAAYoD,EACZxJ,aAAc2K,IAqCjBC,GACD,mBAAKhmB,GAvB8B,CAGrCsC,IAAK,OACLqB,SAAU,WACV9D,MAAO,OACPsY,SAAU,OACVtZ,GAAI,KACJ4I,GAAI,SAgBA,mBAAKzH,GAd8B,CAGvCmY,SAAU,MACVxU,SAAU,WACV8D,GAAI,QAUE,YAAC,EAAD,CAAS5K,KAAK,UAAU4Q,UAAU,UAKpC,mBAAKzF,UAAU,MAAMhI,GA9JoB,CAC7C,4CAA6C,CAC3CN,QAAS,OACT8D,cAAe,SACfE,WAAY,SACZ5D,UAAW,YA4JP,mBACEkI,UAAU,MACVxD,IAAKmgB,EACL3kB,GAAE,2BAzI0B,CACpCoK,KAAM,KAEN1D,GAAI,EACJpG,GAAI,SAqIiCqlB,IAG5BC,EAAiBJ,EAAYrB,IAEhC,mBAAKnc,UAAU,MAAMhI,GAAE,2BAlIS,CACtC2D,SAAU,WACV2F,GAAI,SAgIsDqc,IAEjDC,EAAiBH,EAActB,IAElC,mBAAKnc,UAAU,MAAMhI,GAAE,2BA5IQ,CACrCsK,MAAO,KAEPhK,GAAI,EACJoG,GAAI,SAwIqDif,IAEhDC,EAAiBF,EAAavB,QClUrC8B,GAAuC,SAAC,GAKzB,IAJnBC,EAIkB,EAJlBA,SACA7F,EAGkB,EAHlBA,YACAhhB,EAEkB,EAFlBA,aACA8mB,EACkB,EADlBA,kBAGMC,EAA8B,aAElCvmB,MAAO,QAEJR,GAECgnB,EAA4B,aAChC/jB,IAAK,QACL6V,SAAU,OACVxU,SAAU,WACVjE,QAAS,eACTI,UAAW,UAERT,GAYCkM,EAA8B,CAClClL,SAAU1D,EAAM0B,UAAUD,KAC1BqB,WAAY9C,EAAMuB,MAAMC,QACxBqB,MAAO7C,EAAMC,OAAOC,KAAKC,MACzBic,SAAU,SACVjZ,UAAW,SACX+G,OAAQ,QAEJkC,EAAU,aACdoP,SAAU,OACVzY,QAAS,gBACNymB,GAGL,OACE,mBAAKnmB,GAAIomB,GACP,mBAAKpmB,GAAIqmB,GACP,mBACE5hB,IAAI,6BACJE,IAAI,GACJ3E,GAAI+I,EACJwP,OAAQ8H,IAEV,mBAAKrgB,GAjCyB,CAClCN,QAAS,OACTiE,SAAU,WACV9D,MAAO,OACP6C,OAAQ,OACRJ,IAAK,EACL8H,KAAM,EACNE,MAAO,EACPJ,OAAQ,IA0BF,iBAAGlK,GAAIuL,GAAiB2a,OAS5BI,GAAuC,SAAC,GAIzB,IAHnBC,EAGkB,EAHlBA,SACAC,EAEkB,EAFlBA,iBACAC,EACkB,EADlBA,iBAYMC,EAAiC,CACrC/iB,SAAU,WAEVnE,MAAO7C,EAAMC,OAAOC,KAAKE,UACzBsD,SAAU1D,EAAM0B,UAAUD,KAC1BqB,WAAY9C,EAAMuB,MAAME,KACxB2a,SAAU,SACVC,WAAY,KAERX,EAAwB,yBAC5B1B,UAAW,CAAC,OAAQ,OAAQ,SAEzB6P,GACAC,GAGL,OAIE,WAHA,CAGC,GAAD,CAAsBlQ,QAAQ,OAAOlX,aAAcgZ,GACjD,mBAAKrY,GA/B2B,CAClC2D,SAAU,WACVjE,QAAS,eAKT4J,GAAI,CAAC,MAAO,MAAO,OACnBzJ,MAAO,QAwBH,iBAAGG,GAAE,2BAAM0mB,GAAsBF,IAAoBD,MAavDI,GAAkC,SAAC,GAGpB,IAGfC,EACAC,EANJC,EAEkB,EAFlBA,YACAC,EACkB,EADlBA,eACkB,EACgB/lB,oBAAkB,GADlC,mBACXgmB,EADW,KACAC,EADA,KAMdF,EAAiB,IAAM,EAEzBH,EAAU,CACRlgB,GAAI,EACJpG,GAAI,OACJR,UAAW,OACXsK,KAAM,OAIRwc,EAAU,CACRlgB,GAAI,OACJpG,GAAI,EACJR,UAAW,QACXwK,MAAO,MAGTuc,EAAe,CAAC7iB,UAAW,eAI7B,IAAMqU,EAA2B,CAC/BF,SAAU,OACVtT,gBACEkiB,EAAiB,IAAM,EACnBpqB,EAAMC,OAAOM,WAAWI,QACxB,eAEF4pB,EAAa,CACjBrnB,MAAO,OAEP,qBAAsB8P,EACtBiB,UAAWoW,EAAY,OAAS,oBAChCtnB,QAASsnB,EAAY,OAAS,SAUhC,OACE,kBAAIxhB,IAAKuhB,EAAgB/mB,GAAI,CAACyH,GAAI,SAChC,mBAAKzH,GAAIknB,GACP,YAAC,GAAD,CACEhB,SAAUY,EAAYZ,SACtB7F,YATW,WACjB4G,GAAa,IASP5nB,aAAcunB,EACdT,kBAAmBU,IAErB,YAAC,GAAD,CACEN,SAAUO,EAAYK,OACtBX,iBAAkBI,EAClBH,iBAAkBpO,OAWf+O,GAAgB,WAC3B,IAAMC,EAA+B9gB,qBAAyBb,GAC3D7E,IAGGyC,EAA4B,CAGhCzD,MAAO,OACP8W,UAAW,QACX9R,gBAAiBlI,EAAMC,OAAOM,WAAWJ,OAmC3C,OACE,mBAAKkD,GAAIsD,GAEP,YAAC,GAAD,MAGA,mBAAKtD,GAvC8B,CAGrCsC,IAAK,OACLqB,SAAU,WACV9D,MAAO,OACPH,QAAS,OACT8D,cAAe,SACfiE,GAAI,SAgCA,mBAAKzH,GA9B8B,CAGvCoK,KAAM,KACN+N,SAAU,MACVxU,SAAU,aA0BJ,YAAC,EAAD,CAAS9G,KAAK,MAAM4Q,UAAU,UAEhC,mBACEzN,GAAI,CACFwa,KAAM,YAGR,kBAAIxa,GAAI,CAAC+G,cAAe,OAAQlI,GAAI,EAAGG,GAAI,EAAGoI,GAAI,EAAGT,GAAI,IAzB7C,SAAC0gB,GACnB,OAAKA,EAIEA,EAAa1mB,KAAI,SAACulB,EAAUpR,GACjC,OAAO,YAAC,GAAD,CAASgS,YAAaZ,EAAUa,eAAgBjS,OAJhD,wBAyBAwS,CAAYD,Q,wCC7PnBE,GAAO3f,KAAKkL,IAAI5Q,OAAO+S,WAAY/S,OAAOS,aAC1C6kB,GAAqBtlB,OAAO+S,W9BlCD,I8BmC3BwS,GAAUD,GAA4B,IAAPD,GAAkC,GAApBrlB,OAAO+S,WAEpDyS,GAAwC,SAAC,GAA+B,IAA9B7I,EAA6B,EAA7BA,SAAU1e,EAAmB,EAAnBA,QAASoI,EAAU,EAAVA,KAAU,EAC7CvH,oBAAkB,GAD2B,mBACpE+W,EADoE,KAC3DC,EAD2D,OAEzChX,mBAAiB,MAFwB,mBAEpE2mB,EAFoE,KAEzDC,EAFyD,KAGrEC,EAAUxmB,iBAAwBkH,GAClCuf,EAASzmB,iBAAyB,MAClC0mB,EAAY1mB,iBAAO,CACvBiI,GAAoB,GAAhB1B,KAAKmL,SAAgB,EACzBrM,GAAoB,GAAhBkB,KAAKmL,SAAgB,EACzBzS,GAAoB,GAAhBsH,KAAKmL,SAAgB,EACzBtL,GAAoB,GAAhBG,KAAKmL,SAAgB,IAG3BlR,qBAAU,WACR+lB,EAAaE,EAAOpmB,QAAQ2b,gBAC3B,IAEH,IAAM/Z,EAAyB,aAC7BY,SAAU,SACV8E,aAAc,MACdpF,OAAQ,EACRD,SAAU,WACVjE,QAAS,eACT,UAAW,CACT6E,OAAQ,YAEPwjB,EAAUrmB,SAGT6Z,EAA4B,CAChC1W,gBAAiBlI,EAAMC,OAAOkB,qBAC9B6F,SAAU,WACVuG,OAAQ,EACR5H,IAAK,EACL8H,KAAM,EACNE,MAAO,GAGHvB,EAA0B,CAC9BoH,UAAW,QACXtQ,MAAOgoB,EAAQnmB,QACfgB,OAAQmlB,EAAQnmB,QAChB+B,mBAAoB,OA+BtB,OACE,mBAAKzD,GAAIsD,EAAcnD,QAASA,GAC7B4X,EAdD,mBAAK/X,GAV6B,CAClC2D,SAAU,WACV9D,MAAO,OACP6C,OAAQ,OAER5C,UAAW,SACXJ,QAAS,OACTgE,WAAY,WAIV,mBAAK1D,GAAI,CAACN,QAAS,SAAUmH,OAAQ,SACnC,YAAC,GAAD,CACEnE,OAAQilB,EACR9nB,MAAO8nB,EACPnoB,MAAO7C,EAAMC,OAAOC,KAAKC,eASGkI,EAClC,mBACEP,IAAKoa,EACLla,IAAI,GACJH,IAAKsjB,EACL9nB,GAAI+I,EACJwP,OAAQ,kBAAMP,GAAW,MAE3B,mBAAKhY,GAAIub,MAOTyM,GAA0C,SAAC,GAO1C,IANLnJ,EAMI,EANJA,SACAoJ,EAKI,EALJA,MACAC,EAII,EAJJA,QACA7oB,EAGI,EAHJA,aACAiR,EAEI,EAFJA,UACAC,EACI,EADJA,YACI,EACoCvP,mBAAiB,MADrD,mBACGmnB,EADH,KACiBC,EADjB,KAEEC,EAAkBhnB,iBAAuB,MAE/CQ,qBAAU,WACR,IAAMe,EAAK,IAAIC,KAAe,SAACC,GAC7BA,EAAQC,SAAQ,SAACC,GAAW,IACnBN,EAAUM,EAAMf,OAAO0O,wBAAvBjO,OACPQ,QAAQC,IAAIT,GACZ0lB,EAAgB1lB,SAKpB,OADAE,EAAGQ,QAAQilB,EAAgB3mB,SACpB,kBAAMkB,EAAGS,gBACf,IAEH,IAUM0F,EAA0B,CAC9BoH,UAAW,QACXtQ,MAAO4nB,GACP/kB,OAAQ+kB,GACR1W,cAAe,SACf,oBAAqBpB,EACrBqB,kBAAmB,OAGfsX,EAA0C,CAC9CtkB,UAAW,CAAC,mBAAD,OACoB,IAAVyjB,GADV,oCAEoB,GAAVA,GAFV,iCAGiB,KAAVA,GAHP,gBAGuC,IAAVA,GAH7B,WAKX3nB,UAAW,SACXL,WAAY9C,EAAMuB,MAAME,KACxBiC,SAAU1D,EAAM0B,UAAUE,UAC1BiB,MAAO7C,EAAMC,OAAOC,KAAKE,UACzB4G,SAAU,WACVC,OAAQ,GAGJ2kB,EAAiC,CACrC5kB,SAAU,WACVrB,IAAK,EACL8H,KAAM,EACNE,MAAO,EACPJ,OAAQ,EACRxK,QAAS,OACT8D,cAAe,SACf7E,GAAI,CAAC,MAAO,OACZE,GAAI,CAAC,MAAO,OACZD,GAAI,MACJ2E,eAAgB,gBAChBb,OAAQ,cACRiU,UAAW,CAAC,OAAQ,OAAkB,IAAV8Q,KAuBxBe,EAAiC,CACrC3oB,MAAO,CAAC,OAAQ,OAAkB,IAAV4nB,IACxB/kB,OAAQylB,GAGV,OACE,mBAAKnoB,GAAE,2BAXyB,IAWFX,IAC5B,mBAAKW,GA5EyB,CAChCgJ,aAAc,MACd9E,SAAU,SACVxE,QAAS,eACT,UAAW,CACTsE,UAAW,eAEbC,WAAY,QAsER,mBACEQ,IAAKoa,EACLla,IAAI,GACJ3E,GAAI+I,EACJvD,IAAKqZ,EACL3N,YAAaZ,EACba,aAAcZ,KAGlB,mBAAKvQ,GAAIsoB,GACP,mBACEtoB,GAAIwoB,EACJ7jB,IAAI,GACJF,IACE+iB,GAAqBiB,KAAsBC,OAG/C,mBAAK1oB,GAAIuoB,EAAmB/jB,IAAK6jB,GAC/B,iBAAGroB,GA9CqB,CAC9BH,MAAO,OACPmZ,WAAY,MACZpZ,MAAO,IA2CmBqoB,GACpB,iBAAGjoB,GAzCuB,CAChCF,UAAW,QACXD,MAAO,OACPhB,GAAI,MACJe,MAAO,EACP0J,GAAI,CAAC,MAAO,MAAO,QACnB7B,GAAI,CAAC,QAAS,MAAO,SAmCOygB,OASnBS,GAAkC,SAAC,GAEzC,IADMC,EACP,EADJC,UACI,EAC8B7nB,mBAAqB4nB,GADnD,mBACGC,EADH,KACcC,EADd,KAEEC,EAAW1nB,iBAAiB,IAKlCQ,qBAAU,WAER,OADA6P,IACOC,IACN,IAEH,IAAMA,EAAgB,kBAAMoX,EAASrnB,QAAQqB,QAAQb,OAAOmQ,gBAEtDX,EAAgB,WACpBC,IACA,IAAMM,EAAK/P,OAAOgQ,aAAY,WAC5B4W,GAAa,SAACE,GAEZ,OADAA,EAAOC,QAAQD,EAAOE,OACf,YAAIF,QAfA,KAkBfD,EAASrnB,QAAQyQ,KAAKF,IAwDlBkX,EAAiC,CACrCxlB,SAAU,CAAC,SAAU,SAAU,YAC/B2G,MAAO,EACPzK,MAAO,CAAC,OAAQ,OAAe,IAAP0nB,IACxBznB,UAAW,CAAC,SAAU,SAAU,SAKlC,OACE,mBAAKE,GAtB2B,CAChCN,QAAS,OACTgH,GAAI,KACJ8T,KAAM,EACNhX,cAAe,CAAC,SAAU,SAAU,OACpC1D,UAAW,CAAC,QAAS,QAAS,UAkB5B,YAAC,GAAD,CACET,aAhBgC,CACpCiK,GAAI,CAAC,EAAG,EAAG,SAgBPuV,SAAUgK,EAAU,GAAGhK,SACvBoJ,MAAOY,EAAU,GAAGZ,MACpBC,QAASW,EAAU,GAAGX,QACtB5X,UArEY,WAChBqB,KAqEIpB,YAlEc,WAClBrO,OAAO6J,YAAW,WAChB+c,GAAa,SAACE,GAEZ,OADAA,EAAOC,QAAQD,EAAOE,OACf,YAAIF,MAEbtX,MA/Ba,IACoB,MA4FjC,mBAAK1R,GAAImpB,GArDU,WAErB,IADA,IAAMC,EAAc,GADO,WAElBtU,GACPsU,EAAYjX,KACV,YAAC,GAAD,CACE0M,SAAUgK,EAAU/T,GAAG+J,SACvB1e,QAAS,WACP2oB,GAAa,SAACE,GACZ,IAAMhU,EAAK,YAAOgU,GADK,EAEA,CAAChU,EAAM,GAAIA,EAAMF,IACxC,OADCE,EAAMF,GAFgB,KAEZE,EAAM,GAFM,KAGhB,YAAIA,MAdrBrD,IACAD,KAiBMnJ,KAAsB,GAAhBX,KAAKmL,SAAgB,EAAI,WAZ5B+B,EAAI,EAAGA,EAAI+T,EAAU/gB,OAAQgN,IAAM,EAAnCA,GAiBT,OAAOsU,EAkCwBC,M,oBC1V7BC,GAAsB,WAAO,IAC1BrjB,EAAcM,qBAAyBb,GAAvCO,WAEP,IAAKA,EACH,OAAO,YAAC,IAAM0E,SAAP,MAGT,IAAM4e,EAA4B,CAChC/pB,MAAO7C,EAAMC,OAAOC,KAAKC,MACzBuD,SAAU1D,EAAM0B,UAAUF,QAAQX,QAClCiC,WAAY9C,EAAMuB,MAAMC,QACxB0B,MAAO,CAAC,OAAQ,OAAQ,QACxBmZ,WAAY,SAGRpL,EAAyB,CAC7B/I,gBAAiBlI,EAAMC,OAAOa,UAC9BoC,MAAO,CAAC,OAAQ,OAAQ,QACxBmJ,aAAc,EACdtG,OAAQ,OACRiE,GAAI,OAGA6iB,EAAyB,CAC7BhqB,MAAO7C,EAAMC,OAAOC,KAAKC,MACzB2C,WAAY9C,EAAMuB,MAAME,KACxBiC,SAAU1D,EAAM0B,UAAUE,UAC1BsB,MAAO,CAAC,OAAQ,OAAQ,QACxBmZ,WAAY,SASd,OACE,mBAAKhZ,GAP2B,CAChCN,QAAS,eACT4J,GAAI,CAAC,OAAQ,OAAQ,GACrB7B,GAAI,CAAC,MAAO,MAAO,KAKjB,mBAAKzH,GAAIupB,GAAetjB,EAAW,GAAGwjB,cACtC,mBAAKzpB,GAAI4N,IACT,mBAAK5N,GAAIwpB,GAAYvjB,EAAW,GAAGyjB,oBAO5BC,GAAoB,WAAO,IAC/B9jB,EAAWU,qBAAyBb,GAApCG,QAD8B,EAET7E,mBAAiB,GAFR,mBAE9B0B,EAF8B,KAEtBia,EAFsB,KAG/BiN,EAAUvoB,iBAAuB,MACjCwoB,EAAWxoB,iBAAuB,MAexC,GAXAQ,qBAAU,WACR,IAAMe,EAAK,IAAIC,KAAe,SAACC,GAC7B,IAAMgnB,EAAaF,EAAQloB,QAAQiP,wBAAwBjO,OACrDqnB,EAAcF,EAASnoB,QAAQiP,wBAAwBjO,OAC7Dia,EAAUmN,EAAwB,GAAXC,MAIzB,OAFAnnB,EAAGQ,QAAQwmB,EAAQloB,SACnBkB,EAAGQ,QAAQymB,EAASnoB,SACb,kBAAMkB,EAAGS,gBACf,KAEEwC,EACH,OAAO,YAAC,IAAM8E,SAAP,MAGT,IAAMqf,EAAuB,CAC3BnlB,gBAAiBlI,EAAMC,OAAOM,WAAWC,KACzCwZ,UAAW,QACXjU,OAAmB,IAAXA,OAAesC,EAAYtC,EACnC9D,GAAI,QAGA4qB,EAAyB,CAC7B3qB,GAAIlC,EAAM+B,YAAYG,GACtBF,GAAI,MACJe,QAAS,OACT8D,cAAe,CAAC,SAAU,SAAU,OACpCM,SAAU,UAQNmmB,EAA4B,CAEhCjmB,UAAU,eAAD,OAAiBkmB,GAAjB,OAcX,OACE,mBAAKlqB,GAAIgqB,GACP,mBAAKhqB,GAAIwpB,EAAWhlB,IAAKolB,GACvB,YAAC,GAAD,MACA,YAAC,GAAD,CAAgBf,UAdbhjB,EAAQlF,KAAI,SAACwpB,GAMlB,MAL2B,CACzBlC,MAAOkC,EAAOlC,MACdC,QAASiC,EAAOvhB,KAAO,MAAQuhB,EAAOxmB,SACtCkb,SAAUtM,GAAY4X,EAAOxU,QAAS,IAAK,YAY7C,mBAAK3V,GAAIiqB,EAAczlB,IAAKqlB,GAC1B,mBAAKplB,IAAK2lB,KAAiBpqB,GA5BK,CACpCH,MAAO,OACP6C,OAAQ,aCWG2nB,GAnFO,WAAO,IAAD,EACFrpB,qBADE,mBACnB8Z,EADmB,KACbwP,EADa,OAEYtpB,oBAAkB,GAF9B,mBAEnBupB,EAFmB,KAENC,EAFM,KAMpBC,EAAsBhf,EAAmB8e,EAD1B,KAGfG,EAAO,uCAAG,8BAAArU,EAAA,+EAIMsU,MAftB,6EAewC,CAClCC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACPC,OAAQ,sBARA,cAINC,EAJM,gBAWCA,EAAIC,OAXL,OAWZC,EAXY,uDAaZhoB,QAAQC,IAAR,MAbY,QAgBdmnB,EAAQY,GAhBM,yDAAH,qDA8Bb,OAXArpB,qBAAU,WACR6oB,MACC,IAGH7oB,qBAAU,WACJiZ,GACF0P,GAAe,KAEhB,CAAC1P,IAEA2P,EAEA,kBAAC,EAAD,CAAepf,UAAWkf,EAAajf,aAnCtB,OAuCrBpI,QAAQC,IAAIgoB,6BAGV,kBAACzlB,EAAY0lB,SAAb,CAAsBpQ,MAAOF,GAC3B,kBAAC,IAAD,CAAQuQ,SAAUF,6BAChB,kBAAC5gB,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+gB,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,QAGJ,kBAAC,EAAD,UC3FYC,QACW,cAA7BrpB,OAAOspB,SAASC,UAEe,UAA7BvpB,OAAOspB,SAASC,UAEhBvpB,OAAOspB,SAASC,SAASC,MACvB,2D,qBCXNC,EAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,sBAAuB,wBAAyB,sBAM/DC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF1pB,SAAS2pB,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxpB,QAAQwpB,MAAMA,EAAMC,c","file":"static/js/main.9424e0c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.244fe6ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/clubBackground.fdd1f9d6.png\";","module.exports = __webpack_public_path__ + \"static/media/speech bubble.576d30b9.png\";","module.exports = __webpack_public_path__ + \"static/media/speechBubbleMobile.f47118d6.png\";","module.exports = __webpack_public_path__ + \"static/media/BottomPageDecor.12fcb1cf.svg\";","//breakpoints: 640px, 832px,\r\nexport const FIRST_BREAKPOINT = 640;\r\nexport const SECOND_BREAKPOINT = 832;\r\nexport const theme = {\r\n  colors: {\r\n    text: {\r\n      light: '#FFFFFF',\r\n      darkSlate: '#2F4F4F',\r\n      darkGray: '#343434',\r\n    },\r\n    navbar: '#5B7F76',\r\n    background: {\r\n      light: '#FFFFFF',\r\n      dark: '#495E57',\r\n      darkest: '#00000088',\r\n      black: '#000000',\r\n      overlay: '#93CCBE29',\r\n      darkOverlay: '#5B7F76',\r\n    },\r\n    primary: '#68DEB5',\r\n    secondary: '#93CCBE',\r\n    footer: '#39504A',\r\n    yellow: '#FFF08E',\r\n    imageOverlayForText: '#FFFFFFD9',\r\n    imageGrayOverlay: '#8B8B8BA6',\r\n    imageDarkGrayOverlay: '#4D4D4DA6',\r\n    searchBox: {\r\n      darkGray: '#707070',\r\n      lightGray: '#E1E1E1',\r\n    },\r\n    modes: {\r\n      dark: {},\r\n    },\r\n  },\r\n  fonts: {\r\n    heading: 'Rowdies',\r\n    body: 'Open Sans',\r\n  },\r\n  fontSizes: {\r\n    heading: {\r\n      primary: [30, 40],\r\n      event: [14, 16, 24, 30, 40],\r\n    },\r\n    body: [13, 14, 16, 20, 24, 28, 32],\r\n    event: [10, 12, 14, 16, 20, 24, 32],\r\n    bodySmall: [11, 14, 16],\r\n    bodyBig: [20, 24, 28],\r\n    footer: [11, 12, 14, 16],\r\n    footerBig: [14, 16, 20, 24],\r\n  },\r\n  bodyPadding: {\r\n    pt: '7%',\r\n    pb: '10%',\r\n    px: '7%',\r\n  },\r\n  links: {\r\n    nav: {\r\n      px: 2,\r\n      py: 1,\r\n      textTransform: 'uppercase',\r\n      letterSpacing: '0.2em',\r\n    },\r\n  },\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\nimport {FaBars, FaTimes} from 'react-icons/fa';\r\nimport logo from '../assets/logo.svg';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\n//TODO: mmmake diferent colorus\r\ninterface LinkProps {\r\n  route: string;\r\n  text: string;\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\nexport const NavItem: React.FC<LinkProps> = ({\r\n  route,\r\n  text,\r\n  extraStyling,\r\n  children,\r\n}) => {\r\n  const style: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    fontFamily: theme.fonts.body,\r\n    display: 'block',\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      background: theme.colors.footer,\r\n      color: theme.colors.text.light,\r\n    },\r\n    order: 2,\r\n    px: 20,\r\n    py: [2, 2, 3],\r\n    width: ['100%', '100%', 'auto'],\r\n    textAlign: 'center',\r\n  };\r\n\r\n  return (\r\n    <Link to={'/' + route} sx={{...style, ...extraStyling}}>\r\n      {text}\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\ninterface ToggleProps {\r\n  toggle: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst Toggle: React.FC<ToggleProps> = ({toggle, onClick}) => {\r\n  const toggleStyle: SxStyleProp = {\r\n    order: 1,\r\n    display: ['block', 'block', 'none'],\r\n    fontSize: '1.3em',\r\n    color: theme.colors.text.light,\r\n    mr: '5%',\r\n  };\r\n\r\n  if (toggle) {\r\n    return <FaTimes sx={toggleStyle} onClick={onClick} />;\r\n  }\r\n  return <FaBars sx={toggleStyle} onClick={onClick} />;\r\n};\r\n\r\n// Moving routes out of Navigation so Footer can access them\r\nexport interface NavRoutes {\r\n  events: string;\r\n  clubs: string;\r\n  calendar: string;\r\n  map: string;\r\n  gallery: string;\r\n  faq: string;\r\n  about: string;\r\n}\r\n\r\nexport const routes = {\r\n  //key is the route name, value is displayed text\r\n  events: 'Events',\r\n  clubs: 'Clubs',\r\n  calendar: 'Calendar',\r\n  map: 'Map',\r\n  gallery: 'Gallery',\r\n  faq: 'FAQ',\r\n  about: 'About Us',\r\n};\r\n\r\nexport const Navigation: React.FC = () => {\r\n  const [toggle, setToggle] = useState<boolean>(false);\r\n  const [navItemsHeight, setNavItemsHeight] = useState<number>(null);\r\n  \r\n  const navItemsRef = useRef<HTMLDivElement>(null);\r\n  const navRef = useRef<HTMLDivElement>(null);\r\n  const curLocation = useRef<string>(useLocation().pathname);\r\n  const [transparent, setTransparent] = useState<boolean>(curLocation.current === '/');\r\n\r\n\r\n  useEffect(() => {\r\n    const scrollEvent = () => setToggle(false);\r\n    const clickEvent = (e) => {\r\n      if (toggle && e.target !== navRef.current) {\r\n        setToggle(false);\r\n      }\r\n    };\r\n    window.addEventListener('scroll', scrollEvent);\r\n    window.addEventListener('click', clickEvent);\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollEvent);\r\n      window.removeEventListener('click', clickEvent);\r\n    };\r\n  }, [toggle]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const toggleColourSettings = () => {\r\n      if (curLocation.current !== '/') return;\r\n      const top = document.body.scrollTop || document.documentElement.scrollTop;\r\n      const height = window.innerHeight;\r\n      setTransparent(top < height);\r\n    };\r\n    window.addEventListener('scroll', toggleColourSettings);\r\n    return () => window.removeEventListener('scroll', toggleColourSettings);\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        const {height} = entry.contentRect;\r\n        console.log(height);\r\n        setNavItemsHeight(height);\r\n      });\r\n    });\r\n    ro.observe(navItemsRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  const getNavItems = () => {\r\n    const outlineWidth = 1.5;\r\n    const navItemsStyle: SxStyleProp = {\r\n      backgroundColor: [\r\n        theme.colors.navbar,\r\n        'transparent',\r\n      ],\r\n      opacity: [0.8, 1],\r\n      backdropFilter: ['blur(4px)', undefined],\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n        textDecoration: 'none',\r\n        color: theme.colors.text.light,\r\n        backgroundColor: transparent ? 'transparent' : theme.colors.footer,\r\n        outlineOffset: -outlineWidth,\r\n        outlineWidth: transparent ? outlineWidth : 0,\r\n        outlineColor: theme.colors.footer,\r\n        outlineStyle: 'solid',\r\n      },\r\n    };\r\n\r\n\r\n    return Object.keys(routes).map((route) => {\r\n      return (\r\n        <NavItem\r\n          route={route}\r\n          text={routes[route].toUpperCase()}\r\n          key={routes[route]}\r\n          extraStyling={navItemsStyle}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row' as 'row',\r\n    background: transparent ? 'transparent' : theme.colors.navbar,\r\n    transitionDuration: '.5s',\r\n    alignItems: 'center',\r\n    position: 'fixed',\r\n    zIndex: 10,\r\n    boxShadow: '0 1px 5px ' + theme.colors.footer,\r\n    flexWrap: 'wrap',\r\n  };\r\n\r\n  const navItemsWrapper: SxStyleProp = {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    order: 2,\r\n    transform: [\r\n      toggle ? 'translateY(0)' : 'translateY(-100%)',\r\n      toggle ? 'translateY(0)' : 'translateY(-100%)',\r\n      'translateY(0)',\r\n    ],\r\n    transition: '.5s',\r\n    overflow: 'hidden',\r\n    height: [toggle ? navItemsHeight : 0, toggle ? navItemsHeight : 0, 'auto'],\r\n    zIndex: 0,\r\n    width: ['100%', '100%', 'auto'],\r\n  };\r\n\r\n  const logoStyle: SxStyleProp = {\r\n    order: 0,\r\n    justifySelf: 'flex-start',\r\n    marginRight: 'auto',\r\n    marginLeft: ['5%', '10%'],\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n    height: '3.5rem',\r\n    zIndex: 1,\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle} ref={navRef}>\r\n      <Link to=\"/\" sx={logoStyle}>\r\n        <img src={logo} alt=\"\" sx={logoStyle} />\r\n      </Link>\r\n      <Toggle toggle={toggle} onClick={() => setToggle((toggle) => !toggle)} />\r\n      <div sx={navItemsWrapper}>\r\n        <div\r\n          ref={navItemsRef}\r\n          children={getNavItems()}\r\n          sx={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            width: ['100%', '100%', 'auto'],\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import {createContext} from 'react';\r\nimport {\r\n  Event,\r\n  Member,\r\n  Recent,\r\n  UpcomingMiniEvents,\r\n  Club,\r\n  FAQ,\r\n  Resources,\r\n  Photo,\r\n  CountDown,\r\n  AboutStuco,\r\n  ClubHighlight,\r\n  LabelledPhotos,\r\n} from './interfaces';\r\n\r\nexport interface IInfoContext {\r\n  events: Event[];\r\n  countdown: CountDown[];\r\n  members: Member[];\r\n  recents: Recent[];\r\n  upcomingMiniEvents: UpcomingMiniEvents[];\r\n  clubs: Club[];\r\n  faq: FAQ[];\r\n  resources: Resources[];\r\n  gallery: Photo[];\r\n  aboutStuco: AboutStuco[];\r\n  clubHighlights: ClubHighlight[];\r\n  labelledPhotos: LabelledPhotos[];\r\n}\r\n\r\nexport const InfoContext = createContext<IInfoContext>({\r\n  events: [],\r\n  countdown: [],\r\n  members: [],\r\n  recents: [],\r\n  upcomingMiniEvents: [],\r\n  clubs: [],\r\n  faq: [],\r\n  resources: [],\r\n  gallery: [],\r\n  aboutStuco: [],\r\n  clubHighlights: [],\r\n  labelledPhotos: [],\r\n});\r\n","/** @jsx jsx */\r\nimport React, {useContext} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {IInfoContext, InfoContext} from '../utils/contexts';\r\nimport {Resources as ResourcesInterface} from '../utils/interfaces';\r\n\r\nexport interface ResourcesProps {\r\n  textStyling: SxStyleProp;\r\n}\r\n\r\n/**\r\n * For all the resources present in the Info object.\r\n * @returns a div containing all the resources, formatted.\r\n */\r\nexport const Resources: React.FC<ResourcesProps> = ({textStyling}) => {\r\n  const allResources: ResourcesInterface[] = useContext<IInfoContext>(\r\n    InfoContext,\r\n  ).resources;\r\n  console.log(allResources);\r\n\r\n  // Styles ---------------------------------------------------------\r\n  // TOOD: this is basically the same as FooterRoutes\r\n  // -- do smth about this? or is this good repeat/abstraction?\r\n  const mainWrapperStyle: SxStyleProp = {\r\n    px: '5%',\r\n  };\r\n  const headerWrapperStyle: SxStyleProp = {\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    mb: '1.3em',\r\n  };\r\n  const headerTextStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.footerBig,\r\n    color: theme.colors.text.light,\r\n  };\r\n  const resourceStyle: SxStyleProp = {\r\n    ...textStyling,\r\n\r\n    width: '50%',\r\n    ml: 0,\r\n    mr: 'auto',\r\n    my: 0,\r\n  };\r\n  const resourceContainerStyle: SxStyleProp = {\r\n    width: '100%',\r\n    margin: 'auto',\r\n\r\n    display: 'flex',\r\n    flexDirection: ['column', 'row'],\r\n  };\r\n  const listStyle: SxStyleProp = {\r\n    listStyleType: 'none',\r\n    pl: 0,\r\n    pr: '10%',\r\n    ml: 0,\r\n    my: 0,\r\n  };\r\n\r\n  // Functions -- ---------------------------------------------------\r\n  /**\r\n   * Retrieves all the resources and splits them, then formats them\r\n   * and returns the formatted ReactElement.\r\n   * @returns the formatted resource list.\r\n   */\r\n  const getAllResources = () => {\r\n    // Split the routes in half to format links correctly\r\n    const leftResources = allResources.slice(\r\n      0,\r\n      Math.ceil(allResources.length / 2),\r\n    );\r\n    const rightResources = allResources.slice(\r\n      Math.ceil(allResources.length / 2),\r\n    );\r\n\r\n    return (\r\n      <div className=\"row\" sx={resourceContainerStyle}>\r\n        <div sx={resourceStyle}>\r\n          {/* first column of links goes here */}\r\n          <ul sx={listStyle}>{getResourceColumn(leftResources)}</ul>\r\n        </div>\r\n        <div sx={resourceStyle}>\r\n          {/* second column of links goes here */}\r\n          <ul sx={listStyle}>{getResourceColumn(rightResources)}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Renders/returns a group of resources as a column.\r\n   * @param resources - A column of resources to be rendered.\r\n   * @returns the column of formatted resource elements.\r\n   */\r\n  const getResourceColumn = (resources: ResourcesInterface[]) => {\r\n    const linkStyle: SxStyleProp = {\r\n      px: 0,\r\n      py: '2px',\r\n      mx: 0,\r\n      color: theme.colors.text.light,\r\n\r\n      display: 'inline',\r\n      '&:hover': {\r\n        color: theme.colors.primary,\r\n        textDecoration: 'none',\r\n      },\r\n    };\r\n\r\n    return resources.map((resource) => {\r\n      return (\r\n        <li key={resource.resourceName}>\r\n          <a href={resource.resourceLink} sx={linkStyle}>\r\n            {resource.resourceName}\r\n          </a>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={mainWrapperStyle}>\r\n      {/* the header*/}\r\n      <div sx={headerWrapperStyle}>\r\n        <h2 sx={headerTextStyle}>Resources</h2>\r\n      </div>\r\n      {getAllResources()}\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {\r\n  FaGithub,\r\n  FaEnvelopeSquare,\r\n  FaFacebookSquare,\r\n  FaTwitterSquare,\r\n  FaInstagramSquare,\r\n} from 'react-icons/fa';\r\n\r\nimport {routes, NavItem, NavRoutes} from './Navigation';\r\nimport {Resources} from './Resources';\r\n\r\nimport {theme} from '../utils/theme';\r\n\r\n// Interfaces --\r\ninterface socialMediaContainer {\r\n  email: linkImagePair;\r\n  instagram?: linkImagePair;\r\n  facebook?: linkImagePair;\r\n  twitter?: linkImagePair;\r\n}\r\n\r\ninterface linkImagePair {\r\n  link: string;\r\n  image: string | ReactElement;\r\n}\r\n\r\n// The style for social media icons\r\nconst socialMediaStyle: SxStyleProp = {\r\n  transition: 'transform .2s ease',\r\n  '&:hover': {\r\n    transform: 'scale(1.1)',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\n// All the social media needed for the footer\r\n// If we need more, just add according to format!\r\nconst socialMediaList: socialMediaContainer = {\r\n  email: {\r\n    link: 'mailto:rhhsstuco.contact@gmail.com',\r\n    image: <FaEnvelopeSquare size={32} sx={socialMediaStyle} />,\r\n  },\r\n  instagram: {\r\n    link: 'https://www.instagram.com/rhhs_stuco',\r\n    image: <FaInstagramSquare size={32} sx={socialMediaStyle} />,\r\n  },\r\n  facebook: {\r\n    link: 'https://www.facebook.com/rhhsstuco/',\r\n    image: <FaFacebookSquare size={32} sx={socialMediaStyle} />,\r\n  },\r\n  twitter: {\r\n    link: 'https://twitter.com/rhhs_stuco',\r\n    image: <FaTwitterSquare size={32} sx={socialMediaStyle} />,\r\n  },\r\n};\r\n\r\n//=====================================================================\r\n// SocialMediaItem is for the individual social media buttons\r\ninterface SocialMediaProps {\r\n  name: string;\r\n  link: string;\r\n  pictureLink: string | ReactElement;\r\n}\r\n\r\nconst SocialMediaItem: React.FC<SocialMediaProps> = ({\r\n  name,\r\n  link,\r\n  pictureLink,\r\n}) => {\r\n  const linkStyle: SxStyleProp = {\r\n    paddingX: '0.5em', // rudimentary spacing between the pictures lol\r\n  };\r\n\r\n  const renderIcon = () => {\r\n    const imageStyle: SxStyleProp = {\r\n      borderRadius: '50%',\r\n      '&:hover': {},\r\n    };\r\n\r\n    const iconStyle = {\r\n      display: 'inline',\r\n      color: theme.colors.background.light,\r\n\r\n      height: '100%',\r\n      width: 'auto',\r\n\r\n      ...imageStyle,\r\n    };\r\n\r\n    if (typeof pictureLink == 'string') {\r\n      return <img sx={imageStyle} src={pictureLink} alt={name} />;\r\n    }\r\n\r\n    return <div sx={iconStyle}>{pictureLink}</div>;\r\n  };\r\n\r\n  return (\r\n    <a href={link} sx={linkStyle}>\r\n      {renderIcon()}\r\n    </a>\r\n  );\r\n};\r\n\r\n// Draw all the social media buttons provided\r\nconst getSocialMedia = (\r\n  socialMediaList: socialMediaContainer,\r\n): ReactElement[] => {\r\n  return Object.keys(socialMediaList).map((sitename) => {\r\n    return (\r\n      <SocialMediaItem\r\n        name={sitename}\r\n        link={socialMediaList[sitename].link}\r\n        pictureLink={socialMediaList[sitename].image}\r\n        key={sitename}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\n// ====================================================================\r\n// CopyrightItem is for the copyright text and source text\r\n\r\ninterface CopyrightItemProps {\r\n  textStyle: SxStyleProp;\r\n}\r\n\r\nconst CopyrightItem: React.FC<CopyrightItemProps> = ({textStyle}) => {\r\n  const linkStyle: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    mb: '0.25em',\r\n\r\n    '&:hover': {\r\n      color: theme.colors.primary,\r\n      textDecoration: 'none',\r\n    },\r\n  };\r\n\r\n  const copyrightTextStyle: SxStyleProp = {\r\n    ...textStyle,\r\n    my: 'auto',\r\n    // Add space above copyright if rearranged\r\n    mt: ['1em', 0],\r\n  };\r\n  const imageStyle: SxStyleProp = {mr: '0.5em', mb: '0.25em'};\r\n\r\n  return (\r\n    <p sx={copyrightTextStyle}>\r\n      &copy; RHHS Student Council {new Date().getFullYear()}\r\n      &nbsp; |&nbsp;\r\n      <a\r\n        href=\"https://github.com/shari09/StuCo-Website-Redesigned\"\r\n        sx={linkStyle}\r\n      >\r\n        <FaGithub sx={imageStyle} size={20} />\r\n        Source\r\n      </a>\r\n    </p>\r\n  );\r\n};\r\n\r\n//=====================================================================\r\n\r\ninterface FooterRoutesProps {\r\n  routes: NavRoutes;\r\n  textStyle: SxStyleProp;\r\n}\r\n\r\n/**\r\n * Gets all footer routes, splits them in half, and renders the\r\n * routes in a formatted style.\r\n * @return all routes in a container element.\r\n */\r\nconst FooterRoutes: React.FC<FooterRoutesProps> = ({\r\n  routes,\r\n  textStyle,\r\n}): ReactElement => {\r\n  // Split the routes in half to format links correctly\r\n  const half: number = Math.ceil(Object.keys(routes).length / 2);\r\n  const leftRoutes: string[][] = Object.entries(routes).slice(\r\n    0,\r\n    half,\r\n  ) as string[][];\r\n  const rightRoutes: string[][] = Object.entries(routes).slice(\r\n    half,\r\n  ) as string[][];\r\n\r\n  // Styles ---------------------------------------------------------\r\n  const mainWrapperStyle: SxStyleProp = {\r\n    px: '5%',\r\n  };\r\n  const headerWrapperStyle: SxStyleProp = {\r\n    width: '100%',\r\n    textAlign: 'right',\r\n    mb: '1.3em',\r\n  };\r\n  const headerTextStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.footerBig,\r\n    color: theme.colors.text.light,\r\n  };\r\n\r\n  const routesStyle: SxStyleProp = {\r\n    ...textStyle,\r\n\r\n    // Push to the right or left depending on mobile or not\r\n    ml: 'auto',\r\n    mr: 0,\r\n    width: '50%',\r\n  };\r\n  const routeContainerStyle: SxStyleProp = {\r\n    width: '100%',\r\n    margin: 'auto',\r\n\r\n    display: 'flex',\r\n    flexDirection: ['column', 'row'],\r\n  };\r\n  const listStyle: SxStyleProp = {\r\n    textAlign: 'right',\r\n\r\n    listStyleType: 'none',\r\n    pl: '10%',\r\n    pr: 0,\r\n    mr: 0,\r\n    my: 0,\r\n  };\r\n  // Functions -- ---------------------------------------------------\r\n  /**\r\n   * Convert a list of routes to a list of actual NavItem elements.\r\n   * @param routes - All the routes in this list of links.\r\n   * @returns a list of NavItem elements to the desired route.\r\n   */\r\n  const getRouteItems = (routes: string[][]): ReactElement[] => {\r\n    const navStyle: SxStyleProp = {\r\n      px: 0,\r\n      py: '2px',\r\n      mx: 0,\r\n\r\n      display: 'inline',\r\n      '&:hover': {\r\n        color: theme.colors.primary,\r\n        textDecoration: 'none',\r\n      },\r\n    };\r\n\r\n    return routes.map((route) => {\r\n      return (\r\n        <li key={route[1]}>\r\n          <NavItem route={route[0]} text={route[1]} extraStyling={navStyle} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={mainWrapperStyle}>\r\n      {/* the header*/}\r\n      <div sx={headerWrapperStyle}>\r\n        <h2 sx={headerTextStyle}>Navigation</h2>\r\n      </div>\r\n\r\n      {/* the actual routes */}\r\n      <div className=\"row\" sx={routeContainerStyle}>\r\n        <div sx={routesStyle}>\r\n          {/* first column of links goes here */}\r\n          <ul sx={listStyle}>{getRouteItems(leftRoutes)}</ul>\r\n        </div>\r\n        <div sx={routesStyle}>\r\n          {/* second column of links goes here */}\r\n          <ul sx={listStyle}>{getRouteItems(rightRoutes)}</ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//=====================================================================\r\n\r\n//=====================================================================\r\n// The actual footer code and stuff\r\nexport const Footer: React.FC = () => {\r\n  // styling stuff --\r\n  const footerStyle: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    backgroundColor: theme.colors.footer,\r\n    pt: '3.5em',\r\n    position: 'relative',\r\n\r\n    zIndex: 1,\r\n\r\n    width: '100%',\r\n    top: 'auto',\r\n    mt: 'auto',\r\n    mb: 0,\r\n    bottom: 0,\r\n  };\r\n  const textStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.footer,\r\n    color: theme.colors.text.light,\r\n\r\n    whiteSpace: ['nowrap', 'break-spaces'],\r\n  };\r\n  const topFooterStyle: SxStyleProp = {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  };\r\n  const bottomFooterStyle: SxStyleProp = {\r\n    // Rearrange the footer if the screen is small enough.\r\n    display: 'flex',\r\n    flexDirection: ['column', 'row'],\r\n    alignItems: ['center', null],\r\n    textAlign: ['center', null],\r\n\r\n    width: '100%',\r\n    mx: 'auto',\r\n    mt: '2em',\r\n  };\r\n  const socialMediaContainerStyle: SxStyleProp = {\r\n    // push down the social media\r\n    mt: 0,\r\n    left: [0, '5%'],\r\n    width: ['100%', '50%'],\r\n    // somehow this aligns the icons with the copyright text??\r\n    bottom: '0.5em',\r\n\r\n    alignItems: ['center', 'row-start'],\r\n    textAlign: ['center', 'left'],\r\n  };\r\n  const copyrightContainerStyle: SxStyleProp = {\r\n    right: [0, '5%'],\r\n    width: ['100%', '50%'],\r\n    textAlign: ['center', 'right'],\r\n    mb: ['0.5em', 0],\r\n  };\r\n\r\n  // Return the footer code --\r\n  return (\r\n    // yes shari i know you hate bootstrap but im just using these\r\n    // names to name the divs. Kapeesh? Kapeesh.\r\n    <div sx={footerStyle}>\r\n      {/* top half of the footer */}\r\n      <div sx={topFooterStyle}>\r\n        <div sx={{width: '35%', position: 'relative', ml: '15%'}}>\r\n          <FooterRoutes routes={routes} textStyle={textStyle} />\r\n        </div>\r\n        <div sx={{width: '35%', position: 'relative', mr: '15%'}}>\r\n          <Resources textStyling={textStyle} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* bottom half of the footer */}\r\n      <div className=\"row\" sx={bottomFooterStyle}>\r\n        <div className=\"col\" sx={socialMediaContainerStyle}>\r\n          {getSocialMedia(socialMediaList)}\r\n        </div>\r\n\r\n        {/* {//TODO: this doesn't scale that well down :/// */}\r\n        <div className=\"col\" sx={copyrightContainerStyle}>\r\n          <CopyrightItem textStyle={textStyle} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, {useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nexport const ScrollToTop = withRouter(() => {\r\n  useEffect(() => {\r\n    window.scroll({top: 0, behavior: 'smooth'});\r\n  });\r\n  return <React.Fragment />;\r\n});\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\r\nimport {theme} from '../utils/theme';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport interface ThreeDotsLoaderProps {\r\n  width?: number;\r\n  height?: number;\r\n  color?: string;\r\n}\r\n\r\n// yes shari a second file dedicated to three dot loaders\r\nexport const ThreeDotsLoader: React.FC<ThreeDotsLoaderProps> = ({\r\n  width,\r\n  height,\r\n  color,\r\n}) => {\r\n  return (\r\n    <Loader\r\n      type=\"ThreeDots\"\r\n      color={color ? color : theme.colors.secondary}\r\n      width={width}\r\n      height={height}\r\n    />\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {ThreeDotsLoader} from './ThreeDotsLoader';\r\n\r\nimport {theme} from '../utils/theme';\r\n\r\n// Interfaces --\r\nexport interface LoadingSquareProps {\r\n  loaderWidth?: number;\r\n  loaderHeight?: number;\r\n  loaderColor?: string;\r\n  isTransparent?: boolean;\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\nexport interface LoadingScreenProps {\r\n  /** If this component is currently being mounted or being unmounted. */\r\n  isMounted: boolean;\r\n  /** How fast this component should unmount, in ms. */\r\n  unmountSpeed: number;\r\n}\r\n\r\n/**\r\n * Renders a loading square, designed to be a square placeholder for\r\n * images that have yet to be loaded.\r\n * @returns a square with a loader.\r\n */\r\nexport const LoadingSquare: React.FC<LoadingSquareProps> = ({\r\n  loaderHeight,\r\n  loaderWidth,\r\n  loaderColor,\r\n  isTransparent,\r\n  extraStyling,\r\n}) => {\r\n  const loadingSquareStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: isTransparent ? 'transparent' : theme.colors.background.dark,\r\n\r\n    display: 'flex',\r\n    alignItems: ' center',\r\n    textAlign: 'center',\r\n\r\n    ...extraStyling,\r\n  };\r\n\r\n  return (\r\n    <div sx={loadingSquareStyle}>\r\n      <div sx={{display: 'inline', margin: 'auto'}}>\r\n        <ThreeDotsLoader\r\n          width={loaderWidth}\r\n          height={loaderHeight}\r\n          color={loaderColor ? loaderColor : theme.colors.text.light}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Renders a loading screen, intended for indicating that the site\r\n * content is still being fetched.\r\n */\r\nexport const LoadingScreen: React.FC<LoadingScreenProps> = ({\r\n  isMounted,\r\n  unmountSpeed,\r\n}) => {\r\n  const wrapperStyle: SxStyleProp = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n\r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  };\r\n  const titleTextStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.heading.primary,\r\n    color: theme.colors.text.darkSlate,\r\n    margin: 'auto',\r\n  };\r\n  const topDivStyle: SxStyleProp = {\r\n    display: 'inline-block',\r\n    mb: 0,\r\n    mt: 'auto',\r\n  };\r\n  const bottomDivStyle: SxStyleProp = {\r\n    display: 'inline-block',\r\n    mt: 0,\r\n    mb: 'auto',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      sx={{\r\n        ...wrapperStyle,\r\n        transition: isMounted\r\n          ? 'none'\r\n          : 'opacity ' + (unmountSpeed / 1000).toString() + 's ease-in',\r\n        opacity: isMounted ? 1 : 0,\r\n      }}\r\n    >\r\n      <div sx={topDivStyle}>\r\n        <h1 sx={titleTextStyle}>Loading Site Content...</h1>\r\n      </div>\r\n\r\n      <div sx={bottomDivStyle}>\r\n        <ThreeDotsLoader />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {useState, useEffect, useRef} from 'react';\r\n\r\n/**\r\n * Creates a timed delay for an unmounting component so that unmounting\r\n * animations and transitions are able to occur.\r\n * @param shouldBeMounted - Whether the component you are checking should\r\n * or should not be mounted.\r\n * @param delayTime - The total amount of time to delay the unmount,\r\n * in ms.\r\n * @returns a boolean, true if the component should finally be unmounted\r\n * (ie. the delay has finished), and false otherwise.\r\n */\r\nexport const useUnmountingDelay = (\r\n  shouldBeMounted: boolean,\r\n  delayTime: number,\r\n) => {\r\n  const [shouldRender, setShouldRender] = useState<boolean>(shouldBeMounted);\r\n\r\n  useEffect(() => {\r\n    let timerID: number;\r\n\r\n    if (shouldBeMounted) {\r\n      setShouldRender(true);\r\n    } else {\r\n      // Set a timer for a component once it should no longer be mounted.\r\n      timerID = window.setTimeout(() => setShouldRender(false), delayTime);\r\n    }\r\n\r\n    // Clear the old timer from memory\r\n    return () => {\r\n      window.clearTimeout(timerID);\r\n    };\r\n  }, [shouldBeMounted, delayTime, shouldRender]);\r\n\r\n  return shouldRender;\r\n};\r\n\r\n\r\n\r\nexport const usePrevious = (value: any) => {\r\n  const ref = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n};","/** @jsx jsx */\r\nimport React, {useState, useEffect} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\n\r\ninterface Props {\r\n  date: Date;\r\n}\r\n\r\ninterface FormattedTime {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n}\r\n\r\ninterface TimeUnitI {\r\n  number: number;\r\n  text: string;\r\n}\r\n\r\nexport const CountDownTimer: React.FC<Props> = ({date}) => {\r\n  const [timer, setTimer] = useState<number>();\r\n  const [formattedTime, setFormattedTime] = useState<FormattedTime>();\r\n\r\n  useEffect(() => {\r\n    if (!timer) {\r\n      setTimer(date.getTime() - new Date().getTime());\r\n      return;\r\n    }\r\n    setFormattedTime(getFormattedTime(timer));\r\n    window.setTimeout(() => {\r\n      setTimer(timer - 1000);\r\n    }, 1000);\r\n  }, [timer, date]);\r\n\r\n  const getFormattedTime = (timeInMilli: number) => {\r\n    const days = Math.floor(timeInMilli / (24 * 60 * 60 * 1000));\r\n    timeInMilli = timeInMilli % (24 * 60 * 60 * 1000);\r\n    const hours = Math.floor(timeInMilli / (60 * 60 * 1000));\r\n    timeInMilli = timeInMilli % (60 * 60 * 1000);\r\n    const minutes = Math.floor(timeInMilli / (60 * 1000));\r\n    timeInMilli = timeInMilli % (60 * 1000);\r\n    const seconds = Math.floor(timeInMilli / 1000);\r\n\r\n    return {\r\n      days: days,\r\n      hours: hours,\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    };\r\n  };\r\n\r\n  if (!formattedTime) {\r\n    return <div />;\r\n  }\r\n\r\n  const style: SxStyleProp = {\r\n    top: '40%',\r\n    left: '7%',\r\n    position: ['static', 'absolute'],\r\n    borderColor: theme.colors.background.light,\r\n    borderWidth: [0, 2],\r\n    borderStyle: 'solid',\r\n    color: theme.colors.text.light,\r\n    textAlign: 'center',\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: 20,\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      color: theme.colors.text.light,\r\n    },\r\n    px: 20,\r\n    py: [1, 2],\r\n\r\n    //mobile\r\n    display: ['flex', 'inline'],\r\n    flexDirection: 'column',\r\n    flexWrap: 'wrap',\r\n    order: 0,\r\n    mt: ['20%', 0],\r\n  };\r\n\r\n  const TimeUnit: React.FC<TimeUnitI> = ({number, text}) => {\r\n    const seconds = 'sec';\r\n    const numDigit = number < 100 ? 2 : 3;\r\n    const textSize = text === seconds ? 15 : 20;\r\n    const numSize = text === seconds ? 50 : 80;\r\n    return (\r\n      <span sx={{mx: 20}}>\r\n        <span sx={{fontSize: numSize}}>\r\n          {number.toString().padStart(numDigit, '0')}\r\n        </span>\r\n        <span sx={{fontSize: textSize}}>{text}</span>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div sx={style}>\r\n      <TimeUnit number={formattedTime.days} text=\"days\" />\r\n      <TimeUnit number={formattedTime.hours} text=\"hrs\" />\r\n      <TimeUnit number={formattedTime.minutes} text=\"mins\" />\r\n      <TimeUnit number={formattedTime.seconds} text=\"sec\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountDownTimer;\r\n","/** @jsx jsx */\r\nimport React from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\n\r\nexport interface HeadingProps {\r\n  text: string;\r\n  alignment: 'left' | 'center';\r\n  underline?: boolean;\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\n/**\r\n * A styled heading\r\n */\r\nexport const Heading: React.FC<HeadingProps> = ({\r\n  text,\r\n  alignment,\r\n  underline = true,\r\n  extraStyling,\r\n}) => {\r\n  const wrapperStyle: SxStyleProp = {\r\n    textAlign: alignment,\r\n  };\r\n\r\n  const textStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.heading.primary,\r\n    color: theme.colors.primary,\r\n    fontWeight: 'normal',\r\n  };\r\n\r\n  const lineStyle: SxStyleProp = {\r\n    background: theme.colors.primary,\r\n    borderRadius: 10,\r\n    height: 7,\r\n    width: ['100%', '25%'],\r\n    margin: alignment === 'left' ? undefined : 'auto',\r\n  };\r\n\r\n  return (\r\n    <div sx={{...wrapperStyle, ...extraStyling}}>\r\n      <div sx={textStyle}>{text}</div>\r\n      {underline ? <div sx={lineStyle} /> : undefined}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","/** @jsx jsx */\r\nimport React, {useState, useRef, useEffect} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\ninterface Props {\r\n  title: string | React.ReactElement;\r\n  titleStyle?: SxStyleProp;\r\n  childrenStyle?: SxStyleProp;\r\n  collapsed?: boolean;\r\n}\r\n\r\n/**\r\n * ok sift i'm writing comments now so stop judging my uncommented code >:((\r\n * @description\r\n * You can put any children inside Collapsable components and it will render them\r\n * in the collapsible list/tree format\r\n *\r\n * @example\r\n * <Collapsable title='hello'>\r\n *   You can have text\r\n *   <OrComponenents sx={withStyle} onClick={andFunctions}/>\r\n * </Collapsable>\r\n *\r\n * //title can be a component as well\r\n * const myTitle = <span><p>My twitter page</p><TwitterIcon/></span>;\r\n *\r\n * <Collapsable title={myTitle}>\r\n *   //children\r\n * </Collapsable>\r\n */\r\nexport const Collapsable: React.FC<Props> = ({\r\n  children,\r\n  title,\r\n  titleStyle,\r\n  collapsed = true,\r\n  childrenStyle,\r\n}) => {\r\n  const [childrenCollapsed, setChildrenCollapsed] = useState<boolean>(\r\n    collapsed,\r\n  );\r\n  const [childrenHeight, setChildrenHeight] = useState<number>(0);\r\n  const childrenRef = useRef<HTMLDivElement>(null);\r\n  const prevHeight = useRef<number>(0);\r\n\r\n  useEffect(() => {\r\n\r\n    //if the children has children and they resize, normally it won't re-render\r\n    //which is why the oberserver is added\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        prevHeight.current = childrenHeight;\r\n        const {height} = entry.contentRect;\r\n        setChildrenHeight(height);\r\n      });\r\n    });\r\n    ro.observe(childrenRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'visible',\r\n    verticalAlign: 'middle',\r\n    color: theme.colors.text.light,\r\n    fill: theme.colors.text.light,\r\n    height: 'auto',\r\n    padding: '0.3em',\r\n    width: 'auto',\r\n  };\r\n\r\n  /**\r\n   * gets height difference when resized\r\n   */\r\n  const getHeightDiff = () => {\r\n    const diff = Math.abs(childrenHeight - prevHeight.current);\r\n    if (diff === 0) return childrenHeight;\r\n    return diff;\r\n  };\r\n\r\n  const transitionTime = `${getHeightDiff() * 0.01}s`;\r\n\r\n  const childrenWrapperStyle: SxStyleProp = {\r\n    ml: '20%',\r\n    pr: 14,\r\n    borderLeftWidth: 2,\r\n    borderLeftColor: theme.colors.text.light,\r\n    borderLeftStyle: 'dashed',\r\n    overflowY: 'hidden',\r\n    height: childrenCollapsed ? 0 : childrenHeight,\r\n    transitionDuration: transitionTime,\r\n  };\r\n\r\n  const defaultTitleStyle: SxStyleProp = {\r\n    width: 'auto',\r\n\r\n    '&:hover': {\r\n      cursor: React.Children.count(children) > 0 ? 'pointer' : 'default',\r\n      color: [\r\n        theme.colors.text.light,\r\n        React.Children.count(children) > 0\r\n          ? theme.colors.footer\r\n          : theme.colors.text.light,\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <span\r\n        sx={{...defaultTitleStyle, ...titleStyle}}\r\n        onClick={() => {\r\n          if (React.Children.count(children) === 0) return;\r\n          setChildrenCollapsed((childrenCollapsed) => !childrenCollapsed);\r\n        }}\r\n      >\r\n        {title}\r\n      </span>\r\n      <div\r\n        sx={{...childrenWrapperStyle, ...childrenStyle}}\r\n      >\r\n        <div ref={childrenRef} children={children} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collapsable;\r\n","import {SxStyleProp} from 'theme-ui';\r\n\r\nexport const slideUp: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateY(100%)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateY(0)',\r\n  },\r\n};\r\n\r\nexport const slideBackDown: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateY(0)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateY(100%)',\r\n  },\r\n};\r\n\r\nexport const slideDown: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateY(-100%)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateY(0)',\r\n  },\r\n};\r\n\r\nexport const slideLeft: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateX(-100%)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateX(0)',\r\n  },\r\n};\r\n\r\nexport const slideRight: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    transform: 'translateX(100%)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    transform: 'translateX(0)',\r\n  },\r\n};\r\n\r\nexport const slideOutRight: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 1,\r\n    transform: 'translateX(0)',\r\n  },\r\n  '100%': {\r\n    opacity: 0,\r\n    transform: 'translateX(100%)',\r\n  },\r\n};\r\n\r\nexport const slideOutLeft: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 1,\r\n    transform: 'translateX(0)',\r\n  },\r\n  '100%': {\r\n    opacity: 0,\r\n    transform: 'translateX(-100%)',\r\n  },\r\n};\r\n\r\nexport const fadeIn: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nexport const fadeOut: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 1,\r\n  },\r\n  '100%': {\r\n    opacity: 0,\r\n  },\r\n};\r\n\r\nexport const fadeInPartially: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n  },\r\n  '100%': {\r\n    opacity: 0.5,\r\n  },\r\n};\r\n\r\nexport const popIn: SxStyleProp = {\r\n  '0%': {\r\n    opacity: 0,\r\n    width: 0,\r\n    height: 0,\r\n    transform: 'translate3d(50%, 50%, 0)',\r\n  },\r\n  '100%': {\r\n    opacity: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    transform: 'translate3d(0, 0, 0)',\r\n  },\r\n};\r\n\r\nexport const spin: SxStyleProp = {\r\n  '0%': {\r\n    transform: 'rotate(0deg)',\r\n  },\r\n  '100%': {\r\n    transform: 'rotate(359deg)',\r\n  },\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useState, useEffect, useRef, useMemo} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\nimport {slideUp, slideBackDown, fadeIn} from '../utils/animation';\r\n\r\nexport interface Photo {\r\n  url: string;\r\n  description: string;\r\n}\r\n\r\ninterface Props {\r\n  photos: Photo[];\r\n  photoDimension: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n}\r\n\r\ninterface CenterPhotoProps {\r\n  url: string;\r\n  description: string;\r\n  photoDimension: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n  lockImage: () => void;\r\n  unlockImage: () => void;\r\n}\r\n\r\ninterface GrayImageProps {\r\n  url: string;\r\n  photoDimension: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n  onClick: () => void;\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\n/**\r\n * The grayed out photos behind the main photo.\r\n */\r\nconst GrayImage: React.FC<GrayImageProps> = ({\r\n  url,\r\n  photoDimension,\r\n  onClick,\r\n  extraStyling,\r\n}) => {\r\n  //scaled in relation to the main photo in the middle\r\n  const scale = 0.8;\r\n  const style: SxStyleProp = {\r\n    width: photoDimension.width * scale,\r\n    height: photoDimension.height * scale,\r\n    objectFit: 'cover',\r\n  };\r\n\r\n  const overlay: SxStyleProp = {\r\n    backgroundColor: theme.colors.imageGrayOverlay,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    bottom: 0,\r\n  };\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    display: 'inline-block',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n    top: '50%',\r\n    transform: 'translate(0, -50%)',\r\n    ...extraStyling,\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle} onClick={onClick}>\r\n      <img sx={style} src={url} />\r\n      <div sx={overlay} />\r\n    </div>\r\n  );\r\n};\r\n\r\n//=====================================================\r\n\r\n/**\r\n * The main photo in the middle\r\n */\r\nconst CenterImage: React.FC<CenterPhotoProps> = ({\r\n  url,\r\n  description,\r\n  photoDimension,\r\n  lockImage,\r\n  unlockImage,\r\n}) => {\r\n  const [wrapperWidth, setWrapperWidth] = useState<number>(null);\r\n  const wrapperRef = useRef<HTMLImageElement>(null);\r\n\r\n  useEffect(() => {\r\n    setWrapperWidth(wrapperRef.current.getBoundingClientRect().width);\r\n  }, []);\r\n\r\n  const popupScale = 1.3;\r\n  const wrapperStyle: SxStyleProp = {\r\n    boxShadow: '1vw 1vh .7em gray',\r\n    display: 'inline-block',\r\n    position: 'relative',\r\n    mx: 'auto',\r\n    zIndex: 2,\r\n    overflow: 'hidden',\r\n    '&:hover div': {\r\n      animation: 'slideUp .5s ease-out',\r\n      transform: 'translateY(0)',\r\n    },\r\n    '&:hover img': {\r\n      width: [wrapperWidth, photoDimension.width * popupScale],\r\n      height: [photoDimension.height * popupScale],\r\n      transitionDuration: '.5s',\r\n    },\r\n    backgroundColor: 'transparent',\r\n    transitionDuration: '.5s',\r\n    '@keyframes fadeIn': fadeIn,\r\n    '@keyframes slideUp': slideUp,\r\n    '@keyframes slideBackDown': slideBackDown,\r\n  };\r\n\r\n  const descriptionStyle: SxStyleProp = {\r\n    backgroundColor: theme.colors.imageOverlayForText,\r\n    padding: 20,\r\n    py: '10%',\r\n    fontSize: theme.fontSizes.bodySmall,\r\n    fontFamily: theme.fonts.body,\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%',\r\n    textAlign: 'start',\r\n    transform: 'translateY(100%)',\r\n    animation: 'slideBackDown .3s ease-out',\r\n  };\r\n\r\n  const imageStyle: SxStyleProp = {\r\n    objectFit: 'cover',\r\n    width: photoDimension.width,\r\n    height: photoDimension.height,\r\n    animationFillMode: 'forwards',\r\n    animationName: 'fadeIn',\r\n    animationDuration: '1s',\r\n    animationTimingFunction: 'linear',\r\n    transitionDuration: '.3s',\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* sketchy code just to get the width */}\r\n      <div ref={wrapperRef} sx={{width: '100%', position: 'absolute'}}/>\r\n      <div\r\n        sx={wrapperStyle}\r\n        onMouseOver={lockImage}\r\n        onMouseLeave={unlockImage}\r\n        onFocus={lockImage}\r\n        \r\n      >\r\n        <img src={url} sx={imageStyle} key={url} />\r\n        <div sx={descriptionStyle}>{description}</div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n//=====================================================\r\n\r\n/**\r\n * In case someone wants to reuse this\r\n *\r\n * @description\r\n * A basic photo slide deck that includes one main photo,\r\n *  and two grayed out photos at the sides.\r\n * You can hover over the main photo, it locks the image in place from rotation,\r\n * and the description of the image pops up\r\n *\r\n * @example\r\n *\r\n * const photos = [{\r\n *   url: 'https://img.example.com',\r\n *   description: 'sample image',\r\n * }];\r\n *\r\n * const photoDimension = {\r\n *   width: 100,\r\n *   height: 100,\r\n * };\r\n * <PhotoSlideDeck photos={photos} photoDimension={photoDimension}/>\r\n *\r\n */\r\nexport const PhotoSlideDeck: React.FC<Props> = ({photos, photoDimension}) => {\r\n  const [curPhoto, setCurPhoto] = useState<number>(0);\r\n  const timerId = useRef<number[]>([]);\r\n\r\n  const interval = 3000;\r\n  const intervalAfterLock = interval / 3;\r\n\r\n  useEffect(() => {\r\n    startRotation();\r\n    return clearTimerIds;\r\n  }, []);\r\n\r\n  const getPrevIdx = useMemo(() => (curIdx: number) => {\r\n    let newIdx = curIdx - 1;\r\n    if (newIdx < 0) newIdx = photos.length - 1;\r\n    return newIdx;\r\n  }, [curPhoto]);\r\n\r\n  const getNextIdx = useMemo(() => (curIdx: number) => {\r\n    let newIdx = (curIdx + 1) % photos.length;\r\n    console.log(curIdx);\r\n    return newIdx;\r\n  }, [curPhoto]);\r\n\r\n  const lockImage = () => {\r\n    clearTimerIds();\r\n  };\r\n\r\n  /**\r\n   * Start the rotation of photos and set the rotating interval\r\n   */\r\n  const startRotation = () => {\r\n    const id = window.setInterval(() => {\r\n      setCurPhoto(getNextIdx);\r\n    }, interval);\r\n    timerId.current.push(id);\r\n  };\r\n\r\n  const unlockImage = () => {\r\n    window.setTimeout(() => {\r\n      setCurPhoto(getNextIdx);\r\n      startRotation();\r\n    }, intervalAfterLock);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearTimerIds()\r\n    startRotation();\r\n  };\r\n\r\n  const clearTimerIds = () => {\r\n    timerId.current.forEach(window.clearInterval);\r\n  };\r\n\r\n  const style: SxStyleProp = {\r\n    textAlign: 'center',\r\n    mt: '5%',\r\n    display: 'flex',\r\n    position: 'relative',\r\n  };\r\n\r\n  return (\r\n    <div sx={style}>\r\n      <GrayImage\r\n        url={photos[getPrevIdx(curPhoto)].url}\r\n        photoDimension={photoDimension}\r\n        onClick={() => {\r\n          setCurPhoto(getPrevIdx);\r\n          resetTimer();\r\n        }}\r\n        extraStyling={{left: 0}}\r\n      />\r\n      <CenterImage\r\n        url={photos[curPhoto].url}\r\n        description={photos[curPhoto].description}\r\n        photoDimension={photoDimension}\r\n        lockImage={lockImage}\r\n        unlockImage={unlockImage}\r\n      />\r\n      <GrayImage\r\n        url={photos[getNextIdx(curPhoto)].url}\r\n        photoDimension={photoDimension}\r\n        onClick={() => {\r\n          setCurPhoto(getNextIdx);\r\n          resetTimer();\r\n        }}\r\n        extraStyling={{right: 0}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoSlideDeck;\r\n","export interface rgbItem {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a?: number;\r\n}\r\n\r\n// yes shari i need these jsdocs for the function tooltips\r\n/**\r\n * Cpmverts a hex string into an rgb object. Only works with\r\n * RRGGBB hexadecimals.\r\n * @param hex - the 6 byte hex string to convert to rgb.\r\n * @return an obhect with the r, g, b properties, according to\r\n * the hex string.\r\n */\r\nexport const hexToRgb = (hex: string): rgbItem => {\r\n  // Eliminate any non-hex things\r\n  hex = hex.replace(/[^0-9A-F]/gi, '');\r\n\r\n  // Convert to a 6 byte num that we'll fiddle with\r\n  let hexNum: number = parseInt(hex, 16);\r\n\r\n  // Using bitwise operations to parse RGB value by bitwise shifting\r\n  // to the correct colour byte group, and bitwise anding it with 255 to\r\n  // get the correct rgb value.\r\n  // using: https://stackoverflow.com/a/11508164\r\n  return {\r\n    r: (hexNum >> 16) & 255,\r\n    g: (hexNum >> 8) & 255,\r\n    b: hexNum & 255,\r\n  };\r\n};\r\n\r\n/**\r\n * Converts an RRGGBB hex string with a specified alpha into an rgba object.\r\n * @param hex - the 6 byte hex string without an alpha part\r\n * @param alpha - the desired alpha value, between 0.0 - 1.0\r\n * @returns an object with the r, g, b, and a properties/\r\n */\r\nexport const hexToRgba = (hex: string, alpha: number): rgbItem => {\r\n  return {\r\n    ...hexToRgb(hex),\r\n    a: alpha,\r\n  };\r\n};\r\n\r\n/**\r\n * Gets a formatted url of an image with proper resizing based\r\n * on the width and height input. The API used scales the original\r\n * aspect ratio of the image until one of the dimensions are met.\r\n * @param imageId - the image's id in the gallery folder.\r\n * @param width - an integer with the object's desired width.\r\n * @param height - an integer with the object's desired height.\r\n * @returns a formatted URL to the image with proper dimensions.\r\n */\r\nexport const getImageUrl = (\r\n  imageId: string,\r\n  width: number,\r\n  height: number,\r\n): string => {\r\n  return `https://drive.google.com/thumbnail?id=${imageId}&sz=w${Math.round(\r\n    width,\r\n  )}-h${Math.round(height)}`;\r\n};\r\n\r\n/**\r\n * Takes an array and splits it into n arrays.\r\n * @template T - the type in the array.\r\n * @param arr - the array to be split.\r\n * @param n - the amount of sub arrays desired.\r\n * @returns an array containing the subarrays.\r\n */\r\nexport function splitArray<T>(arr: T[], n: number): T[][] {\r\n  const array: T[] = arr.slice(); // so we don't destroy the original\r\n  const result: T[][] = [];\r\n  while (array.length > 0) {\r\n    /*W\r\n    e can keep splicing away sections of array.length / n and keep\r\n    subtracting n by 1 to get n equal sized subarrays. Why? Cause MATH\r\n    */\r\n    result.push(array.splice(0, Math.ceil(array.length / n--)));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport const randNum = (min: number, max: number) =>\r\n  Math.round((Math.random() * (max - min) + min) * 100) / 100;\r\n\r\nexport const randInt = (min: number, max: number) =>\r\n  Math.floor(randNum(min, max));\r\n\r\n\r\nexport const hexToRgbArr = (hex) => {\r\n  if (hex[0] === '#') hex = hex.slice(1);\r\n  const rgb = [\r\n    parseInt(hex.slice(0, 2), 16),\r\n    parseInt(hex.slice(2, 4), 16),\r\n    parseInt(hex.slice(4, 6), 16),\r\n  ];\r\n  return rgb;\r\n};\r\n\r\n/**\r\n * Stops users from scrolling the main body page, and saves the\r\n * original scroll location. Great for overlays.\r\n * @param topPos - The current window's scroll from the top.\r\n */\r\nexport const disallowScrolling = (topPos: number) => {\r\n  document.body.style.position = 'sticky';\r\n  document.body.style.overflowY = 'hidden';\r\n  document.body.style.top = `-${topPos}px`;\r\n};\r\n\r\n/**\r\n * Allows users to scroll the main body page again, from their last\r\n * saved window scroll position.\r\n */\r\nexport const allowScrolling = () => {\r\n  const topY = document.body.style.top;\r\n\r\n  document.body.style.position = '';\r\n  document.body.style.top = 'auto';\r\n  document.body.style.overflowY = 'initial';\r\n\r\n  // return to saved position, or top if it doesn't exist\r\n  window.scrollTo(0, -parseInt(topY || '0'));\r\n};\r\n\r\n/**\r\n * Detects and returns a user's swipe direction, or if it was pressed.\r\n * @param oldPos - The starting position of the user's tap.\r\n * @param newPos - The position where the user last held their finger.\r\n * @returns a string with either the user's swipe direction or if they\r\n * simply pressed instead.\r\n */\r\nexport const detectSwipeDirection = (\r\n  oldPos: {x: number; y: number},\r\n  newPos: {x: number; y: number},\r\n): 'left' | 'right' | 'up' | 'down' | 'press' => {\r\n  const xDiff = oldPos.x - newPos.x;\r\n  const yDiff = oldPos.y - newPos.y;\r\n\r\n  // checking for pressing\r\n  if (xDiff > -15 && xDiff < 15 && yDiff > -15 && yDiff < 15) {\r\n    return 'press';\r\n  }\r\n  // find which difference is most significant\r\n  if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n    if (xDiff > 0) {\r\n      return 'left';\r\n    } else {\r\n      return 'right';\r\n    }\r\n  } else {\r\n    if (yDiff > 0) {\r\n      return 'up';\r\n    } else {\r\n      return 'down';\r\n    }\r\n  }\r\n};\r\n","/**@jsx jsx */\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from './theme';\r\n\r\nexport class RandomDot {\r\n  private size: number;\r\n  private left: number;\r\n  private top: number;\r\n  \r\n  constructor(x: number, y: number, width: number, height: number) {\r\n    this.size = Math.random()*9;\r\n    this.left = Math.random()*width+x;\r\n    this.top = Math.random()*height+y;\r\n  }\r\n  \r\n  public getComponent = () => {\r\n    const dotStyle: SxStyleProp = {\r\n      backgroundColor: theme.colors.yellow,\r\n      borderRadius: 10,\r\n      width: this.size,\r\n      height: this.size,\r\n      left: this.left,\r\n      top: this.top,\r\n      position: 'absolute',\r\n    };\r\n    return <div sx={dotStyle}/>\r\n  };\r\n}","/** @jsx jsx */\r\nimport React, {useContext, useState, useRef, useEffect} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {Link} from 'react-router-dom';\r\nimport {MdControlPoint} from 'react-icons/md';\r\nimport {GiClick} from 'react-icons/gi';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport {theme, FIRST_BREAKPOINT} from '../utils/theme';\r\nimport {InfoContext, IInfoContext} from '../utils/contexts';\r\nimport {CountDownTimer} from '../components/CountDownTimer';\r\nimport {Heading} from '../components/Heading';\r\nimport {Collapsable} from '../components/Collapsable';\r\nimport {PhotoSlideDeck, Photo} from '../components/PhotoSlideDeck';\r\nimport {getImageUrl, hexToRgbArr} from '../utils/functions';\r\nimport {RandomDot} from '../utils/RandomDot';\r\n\r\n/**\r\n * The home screen, big parallax background plus the timer\r\n */\r\nconst Main: React.FC = () => {\r\n  const countdownEvent = useContext<IInfoContext>(InfoContext).countdown[0];\r\n\r\n  if (!countdownEvent) {\r\n    return <div />;\r\n  }\r\n\r\n  // const bgTint = \r\n\r\n  const style: SxStyleProp = {\r\n    width: '100%',\r\n    height: '100vh',\r\n    backgroundSize: 'cover',\r\n    backgroundImage:\r\n      `linear-gradient(rgba(${hexToRgbArr(theme.colors.navbar)}, 0.8),`\r\n      + `rgba(${hexToRgbArr(theme.colors.navbar)}, 0.4)),`\r\n      + `url(\"./assets/home-background.png\") `,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  };\r\n\r\n  const buttonStyle: SxStyleProp = {\r\n    top: '62%',\r\n    left: '7%',\r\n    width: 'fit-content',\r\n    mx: 'auto',\r\n    mt: '1em',\r\n    position: ['static', 'absolute'],\r\n    // backgroundColor: ['transparent', theme.colors.background.accent],\r\n    color: theme.colors.text.light,\r\n    textAlign: 'center',\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: [20, 30],\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      color: theme.colors.text.light,\r\n      backgroundColor: theme.colors.background.overlay,\r\n    },\r\n    fontVariantCaps: 'titling-caps',\r\n    px: 4,\r\n    order: 1,\r\n\r\n    //mobile\r\n    borderColor: theme.colors.background.light,\r\n    borderWidth: [1, 2],\r\n    borderStyle: 'solid',\r\n    \r\n  };\r\n\r\n  return (\r\n    <div sx={style}>\r\n      <CountDownTimer date={new Date(countdownEvent.date)} />\r\n      <Link to=\"events\" sx={buttonStyle}>\r\n        <div sx={{my: 2}}>{countdownEvent.eventName.toUpperCase()}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\n//=============================================================\r\n\r\n/**\r\n * The green board that has dots in the background\r\n * sketchiest code\r\n */\r\nconst BackgroundWithDots: React.FC = (props) => {\r\n  const [randomDots, setRandomDots] = useState<RandomDot[]>([]);\r\n  const [numDots, setNumDots] = useState<number>(null);\r\n\r\n  //for getting the width\r\n  const componentRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    //used to re-render the dots upon resizing, because it may be a long list\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        const height = entry.contentRect.height;\r\n        generateRandomDots(height);\r\n      });\r\n    });\r\n    ro.observe(componentRef.current);\r\n    return () => ro.disconnect();\r\n  }, [randomDots]);\r\n\r\n  /**\r\n   * Gets random dots for the background at\r\n   * *x ∈ [0, 1/3(width)] ∪ [2/3(width), width], y ∈ [0, height]*\r\n   */\r\n  const generateRandomDots = (height: number) => {\r\n    const width = componentRef.current.getBoundingClientRect().width;\r\n    const dotsPerSideHeightInterval = 40;\r\n    setNumDots((height / dotsPerSideHeightInterval) * 2);\r\n    const numNewDots =\r\n      height / dotsPerSideHeightInterval - randomDots.length / 2;\r\n\r\n    for (let i = 0; i < numNewDots; i++) {\r\n      setRandomDots((oldArr) => {\r\n        const clone = [...oldArr];\r\n        clone.push(\r\n          new RandomDot(\r\n            width - width / 3,\r\n            height / 20,\r\n            width / 3,\r\n            height - height / 10,\r\n          ),\r\n        );\r\n        clone.push(\r\n          new RandomDot(0, height / 20, width / 3, height - height / 10),\r\n        );\r\n        return clone;\r\n      });\r\n    }\r\n  };\r\n\r\n  const style: SxStyleProp = {\r\n    backgroundColor: theme.colors.secondary,\r\n    borderRadius: 30,\r\n    mt: 30,\r\n    position: 'relative',\r\n    pb: 60,\r\n    pt: 20,\r\n    display: 'flex',\r\n  };\r\n\r\n\r\n  return (\r\n    <div sx={style} ref={componentRef}>\r\n      {window.innerWidth > FIRST_BREAKPOINT \r\n        ? randomDots.map((dot) => dot.getComponent()).slice(0, numDots)\r\n        : undefined\r\n      }\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\n//=============================================================\r\n\r\nconst UpcomingBoard: React.FC = () => {\r\n  const {upcomingMiniEvents} = useContext<IInfoContext>(InfoContext);\r\n\r\n  const style: SxStyleProp = {\r\n    pt: theme.bodyPadding.pt,\r\n    pb: theme.bodyPadding.pb,\r\n    px: theme.bodyPadding.px,\r\n  };\r\n\r\n  /**\r\n   * Gets the collapsable list for all upcoming events\r\n   */\r\n  const getEventsList = () => {\r\n    const style: SxStyleProp = {\r\n      fontSize: theme.fontSizes.bodyBig,\r\n      fontFamily: theme.fonts.body,\r\n    };\r\n\r\n    const descriptionStyle: SxStyleProp = {\r\n      textAlign: 'left',\r\n      pl: '1em',\r\n      fontSize: theme.fontSizes.body.map(n => n+2),\r\n      py: '0.5em',\r\n    };\r\n\r\n    return upcomingMiniEvents.map((event) => {\r\n      const iconStyle: SxStyleProp = {\r\n        color: theme.colors.footer,\r\n        ml: '0.5em',\r\n        // '&:hover': {\r\n        //   color: theme.colors.footer,\r\n        // },\r\n      };\r\n\r\n      const linkStyle: SxStyleProp = {\r\n        color: theme.colors.text.light,\r\n        '&:hover': {\r\n          textDecoration: 'none',\r\n          color: theme.colors.footer,\r\n        },\r\n      };\r\n\r\n      const title = (\r\n        <React.Fragment>\r\n          <MdControlPoint sx={{mr: '1em'}} />\r\n          {event.link ? (\r\n            <a href={event.link} sx={linkStyle}>\r\n              {event.name}\r\n              {/* <GiClick sx={iconStyle} /> */}\r\n            </a>\r\n          ) : event.name}\r\n        </React.Fragment>\r\n      );\r\n\r\n      if (!event.description)\r\n        return <Collapsable title={title} titleStyle={style} />;\r\n      return (\r\n        <Collapsable title={title} titleStyle={style} childrenStyle={{ml: ['20%', '15em']}}>\r\n          <div sx={descriptionStyle}>{event.description}</div>\r\n        </Collapsable>\r\n      );\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The placeholder value for if there are no upcoming events\r\n   */\r\n  const getPlaceHolder = () => {\r\n    const style: SxStyleProp = {\r\n      fontSize: theme.fontSizes.bodyBig,\r\n      textAlign: 'center',\r\n      color: theme.colors.text.light,\r\n      py: 5,\r\n    };\r\n\r\n    return <div sx={style}>Nothing Yet!</div>;\r\n  };\r\n\r\n  const eventListWrapper: SxStyleProp = {\r\n    margin: 'auto',\r\n  };\r\n\r\n  if (!upcomingMiniEvents) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <div sx={style}>\r\n      <Heading alignment=\"center\" text=\"Upcoming\" />\r\n      <BackgroundWithDots>\r\n        {upcomingMiniEvents.length > 0 ? (\r\n          <div sx={eventListWrapper}>{getEventsList()}</div>\r\n        ) : (\r\n          getPlaceHolder()\r\n        )}\r\n      </BackgroundWithDots>\r\n    </div>\r\n  );\r\n};\r\n\r\n//=============================================================\r\n\r\n/**\r\n * The recents gallery\r\n */\r\nconst Recent: React.FC = () => {\r\n  const {recents} = useContext<IInfoContext>(InfoContext);\r\n  const [width, setWidth] = useState<number>(0);\r\n  const thisComponentRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!thisComponentRef.current) return;\r\n    setWidth(thisComponentRef.current.getBoundingClientRect().width);\r\n  }, []);\r\n\r\n  if (!recents) {\r\n    return <div></div>;\r\n  }\r\n\r\n  const style: SxStyleProp = {\r\n    backgroundColor: theme.colors.background.overlay,\r\n    px: theme.bodyPadding.px,\r\n    pt: theme.bodyPadding.pt,\r\n    pb: theme.bodyPadding.pb,\r\n  };\r\n\r\n  //scale in relation to viewport width\r\n  const scale = width > FIRST_BREAKPOINT ? 0.38 : 0.75;\r\n\r\n  const photos: Photo[] = recents.map((event) => {\r\n    return {\r\n      url: getImageUrl(event.photoId, Math.round(width / scale), 1000),\r\n      description: event.description,\r\n    };\r\n  });\r\n\r\n  //target photo dimension\r\n  //photos are 1.5:1 aspect ratio\r\n  const photoDimension = {\r\n    width: width * scale,\r\n    height: width * scale / 1.5,\r\n  };\r\n\r\n  const line: SxStyleProp = {\r\n    backgroundColor: theme.colors.primary,\r\n    height: '0.2em',\r\n    width: ['80%', '20%'],\r\n    borderRadius: 3,\r\n    mt: ['1em', '1.5em'],\r\n    mx: 'auto',\r\n  };\r\n  return (\r\n    <div sx={style} ref={thisComponentRef}>\r\n      <Heading text=\"Recents\" alignment=\"center\" />\r\n      <PhotoSlideDeck photos={photos} photoDimension={photoDimension} />\r\n      <div sx={line} />\r\n    </div>\r\n  );\r\n};\r\n\r\n//=============================================================\r\n\r\nexport const Home: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Main />\r\n      <UpcomingBoard />\r\n      <Recent />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\nimport {hexToRgba, rgbItem} from '../utils/functions';\r\n\r\nexport interface TransRectProps {\r\n  lengthX: string | number; //string for '2em', etc\r\n  lengthY?: string | number;\r\n  minLengthY?: string | number; // if you need the rect to expand but have a min\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\n// Default background colour for IE kids (ie no one)\r\nconst backRgba: rgbItem = hexToRgba(\r\n  theme.colors.secondary,\r\n  0.5,\r\n);\r\n\r\nexport const TranslucentRectangle: React.FC<TransRectProps> = ({\r\n  lengthX,\r\n  lengthY,\r\n  minLengthY,\r\n  extraStyling,\r\n  children,\r\n}): ReactElement => {\r\n  const rectStyle: SxStyleProp = {\r\n    width: lengthX,\r\n    height: lengthY,\r\n    minHeight: minLengthY,\r\n    // So IE doesnt kill itself when trying to load\r\n    backgroundColor: backRgba.hasOwnProperty('a')\r\n      ? `rgba(${backRgba.r}, ${backRgba.b}, ${backRgba.g}, ${backRgba.a})`\r\n      : `rgba(backRgba.r, backRgba.b, backRgba.g)`,\r\n    // If you want HEX RRGGBBAA put it in extraStyling\r\n    ...extraStyling,\r\n  };\r\n\r\n  return <div sx={rectStyle}>{children}</div>;\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement, useState, useEffect, useCallback} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {FaArrowUp} from 'react-icons/fa';\r\n\r\nimport {useUnmountingDelay} from '../utils/hooks';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {fadeInPartially} from '../utils/animation';\r\n\r\nexport const ScrollToTopButton: React.FC = () => {\r\n  const [showScrollButton, setShowScrollButton] = useState<boolean>(false);\r\n  // for the fadeout\r\n  const shouldRenderButton = useUnmountingDelay(showScrollButton, 500);\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (!showScrollButton && window.pageYOffset > 500) {\r\n      setShowScrollButton(true);\r\n    } else if (showScrollButton && window.pageYOffset <= 500) {\r\n      setShowScrollButton(false);\r\n    }\r\n  }, [showScrollButton]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', handleScroll, false);\r\n\r\n    return () => document.removeEventListener('scroll', handleScroll, false);\r\n  }, [handleScroll]);\r\n\r\n  /**\r\n   * Scrolls to the top of the page.\r\n   */\r\n  const scrollToTop = () => {\r\n    window.scrollTo({top: 0, behavior: 'smooth'});\r\n  };\r\n\r\n  /**\r\n   * Renders a formatted scroll to top button. Assumes that checks were\r\n   * done beforehand to make sure this component should exist.\r\n   */\r\n  const renderScrollButton = (): ReactElement => {\r\n    const buttonStyle: SxStyleProp = {\r\n      position: 'fixed',\r\n      bottom: '5%',\r\n      right: '5%',\r\n\r\n      width: ['40px', '50px', '60px'],\r\n      height: ['40px', '50px', '60px'],\r\n      borderRadius: '50%',\r\n\r\n      '@keyframes fadeIn': fadeInPartially,\r\n      animationName: 'fadeIn',\r\n      animationDuration: '0.5s',\r\n\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n\r\n      backgroundColor: theme.colors.secondary,\r\n      boxShadow: '3px 3px 23px -3px rgba(0,0,0,0.75)',\r\n\r\n      transition: 'opacity 0.5s ease, background-color 0.5s ease',\r\n      opacity: showScrollButton ? 0.5 : 0,\r\n\r\n      zIndex: 10,\r\n\r\n      '&:hover': {\r\n        opacity: 1,\r\n        backgroundColor: theme.colors.primary,\r\n        cursor: 'pointer',\r\n      },\r\n    };\r\n\r\n    const iconStyle: SxStyleProp = {\r\n      margin: 'auto',\r\n      width: ['25px', '35px', '45px'],\r\n      height: 'auto',\r\n      // height: ['25px', '35px', '45px'],\r\n    };\r\n\r\n    return (\r\n      <div sx={buttonStyle} onClick={scrollToTop}>\r\n        <FaArrowUp color={theme.colors.text.light} sx={iconStyle} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return shouldRenderButton ? renderScrollButton() : <React.Fragment />;\r\n};\r\n","/** @jsx jsx */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useRef,\r\n  ReactElement,\r\n} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {Heading} from '../components/Heading';\r\nimport {TranslucentRectangle} from '../components/TranslucentRectangle';\r\nimport {LoadingSquare} from '../components/LoaderComponents';\r\nimport {ScrollToTopButton} from '../components/ScrollToTopButton';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {IInfoContext, InfoContext} from '../utils/contexts';\r\nimport {Event} from '../utils/interfaces';\r\nimport {getImageUrl} from '../utils/functions';\r\nimport {useUnmountingDelay} from '../utils/hooks';\r\nimport {fadeOut, fadeIn} from '../utils/animation';\r\n\r\n// Interfaces --\r\ninterface EventItemProps {\r\n  height: string;\r\n  width: string;\r\n  event: Event;\r\n  textLocation: 'left' | 'right';\r\n  rectStyling?: SxStyleProp;\r\n}\r\n\r\ninterface EventHeadingProps {\r\n  text: string;\r\n  textLocation: 'left' | 'right';\r\n  extraHeaderStyling?: SxStyleProp;\r\n  extraTextStyling?: SxStyleProp;\r\n}\r\n\r\ninterface EventPhotoProps {\r\n  photoID: string;\r\n  width: string;\r\n  height: number;\r\n  photoLocation: string;\r\n}\r\n\r\ninterface EventInfoItemProps {\r\n  width: string;\r\n  textLocation: 'left' | 'right';\r\n  eventDetails: EventDetails;\r\n}\r\n\r\ninterface EventButtonProps {\r\n  buttonText: string;\r\n  buttonLink: string;\r\n  extraButtonStyling?: SxStyleProp;\r\n}\r\n\r\nexport interface EventDetails {\r\n  description: string;\r\n  date: string;\r\n  buttonText?: string;\r\n  buttonLink?: string;\r\n}\r\n\r\n// ============================================================\r\n// EventHeading -- for the main header containing the event name.\r\nconst EventHeading: React.FC<EventHeadingProps> = ({\r\n  text,\r\n  textLocation,\r\n  extraHeaderStyling,\r\n  extraTextStyling,\r\n}) => {\r\n  const wrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    mt: '3%',\r\n    mb: '1%',\r\n    py: '1%',\r\n    width: ['95%', '90%', '80%'],\r\n    height: 'auto',\r\n\r\n    // position this based on text location\r\n    ml: textLocation === 'left' ? 'auto' : 0,\r\n    mr: textLocation === 'right' ? 'auto' : 0,\r\n    pr: textLocation === 'right' ? '2em' : 0,\r\n    pl: textLocation === 'left' ? '2em' : 0,\r\n    zIndex: 3,\r\n\r\n    textAlign: textLocation,\r\n\r\n    backgroundColor: theme.colors.primary,\r\n\r\n    ...extraHeaderStyling,\r\n  };\r\n  const titleTextStyle: SxStyleProp = {\r\n    display: 'inline',\r\n    position: 'relative',\r\n    fontSize: theme.fontSizes.heading.event,\r\n    fontFamily: theme.fonts.body,\r\n    color: theme.colors.text.light,\r\n\r\n    margin: 'auto',\r\n\r\n    ...extraTextStyling,\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <p sx={titleTextStyle}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// EventPhoto -- for the main img that shows up for the event.\r\n// TODO: consistent resizing?\r\nconst EventPhoto: React.FC<EventPhotoProps> = ({\r\n  photoID,\r\n  width,\r\n  height,\r\n  photoLocation,\r\n}) => {\r\n  const [imgWidth, setImgWidth] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const renderLoadingSquare = useUnmountingDelay(loading, 1000);\r\n  const imageRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Get the width of the div that contains the image, so that we can\r\n  // size the image properly.\r\n  useEffect(() => {\r\n    if (!imageRef.current) return;\r\n\r\n    setImgWidth(Math.round(imageRef.current.getBoundingClientRect().width));\r\n  }, [imageRef]);\r\n\r\n  // Styles --\r\n  const wrapperStyle: SxStyleProp = {\r\n    // The wrapper that holds both the image and the rect for now\r\n\r\n    position: 'absolute',\r\n    top: '5%',\r\n    right: photoLocation === 'right' ? 0 : 'auto',\r\n    left: photoLocation === 'left' ? 0 : 'auto',\r\n\r\n    width: width,\r\n    maxWidth: width,\r\n    height: height,\r\n    maxHeight: '100%', // make sure the image doesn't break the page\r\n\r\n    zIndex: 5, // draw over the title\r\n\r\n    transition: 'transform .2s, .5s ease',\r\n    '&:hover': {\r\n      transform: 'scale(1.025)',\r\n      opacity: 0.95,\r\n    },\r\n  };\r\n  const imageStyle: SxStyleProp = {\r\n    display: loading ? 'none' : 'block',\r\n    '@keyframes fade-in': fadeIn,\r\n    animation: 'fade-in 1s linear',\r\n\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    height: '100%',\r\n  };\r\n  const rectStyling: SxStyleProp = {\r\n    // For extra styling of the TransparentRectangle\r\n\r\n    position: 'absolute',\r\n    backgroundColor: theme.colors.navbar + '66',\r\n    maxHeight: '100%', // make sure the image doesn't break the page\r\n    width: '100%',\r\n    zIndex: 2,\r\n\r\n    top: '3%',\r\n    right: photoLocation === 'right' ? '3%' : 'auto',\r\n    left: photoLocation === 'left' ? '3%' : 'auto',\r\n  };\r\n\r\n  // Functions --\r\n  /**\r\n   * Handles image loading and sets loading state to false.\r\n   */\r\n  const handleLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  /**\r\n   * Determines whether to render a LoadingSquare or not.\r\n   * @returns either a loading square or nothing.\r\n   */\r\n  const displayLoadingSquare = (): ReactElement | void => {\r\n    const loadingSquareStyle: SxStyleProp = {\r\n      '@keyframes fade-out': fadeOut,\r\n      animation: loading ? 'none' : 'fade-out 1s linear',\r\n    };\r\n\r\n    return <LoadingSquare extraStyling={loadingSquareStyle} />;\r\n  };\r\n\r\n  return (\r\n    // yes shari i know that the header isnt exactly right but\r\n    // ill fix that later i guess :)\r\n    <div sx={wrapperStyle} ref={imageRef}>\r\n      {renderLoadingSquare ? displayLoadingSquare() : undefined}\r\n      <img\r\n        src={getImageUrl(photoID, 5000, height)}\r\n        alt=\"\"\r\n        sx={imageStyle}\r\n        onLoad={handleLoading}\r\n      />\r\n      <TranslucentRectangle\r\n        lengthX={imgWidth}\r\n        lengthY={height}\r\n        extraStyling={rectStyling}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// EventButton -- for any buttons that are needed for the event element.\r\nconst EventButton: React.FC<EventButtonProps> = ({\r\n  buttonText,\r\n  buttonLink,\r\n  extraButtonStyling,\r\n}) => {\r\n  // Assumes button text and button link is valid\r\n  const wrapperStyle: SxStyleProp = {\r\n    display: 'inline-block',\r\n    backgroundColor: theme.colors.primary,\r\n\r\n    textAlign: 'center',\r\n\r\n    px: '2%',\r\n    py: '1%',\r\n    mx: '5%',\r\n    mt: '2%',\r\n    mb: '0.5%',\r\n\r\n    transition: 'transform .2s, .5s ease',\r\n    '&:hover': {\r\n      transform: 'scale(1.025)',\r\n      cursor: 'pointer',\r\n    },\r\n\r\n    ...extraButtonStyling,\r\n  };\r\n  const buttonStyle: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.body,\r\n    whiteSpace: 'nowrap',\r\n\r\n    '&:hover': {\r\n      color: theme.colors.text.light,\r\n      textDecoration: 'none',\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Renders the contents of the button, depending on whether\r\n   * a link was provided or not.\r\n   */\r\n  const renderButtonContents = () => {\r\n    if (buttonLink) {\r\n      return (\r\n        <a href={buttonLink} sx={buttonStyle}>\r\n          {buttonText}\r\n        </a>\r\n      );\r\n    }\r\n\r\n    return <span sx={buttonStyle}> {buttonText}</span>;\r\n  };\r\n\r\n  return <div sx={wrapperStyle}>{renderButtonContents()}</div>;\r\n};\r\n\r\n// ============================================================\r\n// EventInfoItem -- for the description and button\r\nconst EventInfoItem: React.FC<EventInfoItemProps> = ({\r\n  width,\r\n  textLocation,\r\n  eventDetails,\r\n}) => {\r\n  // Styles for the buttons\r\n  const textWrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    width: width,\r\n    maxWidth: width,\r\n\r\n    // Draw based on orientation\r\n    ml: textLocation === 'left' ? 0 : 'auto',\r\n    mr: textLocation === 'right' ? 0 : 'auto',\r\n    textAlign: textLocation === 'right' ? 'left' : 'right',\r\n  };\r\n  const descriptionStyle: SxStyleProp = {\r\n    position: 'relative',\r\n\r\n    display: 'inline-block',\r\n    px: '5%',\r\n\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.event,\r\n    color: theme.colors.text.darkGray,\r\n\r\n    wordWrap: 'normal',\r\n    lineHeight: 1.6,\r\n  };\r\n  const dateStyle: SxStyleProp = {\r\n    ...descriptionStyle,\r\n\r\n    color: theme.colors.secondary,\r\n    fontSize: theme.fontSizes.event.map((size) => size + 2),\r\n    fontWeight: 'bold',\r\n    pb: '1%',\r\n  };\r\n  const buttonContainerStyle: SxStyleProp = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: textLocation === 'right' ? 'flex-start' : 'flex-end',\r\n  };\r\n\r\n  /**\r\n   * Checks to see if a button should be rendered in the first place,\r\n   * based on presence of button text or not.\r\n   * @returns either an empty element or a button.\r\n   */\r\n  const renderButton = (): ReactElement => {\r\n    if (eventDetails.buttonText) {\r\n      return (\r\n        <EventButton\r\n          buttonText={eventDetails.buttonText}\r\n          buttonLink={eventDetails.buttonLink}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div></div>;\r\n  };\r\n\r\n  return (\r\n    <div sx={textWrapperStyle}>\r\n      <p sx={dateStyle}>{eventDetails.date}</p>\r\n\r\n      <p sx={descriptionStyle}>{eventDetails.description}</p>\r\n      <div sx={buttonContainerStyle}>\r\n        {/* yes shari, this will work with multiple buttons if needed */}\r\n        {renderButton()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// EventItem -- for holding the actual event information -----\r\nconst EventItem: React.FC<EventItemProps> = ({\r\n  height,\r\n  width,\r\n  event,\r\n  textLocation,\r\n  rectStyling,\r\n}) => {\r\n  const [imgHeight, setImgHeight] = useState<number>(0);\r\n  const eventItemRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Get the height of the curernt div containing the event\r\n  // item, so that the photo can be this size too.\r\n  useEffect(() => {\r\n    if (!eventItemRef.current) return;\r\n\r\n    setImgHeight(\r\n      Math.round(eventItemRef.current.getBoundingClientRect().height),\r\n    );\r\n  }, [eventItemRef]);\r\n\r\n  // All text details for the current event\r\n  const currentEventDetails: EventDetails = {\r\n    description: event.description,\r\n    date: event.date,\r\n    buttonText: event.buttonText,\r\n    buttonLink: event.buttonLink,\r\n  };\r\n\r\n  // Sty;es fpr every event items\r\n  const wrapperStyle: SxStyleProp = {\r\n    py: '3%',\r\n    my: ['2%', '1%', 0],\r\n  };\r\n  const rectangleBarrierStyling: SxStyleProp = {\r\n    my: '-0.5em', // pulling the rectangles closer together\r\n    pb: '2%',\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    minHeight: ['35vh', '45vh', '55vh', height],\r\n\r\n    ...rectStyling,\r\n  };\r\n\r\n  /**\r\n   * Determines if a photo should be rendered, based on presence\r\n   * of a photo ID.\r\n   * @returns either an empty element, or an event photo.\r\n   */\r\n  const renderPhoto = (): ReactElement => {\r\n    if (event.photoId) {\r\n      return (\r\n        <EventPhoto\r\n          photoID={event.photoId}\r\n          width=\"35%\"\r\n          height={imgHeight}\r\n          photoLocation={textLocation === 'left' ? 'right' : 'left'}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div></div>;\r\n  };\r\n\r\n  // All events have a heading and description and possibly\r\n  // a button (or buttons) to a link and a photo.\r\n  return (\r\n    <div sx={wrapperStyle} ref={eventItemRef}>\r\n      <TranslucentRectangle\r\n        lengthX={width}\r\n        extraStyling={rectangleBarrierStyling}\r\n      >\r\n        <EventHeading text={event.eventName} textLocation={textLocation} />\r\n        <EventInfoItem\r\n          width={event.photoId ? '65%' : '90%'}\r\n          textLocation={textLocation}\r\n          eventDetails={currentEventDetails}\r\n        />\r\n        {renderPhoto()}\r\n      </TranslucentRectangle>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// Events -- renders the page of all events.\r\nexport const Events: React.FC = () => {\r\n  const eventInfo: Event[] = useContext<IInfoContext>(InfoContext).events;\r\n\r\n  // Styles for the page\r\n  const wrapperStyle: SxStyleProp = {\r\n    // the main page div\r\n\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.background.light,\r\n  };\r\n  const innerWrapperStyle: SxStyleProp = {\r\n    // the div that contains everything\r\n\r\n    top: '20vh',\r\n    position: 'relative',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    mb: '14em',\r\n  };\r\n  const headingWrapperStyle: SxStyleProp = {\r\n    // the header div\r\n\r\n    left: '5%',\r\n    maxWidth: '90%', // to make sure the page doesn't scroll to the right\r\n    position: 'relative',\r\n  };\r\n\r\n  // Get rid of horizontal scroll bar caused by hovering a picture\r\n  useEffect(() => {\r\n    document.body.style.overflowX = 'hidden';\r\n\r\n    return () => (document.body.style.overflowX = 'initial');\r\n  });\r\n\r\n  /**\r\n   * Retrieves all events in a formatted manner based on what number\r\n   * the event is.\r\n   * @returns a list containing all the EventItem elements.\r\n   */\r\n  const getAllEvents = (): ReactElement[] => {\r\n    return eventInfo.map((event, index) => {\r\n      const extraRectStyling: SxStyleProp = {\r\n        backgroundColor:\r\n          index % 2 === 1 ? theme.colors.background.overlay : 'transparent',\r\n      };\r\n\r\n      return (\r\n        <div key={index} sx={{position: 'relative', display: 'inline'}}>\r\n          <EventItem\r\n            width=\"100%\"\r\n            height=\"65vh\"\r\n            event={event}\r\n            textLocation={index % 2 === 1 ? 'left' : 'right'}\r\n            rectStyling={extraRectStyling}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      {/* initializing scroll to top button */}\r\n      <ScrollToTopButton />\r\n\r\n      <div sx={innerWrapperStyle}>\r\n        <div sx={headingWrapperStyle}>\r\n          <Heading text=\"Events\" alignment=\"left\" />\r\n        </div>\r\n        {getAllEvents()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useState, useRef, useEffect, ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {TranslucentRectangle} from './TranslucentRectangle';\r\nimport {LoadingSquare} from './LoaderComponents';\r\n\r\nimport {Club} from '../utils/interfaces';\r\nimport {getImageUrl, allowScrolling} from '../utils/functions';\r\nimport {theme} from '../utils/theme';\r\nimport {popIn} from '../utils/animation';\r\n// yes shari in case you couldnt tell from the code and the comments\r\n// i was really tired while coding this\r\n\r\n// Interfaces --\r\nexport interface ClubPopupProps {\r\n  closeHandler: () => void;\r\n  clubInfo: Club;\r\n}\r\n\r\ninterface ClubDescriptionItemProps {\r\n  clubname: string;\r\n  description: string;\r\n}\r\n\r\ninterface ClubInfoItemProps {\r\n  clubContactInfo: ClubContactInfo;\r\n}\r\n\r\ninterface ClubPhotoProps {\r\n  photoId: string;\r\n  width: number;\r\n}\r\n\r\ninterface ClubContactInfo {\r\n  // this can be expanded if we need more values\r\n  meetingDate: FormattedValue;\r\n  meetingFreq: FormattedValue;\r\n  meetingLoc: FormattedValue;\r\n  email?: FormattedValue;\r\n  instagram?: FormattedValue;\r\n}\r\n\r\ninterface FormattedValue {\r\n  formattedTitle: string; // the text that is displayed as the property name\r\n  value: string | ReactElement; // for possible links lol\r\n}\r\n\r\n// ============================================================\r\n// Dimensions -- edit them all here!\r\n\r\n// The club descrption box\r\nconst ClubDescriptionDimensions = {\r\n  top: ['27.5%', '22.5%', '17.5%', '15%'],\r\n  left: ['3%', '5%', '5%', '10%'],\r\n  width: ['40%', '35%', '30%', '25%'],\r\n  height: ['45%', '55%', '65%', '70%'],\r\n};\r\n\r\n// The bottom right club info box\r\nconst ClubInfoItemDimensions = {\r\n  bottom: ['24%', '16%', '16%', '8%'],\r\n  right: ['2.5%', '10%', '12%', '20%'],\r\n  width: ['45%', '35%', '35%', '25%'],\r\n};\r\n\r\n// The background photo\r\nconst ClubPhotoDimensions = {\r\n  top: ['32.5%', '27.5%', '22.5%', '20%'],\r\n  left: ['5%', '15%', '20%', '25%'],\r\n  width: ['90%', '70%', '60%', '50%'],\r\n  height: ['35%', '45%', '55%', '60%'],\r\n};\r\n\r\n// ============================================================\r\n\r\n// ============================================================\r\n// ClubDescriptionItem - for the sidebar with the club name and description\r\nconst ClubDescriptionItem: React.FC<ClubDescriptionItemProps> = ({\r\n  clubname,\r\n  description,\r\n}): ReactElement => {\r\n  // Styles for the text and stuff\r\n  const wrapperStyle: SxStyleProp = {\r\n    // The full large side rectangle\r\n\r\n    // all hail absolute positioning -- because my sanity has\r\n    // been gone for a very long time\r\n    position: 'absolute',\r\n    width: ClubDescriptionDimensions.width,\r\n    left: ClubDescriptionDimensions.left,\r\n    height: ClubDescriptionDimensions.height, // TODO: fix extreme resizing cases\r\n    top: ClubDescriptionDimensions.top,\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n\r\n    backgroundColor: theme.colors.background.light,\r\n  };\r\n  const titleWrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '45%',\r\n\r\n    // aligning the title text\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n\r\n    backgroundColor: theme.colors.secondary,\r\n    // using clipPath to make the cool slanted rectangle\r\n    // most modern browsers should support this so im sure its fine...\r\n    clipPath: 'polygon(0 0, 100% 0, 100% 100%, 0 80%)',\r\n  };\r\n  const descriptionWrapperStyle: SxStyleProp = {\r\n    minHeight: '55%',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n  };\r\n  const titleStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.heading,\r\n    fontSize: theme.fontSizes.heading.event,\r\n    color: theme.colors.text.light,\r\n\r\n    margin: 'auto',\r\n  };\r\n  const descriptionStyle: SxStyleProp = {\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.event,\r\n    color: theme.colors.text.darkSlate,\r\n\r\n    // text positioning and formatting yay\r\n    px: '5%',\r\n    margin: 'auto',\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <div sx={titleWrapperStyle}>\r\n        <h3 sx={titleStyle}>{clubname}</h3>\r\n      </div>\r\n      <div sx={descriptionWrapperStyle}>\r\n        <p sx={descriptionStyle}>{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// ClubInfoItem -- for the bottom right bar with the rest of the club info\r\nconst ClubInfoItem: React.FC<ClubInfoItemProps> = ({\r\n  clubContactInfo,\r\n}): ReactElement => {\r\n  // Styles necessary\r\n  const wrapperStyle: SxStyleProp = {\r\n    position: 'absolute', // all hail absolute positioning\r\n    bottom: ClubInfoItemDimensions.bottom,\r\n    right: ClubInfoItemDimensions.right,\r\n    width: ClubInfoItemDimensions.width,\r\n\r\n    // if we need a min height (results in no vertical centering if\r\n    // text is too small)\r\n    // TODO: fix this i guess sometime later\r\n    // minHeight: '25%',\r\n\r\n    borderRadius: '12px',\r\n    backgroundColor: theme.colors.background.light,\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n  };\r\n  const textContainerStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    my: '4%', // the extra 1% for 5% margin is supplied by the textboxes\r\n  };\r\n\r\n  /**\r\n   * Retrieves all the supplied contact information and formats it for\r\n   * the small contact rectangle.\r\n   * @returns a list of formatted contact information elements.\r\n   */\r\n  const getAllContactInfo = (): ReactElement[] => {\r\n    const contactInfoWrapperStyle: SxStyleProp = {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      my: '1%',\r\n      flex: '1', // SHOULD vertically fill...\r\n    };\r\n    const textStyle: SxStyleProp = {\r\n      fontFamily: theme.fonts.body,\r\n      fontSize: theme.fontSizes.event,\r\n      color: theme.colors.text.darkSlate,\r\n\r\n      marginY: 'auto',\r\n      wordBreak: 'break-word',\r\n      lineHeight: 1.2,\r\n    };\r\n    const colStyle: SxStyleProp = {\r\n      position: 'relative',\r\n      display: 'inline-block',\r\n    };\r\n    const leftColStyle: SxStyleProp = {\r\n      textAlign: 'left',\r\n      ml: '5%',\r\n      flex: '1',\r\n    };\r\n    const rightColStyle: SxStyleProp = {\r\n      textAlign: 'right',\r\n      mr: '5%',\r\n      flex: '2',\r\n    };\r\n\r\n    return Object.keys(clubContactInfo).map((info) => {\r\n      return (\r\n        // the text row\r\n        <div sx={contactInfoWrapperStyle} key={info}>\r\n          {/* left column of text */}\r\n          <div\r\n            sx={{\r\n              ...colStyle,\r\n              ...leftColStyle,\r\n            }}\r\n          >\r\n            <p sx={textStyle}>{clubContactInfo[info].formattedTitle}</p>\r\n          </div>\r\n\r\n          {/* right column of text */}\r\n          <div\r\n            sx={{\r\n              ...colStyle,\r\n              ...rightColStyle,\r\n            }}\r\n          >\r\n            <p sx={textStyle}>{clubContactInfo[info].value}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <div sx={textContainerStyle}>{getAllContactInfo()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n// ClubPhoto -- for the background club photo and the translucent rectangle\r\nconst ClubPhoto: React.FC<ClubPhotoProps> = ({\r\n  photoId,\r\n  width,\r\n}): ReactElement => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  // Image styles --\r\n\r\n  const photoStyle: SxStyleProp = {\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    height: '100%',\r\n  };\r\n  const rectStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    top: '28%',\r\n    left: '14%',\r\n\r\n    backgroundColor: theme.colors.secondary + '66',\r\n  };\r\n\r\n  // Functions --\r\n  /**\r\n   * Handles image loading and sets loading state to false.\r\n   */\r\n  const handleLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  /**\r\n   * Determines whether to render a LoadingSquare or not.\r\n   * @returns either a loading square or nothing.\r\n   */\r\n  const displayLoadingSquare = (): ReactElement | void => {\r\n    if (loading) {\r\n      return (\r\n        <LoadingSquare extraStyling={{backgroundColor: theme.colors.navbar}} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {displayLoadingSquare()}\r\n      <img\r\n        src={getImageUrl(photoId, width, 5000)}\r\n        alt=\"\"\r\n        sx={photoStyle}\r\n        onLoad={handleLoading}\r\n      />\r\n      <TranslucentRectangle\r\n        lengthX=\"100%\"\r\n        lengthY=\"100%\"\r\n        extraStyling={rectStyle}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// ============================================================\r\n\r\n// ============================================================\r\n// ClubPopup -- for the actual main club info popup\r\nexport const ClubPopup: React.FC<ClubPopupProps> = ({\r\n  closeHandler,\r\n  clubInfo,\r\n}): ReactElement => {\r\n  const [width, setWidth] = useState<number>(0);\r\n  const clubPhotoRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!clubPhotoRef.current) return;\r\n\r\n    setWidth(Math.round(clubPhotoRef.current.getBoundingClientRect().width));\r\n  }, [clubPhotoRef]);\r\n\r\n  // Yay styles\r\n  const overlayStyle: SxStyleProp = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.colors.background.darkOverlay,\r\n    opacity: 0.8,\r\n    zIndex: 15,\r\n    backdropFilter: 'blur(10px)',\r\n  };\r\n\r\n  const mainWrapperStyle: SxStyleProp = {\r\n    position: 'fixed',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n\r\n    zIndex: 17, // draw over everything\r\n\r\n    '@keyframes popIn': popIn,\r\n    animationName: 'popIn',\r\n    animationDuration: '1s',\r\n  };\r\n  const clickEventContainerStyle: SxStyleProp = {\r\n    width: '100%',\r\n    height: '100%',\r\n  };\r\n  const photoContainerStyle: SxStyleProp = {\r\n    position: 'absolute', // all hail absolute positioning\r\n    margin: 'auto',\r\n    top: ClubPhotoDimensions.top,\r\n    left: ClubPhotoDimensions.left,\r\n    width: ClubPhotoDimensions.width,\r\n    height: ClubPhotoDimensions.height,\r\n  };\r\n\r\n  // All the club important contact information for the contact\r\n  // info rectangle.\r\n  // TODO: make instagram and email a link lol\r\n  const clubContactInfo: ClubContactInfo = {\r\n    meetingDate: {\r\n      formattedTitle: 'Meetings:',\r\n      value: clubInfo.meetingDay,\r\n    },\r\n    meetingFreq: {\r\n      formattedTitle: 'Freq:',\r\n      value: clubInfo.meetingFrequency,\r\n    },\r\n    meetingLoc: {\r\n      formattedTitle: 'Location:',\r\n      value: clubInfo.meetingLocation,\r\n    },\r\n    email: {formattedTitle: 'Email:', value: clubInfo.email},\r\n    instagram: {formattedTitle: 'Instagram', value: clubInfo.instagram},\r\n  };\r\n\r\n  /**\r\n   * Handles the closing of the popup by determining whether to\r\n   * call the close handler or not based on where was clicked.\r\n   * @param e\r\n   */\r\n  const handleClosingParent = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n  ): void => {\r\n    // Since child elements can propagate onClick events too, we\r\n    // make sure the element that called e was the parent element\r\n    // (ie. e.currentTarget, since e is binded to the parent element).\r\n    if (e.target === e.currentTarget) {\r\n      allowScrolling();\r\n      closeHandler();\r\n    }\r\n  };\r\n\r\n  return (\r\n    // sets the height, width, and position\r\n    <React.Fragment>\r\n      <div sx={overlayStyle} />\r\n      <div sx={mainWrapperStyle}>\r\n        {/* handles the click event to close the popup */}\r\n        <div sx={clickEventContainerStyle} onClick={handleClosingParent}>\r\n          {/* the background photo */}\r\n          <div sx={photoContainerStyle} ref={clubPhotoRef}>\r\n            <ClubPhoto photoId={clubInfo.photoId} width={width} />\r\n          </div>\r\n\r\n          {/* club information */}\r\n          <ClubDescriptionItem\r\n            clubname={clubInfo.name}\r\n            description={clubInfo.description}\r\n          />\r\n          <ClubInfoItem clubContactInfo={clubContactInfo} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useContext, useRef, useEffect, useState} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {BsThreeDots, BsSearch} from 'react-icons/bs';\r\nimport {FaTimes} from 'react-icons/fa';\r\n\r\nimport {Heading} from '../components/Heading';\r\nimport {Collapsable} from '../components/Collapsable';\r\n\r\nimport {theme, FIRST_BREAKPOINT} from '../utils/theme';\r\nimport {IInfoContext, InfoContext} from '../utils/contexts';\r\nimport {\r\n  getImageUrl,\r\n  disallowScrolling,\r\n  randNum,\r\n  randInt,\r\n} from '../utils/functions';\r\nimport {Club} from '../utils/interfaces';\r\n\r\nimport clubBackground from '../assets/clubBackground.png';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport {ClubPopup} from '../components/ClubPopup';\r\n\r\n//x1, y1 - top middle\r\n//x2, y2 - bottom left\r\n//x3, y3 - bottom right\r\nclass BgTriangleProp {\r\n  private x1: string;\r\n  private y1: string;\r\n  private x2: string;\r\n  private y2: string;\r\n  private x3: string;\r\n  private y3: string;\r\n  private style: SxStyleProp = {};\r\n\r\n  constructor(x1, y1, x2, y2, x3, y3, style: SxStyleProp) {\r\n    this.x1 = x1;\r\n    this.x2 = x2;\r\n    this.x3 = x3;\r\n    this.y1 = y1;\r\n    this.y2 = y2;\r\n    this.y3 = y3;\r\n    this.style = style;\r\n  }\r\n\r\n  public getStyle = () => this.style;\r\n\r\n  public getClipPath = () => {\r\n    return `polygon(${this.x1} ${this.y1}, ${this.x2} ${this.y2}, ${this.x3} ${this.y3})`;\r\n  };\r\n}\r\n\r\nexport const Clubs: React.FC = () => {\r\n  const {clubs, clubHighlights} = useContext<IInfoContext>(InfoContext);\r\n  const [height, setHeight] = useState<number>(0);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [isPopup, setIsPopup] = useState<boolean>(false);\r\n  const [popupClub, setPopupClub] = useState<Club>(null);\r\n  const pageRef = useRef<HTMLDivElement>(null);\r\n  const bgRectWidth = useRef<number[]>([]);\r\n  const bgTriangleProp = useRef<BgTriangleProp[]>([]);\r\n\r\n  useEffect(() => {\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        setHeight(entry.target.clientHeight);\r\n      });\r\n    });\r\n    ro.observe(pageRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  if (!clubs || !clubHighlights) {\r\n    return <React.Fragment />;\r\n  }\r\n\r\n  /**\r\n   * Gets the list of clubs\r\n   */\r\n  const getClubList = () => {\r\n    const categories = {};\r\n    clubs.forEach((club) => {\r\n      if (categories[club.category]) {\r\n        categories[club.category].push(club);\r\n      } else {\r\n        categories[club.category] = [club];\r\n      }\r\n    });\r\n\r\n    const getClubs = (category) => {\r\n      return categories[category].map((club) => {\r\n        return (\r\n          <div\r\n            onClick={() => {\r\n              setPopupClub(club);\r\n              setIsPopup(true);\r\n            }}\r\n          >\r\n            {club.name}\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n\r\n    return Object.keys(categories).map((category, index) => {\r\n      const titleStyle: SxStyleProp = {\r\n        color: theme.colors.text.darkGray,\r\n        borderColor: theme.colors.text.darkGray,\r\n        fontSize: theme.fontSizes.bodyBig,\r\n        fontFamily: theme.fonts.body,\r\n        '&:hover': {\r\n          color: theme.colors.text.darkGray,\r\n          cursor: 'pointer',\r\n        },\r\n      };\r\n      const childrenStyle: SxStyleProp = {\r\n        color: theme.colors.text.darkSlate,\r\n        borderColor: theme.colors.text.darkSlate,\r\n        ml: '80%',\r\n        pl: '1em',\r\n        fontSize: theme.fontSizes.bodySmall,\r\n        width: '100%',\r\n        '&:hover': {\r\n          cursor: 'pointer',\r\n        },\r\n      };\r\n      const titleWrapper: SxStyleProp = {\r\n        textAlign: 'right',\r\n      };\r\n      const titleComponent = (\r\n        <div sx={titleWrapper}>\r\n          {category} <BsThreeDots />\r\n        </div>\r\n      );\r\n\r\n      return (\r\n        <Collapsable\r\n          title={titleComponent}\r\n          titleStyle={titleStyle}\r\n          childrenStyle={childrenStyle}\r\n          collapsed={index === 0 ? false : true}\r\n        >\r\n          {getClubs(category)}\r\n        </Collapsable>\r\n      );\r\n    });\r\n  };\r\n\r\n  //=================================================\r\n  //querying\r\n  const getSearchResult = (searchStr: string) => {\r\n    return clubs.filter((club) => {\r\n      if (!club.name) return false;\r\n      return club.name.toLowerCase().includes(searchStr.toLowerCase());\r\n    });\r\n  };\r\n\r\n  const displaySearchResults = () => {\r\n    const wrapperStyle: SxStyleProp = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      mx: 'auto',\r\n    };\r\n    const style: SxStyleProp = {\r\n      color: theme.colors.text.darkGray,\r\n      borderColor: theme.colors.text.darkGray,\r\n      fontSize: theme.fontSizes.bodyBig,\r\n      fontFamily: theme.fonts.body,\r\n      padding: '0.3em',\r\n      zIndex: 2,\r\n      display: 'block',\r\n      margin: 'auto',\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    };\r\n    const results = getSearchResult(query).map((club) => {\r\n      return (\r\n        <div\r\n          sx={style}\r\n          onClick={() => {\r\n            setPopupClub(club);\r\n            setIsPopup(true);\r\n          }}\r\n        >\r\n          {club.name}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return <div sx={wrapperStyle}>{results}</div>;\r\n  };\r\n\r\n  //=================================================\r\n  //background decorations\r\n  const getTransluteRects = () => {\r\n    const getStyle = (i) => {\r\n      const style: SxStyleProp = {\r\n        position: 'absolute',\r\n        height: ['50%', '20%'],\r\n        top: (i + 1) * 200,\r\n        width: ['90%', '70%', `${bgRectWidth.current[i]}%`],\r\n        backgroundColor: theme.colors.background.overlay,\r\n        right: `${0}%`,\r\n        zIndex: 0,\r\n      };\r\n      return style;\r\n    };\r\n\r\n    return Array.from(new Array(Math.floor(height / 250)).keys()).map((i) => {\r\n      if (!bgRectWidth.current[i]) bgRectWidth.current.push(randNum(5, 55));\r\n      return <div sx={getStyle(i)} />;\r\n    });\r\n  };\r\n\r\n  const getTriangleImages = () => {\r\n    const getStyle = (i: number) => {\r\n      const imageUrl = getImageUrl(\r\n        clubHighlights[i % clubHighlights.length].photoId,\r\n        400,\r\n        400,\r\n      );\r\n      const style: SxStyleProp = {\r\n        zIndex: 0,\r\n        backgroundColor: theme.colors.secondary,\r\n        backgroundImage: `url(${imageUrl})`,\r\n        clipPath: bgTriangleProp.current[i].getClipPath(),\r\n        ml: 'auto',\r\n        ...bgTriangleProp.current[i].getStyle(),\r\n        backgroundSize: 'cover',\r\n      };\r\n      return style;\r\n    };\r\n\r\n    const triangles = Array.from(\r\n      new Array(Math.floor(height / 250)).keys(),\r\n    ).map((i) => {\r\n      if (!bgTriangleProp.current[i]) {\r\n        bgTriangleProp.current.push(\r\n          new BgTriangleProp(\r\n            `${randInt(40, 55)}%`,\r\n            0,\r\n            0,\r\n            `${randInt(60, 100)}%`,\r\n            '100%',\r\n            `${randInt(30, 100)}%`,\r\n            {\r\n              width: `${randInt(7, 15)}vmax`,\r\n              height: `${randInt(7, 15)}vmax`,\r\n              mr: `${randInt(20, 50)}%`,\r\n              my: `${randInt(2, 7)}%`,\r\n            },\r\n          ),\r\n        );\r\n      }\r\n      return <div sx={getStyle(i)} />;\r\n    });\r\n\r\n    const wrapper: SxStyleProp = {\r\n      width: ['30%', '40%'],\r\n      top: '40%',\r\n      right: 0,\r\n      position: 'absolute',\r\n      zIndex: 0,\r\n    };\r\n\r\n    return <div sx={wrapper}>{triangles}</div>;\r\n  };\r\n\r\n  const renderClubPopup = () => {\r\n    if (isPopup && popupClub) {\r\n      disallowScrolling(window.scrollY);\r\n      return (\r\n        <ClubPopup\r\n          closeHandler={() => setIsPopup(false)}\r\n          clubInfo={popupClub}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  //=================================================\r\n  //styles\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.background.light,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    ...theme.bodyPadding,\r\n    pb: '20vh',\r\n    overflow: 'hidden',\r\n    flexDirection: ['column', 'row'],\r\n    position: 'relative',\r\n  };\r\n\r\n  const clubListWrapper: SxStyleProp = {\r\n    display: 'block',\r\n    ml: [0, '10%', '30%'],\r\n    zIndex: 2,\r\n    mr: ['50%', 0],\r\n  };\r\n  const lineStyle: SxStyleProp = {\r\n    backgroundColor: theme.colors.secondary,\r\n    height: 2,\r\n    width: '100%',\r\n    borderRadius: 2,\r\n    my: '0.5em',\r\n  };\r\n\r\n  const backgroundImgStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    top: height * 0.4,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    width: '100%',\r\n    height: height * 0.6,\r\n    zIndex: 1,\r\n  };\r\n\r\n  const searchBoxStyle: SxStyleProp = {\r\n    height: '1.3em',\r\n    borderRadius: 15,\r\n    borderColor: theme.colors.navbar,\r\n    borderWidth: 1,\r\n    width: '100%',\r\n    py: '1em',\r\n    px: '0.5em',\r\n    fontSize: theme.fontSizes.bodySmall.map((n) => n + 5),\r\n    fontFamily: theme.fonts.body,\r\n    '&:focus': {\r\n      borderWidth: 1.5,\r\n      outline: 'none',\r\n    },\r\n  };\r\n\r\n  const searchBoxWrapperStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    width: ['100%', '40%', '20%'],\r\n    ml: [0, 'auto'],\r\n    mt: ['2em', 'auto'],\r\n    mb: ['1em', 'auto'],\r\n    fontSize: theme.fontSizes.bodySmall.map((n) => n + 5),\r\n  };\r\n  const iconStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    right: '0.5em',\r\n    top: '0.5em',\r\n  };\r\n\r\n  const headingStyle: SxStyleProp = {\r\n    display: 'inline',\r\n    mt: ['20%', 'auto'],\r\n    mb: [0, 'auto'],\r\n  };\r\n\r\n  //==============================================================\r\n  //render\r\n\r\n  const isFirstBreakpoint = window.innerWidth > FIRST_BREAKPOINT;\r\n\r\n  return (\r\n    <div sx={wrapperStyle} ref={pageRef}>\r\n      <img src={clubBackground} sx={backgroundImgStyle} />\r\n      {getTransluteRects()}\r\n\r\n      <Heading\r\n        text=\"Clubs\"\r\n        alignment={isFirstBreakpoint ? 'left' : 'center'}\r\n        underline={false}\r\n        extraStyling={headingStyle}\r\n      />\r\n\r\n      <div sx={searchBoxWrapperStyle}>\r\n        <input\r\n          sx={searchBoxStyle}\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Club name\"\r\n        />\r\n        {query === '' ? (\r\n          <BsSearch sx={iconStyle} />\r\n        ) : (\r\n          <FaTimes sx={iconStyle} onClick={() => setQuery('')} />\r\n        )}\r\n      </div>\r\n\r\n      <div sx={lineStyle} />\r\n      {query === '' ? (\r\n        <div sx={clubListWrapper}>{getClubList()}</div>\r\n      ) : (\r\n        displaySearchResults()\r\n      )}\r\n\r\n      {isFirstBreakpoint ? getTriangleImages() : undefined}\r\n\r\n      {renderClubPopup()}\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useState} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n// while it's under construction\r\nimport {FaWrench} from 'react-icons/fa';\r\n\r\nimport {spin} from '../utils/animation';\r\nimport {theme} from '../utils/theme';\r\n\r\nexport interface CalendarProps {}\r\n\r\nexport const Calendar: React.FC<CalendarProps> = () => {\r\n  const [spinAmount, setSpinAmount] = useState(1);\r\n\r\n  // Styles for the page\r\n  const wrapperStyle: SxStyleProp = {\r\n    // the main page div\r\n\r\n    width: '100%',\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.background.dark,\r\n  };\r\n  const innerWrapperStyle: SxStyleProp = {\r\n    // the div that contains everything\r\n\r\n    top: '20vh',\r\n    position: 'relative',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    pb: '14em',\r\n\r\n    textAlign: 'center',\r\n  };\r\n  const iframeContainerStyle: SxStyleProp = {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (spinAmount < 9) {\r\n      setSpinAmount(spinAmount + 1);\r\n    }\r\n  };\r\n\r\n  const renderSpannerImage = () => {\r\n    return (\r\n      <FaWrench\r\n        size={50}\r\n        sx={{\r\n          position: 'relative',\r\n          maxWidth: [25, 50],\r\n          mb: '2%',\r\n          color: theme.colors.text.light,\r\n          '@keyframes spin': spin,\r\n\r\n          animation:\r\n            spinAmount === 0\r\n              ? 'none'\r\n              : 'spin ' +\r\n                (2.2 - 0.2 * spinAmount).toString() +\r\n                's linear infinite',\r\n        }}\r\n        onClick={handleClick}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <div sx={innerWrapperStyle}>\r\n        <div sx={iframeContainerStyle}>\r\n          <iframe\r\n            src=\"https://calendar.google.com/calendar/embed?height=600&wkst=1&bgcolor=%23FFFFFF&src=gapps.yrdsb.ca_3kml71rdv1af34phpclvo9ps50%40group.calendar.google.com&color=%23333333&ctz=America%2FToronto\"\r\n            width=\"80%\"\r\n            height=\"600px\"\r\n          ></iframe>\r\n          <div\r\n            sx={{\r\n              mt: '5%',\r\n              mx: 'auto',\r\n              width: '90%',\r\n            }}\r\n          >\r\n            {renderSpannerImage()}\r\n          </div>\r\n          <p\r\n            sx={{\r\n              fontFamily: theme.fonts.body,\r\n              fontSize: theme.fontSizes.body,\r\n              color: theme.colors.text.light,\r\n            }}\r\n          >\r\n            A more lively calendar is under development! For now, though, enjoy\r\n            this embedded one! (should be good enough for before school...)\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useContext, useState} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {LoadingSquare} from '../components/LoaderComponents';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {LabelledPhotos} from '../utils/interfaces';\r\nimport {InfoContext, IInfoContext} from '../utils/contexts';\r\n\r\nexport const Map: React.FC = () => {\r\n  const [loadingFirstImage, setLoadingFirstImage] = useState<boolean>(true);\r\n  const [loadingSecondImage, setLoadingSecondImage] = useState<boolean>(true);\r\n\r\n  const allLabelledPhotos: LabelledPhotos[] = useContext<IInfoContext>(\r\n    InfoContext,\r\n  ).labelledPhotos;\r\n\r\n  // filter out and find the first and second floor photo\r\n  const firstFloorPhoto = `https://drive.google.com/uc?export=view&id=${\r\n    allLabelledPhotos.find((a) => a.photoLabel === 'School First Floor').photoId\r\n  }`;\r\n  const secondFloorPhoto = `https://drive.google.com/uc?export=view&id=${\r\n    allLabelledPhotos.find((a) => a.photoLabel === 'School Second Floor')\r\n      .photoId\r\n  }`;\r\n\r\n  // styles\r\n  const backgroundStyle: SxStyleProp = {\r\n    backgroundColor: theme.colors.background.dark,\r\n    width: '100%',\r\n    minHeight: '100vh',\r\n    textAlign: 'center',\r\n  };\r\n  const divStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    top: '10vh',\r\n    width: '100%',\r\n\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n  };\r\n  const imageDivStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    // push image up\r\n    mt: '10%',\r\n\r\n    // center the image\r\n    ml: 'auto',\r\n    mr: 'auto',\r\n\r\n    // change this if the image should be a diff size\r\n    width: '95%',\r\n    height: 'auto',\r\n  };\r\n  const imageStyle: SxStyleProp = {\r\n    width: '100%',\r\n    // leave this to preserve aspect ratio\r\n    height: 'auto',\r\n  };\r\n\r\n  /**\r\n   * Handles an image loading by setting the specified isLoading\r\n   * function to false.\r\n   * @param setLoadingFunction - The React setState function to be called\r\n   * once a load event occurs.\r\n   */\r\n  const handleLoad = (\r\n    setLoadingFunction: React.Dispatch<React.SetStateAction<boolean>>,\r\n  ) => {\r\n    setLoadingFunction(false);\r\n  };\r\n\r\n  return (\r\n    <div sx={backgroundStyle}>\r\n      <div sx={divStyle}>\r\n        <div sx={imageDivStyle}>\r\n          {loadingFirstImage ? (\r\n            <LoadingSquare isTransparent={true} />\r\n          ) : undefined}\r\n          <img\r\n            src={firstFloorPhoto}\r\n            alt=\"The school's first floor.\"\r\n            sx={imageStyle}\r\n            onLoad={() => handleLoad(setLoadingFirstImage)}\r\n          />\r\n        </div>\r\n\r\n        {/* mb to push up footer */}\r\n        <div sx={{...imageDivStyle, mb: ['8em', '14em']}}>\r\n          {loadingSecondImage ? (\r\n            <LoadingSquare isTransparent={true} />\r\n          ) : undefined}\r\n          <img\r\n            src={secondFloorPhoto}\r\n            alt=\"The school's second floor.\"\r\n            sx={imageStyle}\r\n            onLoad={() => handleLoad(setLoadingSecondImage)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useRef,\r\n  ReactElement,\r\n} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {getImageUrl} from '../utils/functions';\r\n\r\nexport interface ViewerPhotoProps {\r\n  photoId: string;\r\n  loadHandler: () => void;\r\n  // With the new provided dimensions, it is now easier to get\r\n  // the orientation of the current photo by simply comparing the\r\n  // original dimensions.\r\n  /** The original dimensions of the photo. These dimensions must be present. */\r\n  originalDimensions: {width: number; height: number};\r\n}\r\n\r\n//=====================================================================\r\n// ViewerPhoto is for the main big photo in the PhotoViewer.\r\nexport const ViewerPhoto: React.FC<ViewerPhotoProps> = ({\r\n  photoId,\r\n  loadHandler,\r\n  originalDimensions,\r\n}): ReactElement => {\r\n  const [mainImageLimit, setMainImageLimit] = useState<number>(0);\r\n  const [orientation, setOrientation] = useState<string>(null);\r\n  const mainImageRefDiv = useRef<HTMLDivElement>(null);\r\n\r\n  // Determine the orientation of the photo at the get go to cut\r\n  // down on rerenders and loading wrong images\r\n  /**\r\n   * Determines the orientation of the current photo.\r\n   */\r\n  const determineOrientation = useCallback((): void => {\r\n    const h = originalDimensions.height;\r\n    const w = originalDimensions.width;\r\n\r\n    h > w ? setOrientation('portrait') : setOrientation('landscape');\r\n  }, [originalDimensions]);\r\n\r\n  useEffect(() => {\r\n    determineOrientation();\r\n  }, [photoId, determineOrientation]);\r\n\r\n  useEffect(() => {\r\n    if (!mainImageRefDiv.current) return;\r\n\r\n    // Adjusting the image size when fetched based on orientation of image\r\n    if (!orientation || orientation === 'portrait') {\r\n      setMainImageLimit(\r\n        Math.round(mainImageRefDiv.current.getBoundingClientRect().width),\r\n      );\r\n    } else {\r\n      setMainImageLimit(\r\n        Math.round(mainImageRefDiv.current.getBoundingClientRect().height),\r\n      );\r\n    }\r\n  }, [mainImageRefDiv, orientation]);\r\n\r\n  // Fun styles --\r\n  const mainImageContainerStyle: SxStyleProp = {\r\n    // positioning\r\n    position: 'relative',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n\r\n    mx: 'auto',\r\n    zIndex: 15, // to draw over the overlay\r\n\r\n    // adjusting the size\r\n    width: orientation === 'landscape' ? '80%' : '35%',\r\n    height: '100%',\r\n\r\n    '@media only screen and (max-width: 800px)': {\r\n      height: orientation === 'landscape' ? '35%' : '75%',\r\n      width: '100%',\r\n      margin: 'auto',\r\n    },\r\n  };\r\n  const mainImageStyle: SxStyleProp = {\r\n    // positioning\r\n    objectFit: 'cover',\r\n    width: '100%',\r\n    height: '100%',\r\n\r\n    // to center the image\r\n    ml: 'auto',\r\n    mr: 'auto',\r\n    mt: 'auto',\r\n    mb: 'auto',\r\n\r\n    // small fade animation while hovering\r\n    transition: '.5s ease',\r\n    '&:hover': {\r\n      opacity: 0.9,\r\n    },\r\n  };\r\n\r\n  // Functions --\r\n  /**\r\n   * Fetches and returns a url to a specified drive photo with\r\n   * formatted width and height. The exact dimensions of the photo\r\n   * fetched are dependant on the orientation of said photo.\r\n   * @param photoId - the drive id for the photo.\r\n   * @returns a url to the specified photo.\r\n   */\r\n  const fetchMainImageUrl = (photoId: string): string => {\r\n    return orientation === 'landscape'\r\n      ? getImageUrl(photoId, 5000, mainImageLimit)\r\n      : getImageUrl(photoId, mainImageLimit, 5000);\r\n  };\r\n\r\n  /**\r\n   * Performs the various loading functions that are related to\r\n   * this image loading.\r\n   */\r\n  const performLoadActivities = (): void => {\r\n    loadHandler();\r\n  };\r\n\r\n  // Returning the viewer code --\r\n  return (\r\n    <div sx={mainImageContainerStyle} ref={mainImageRefDiv}>\r\n      <img\r\n        id=\"main-photo\"\r\n        src={fetchMainImageUrl(photoId)}\r\n        alt=\"\"\r\n        sx={mainImageStyle}\r\n        onLoad={performLoadActivities}\r\n        onError={() => {\r\n          console.log('failed to load main image');\r\n          loadHandler();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\n\r\nexport interface ViewerButtonProps {\r\n  /** Image source, supports either an URL or a ReactElement (usually a react-icon) */\r\n  imageSrc: string | ReactElement;\r\n  actionHandler: () => void;\r\n  extraButtonStyling?: SxStyleProp;\r\n}\r\n\r\n// ViewerButton is for the... buttons that are in the viewer. (wow)\r\nexport const ViewerButton: React.FC<ViewerButtonProps> = ({\r\n  imageSrc,\r\n  actionHandler,\r\n  extraButtonStyling,\r\n}): ReactElement => {\r\n  const buttonContainerStyle: SxStyleProp = {\r\n    position: 'relative',\r\n\r\n    mx: '3%',\r\n\r\n    width: ['50px', '45px', '50px', '55px'],\r\n    height: ['50px', '45px', '50px', '55px'],\r\n\r\n    borderRadius: '50%',\r\n\r\n    backgroundColor: theme.colors.background.darkest,\r\n    color: theme.colors.text.light,\r\n    zIndex: 15, // draw buttons on top of overlay\r\n\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n\r\n    // If imgsrc is a string it can simply be used as background image\r\n    backgroundImage:\r\n      typeof imageSrc === 'string' ? 'url(' + imageSrc + ')' : 'none',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n\r\n    // small fade animation while hovering\r\n    transition: 'transform .2s, .5s ease',\r\n    '&:hover': {\r\n      transform: 'scale(1.2)',\r\n      cursor: 'pointer',\r\n      opacity: 0.8,\r\n    },\r\n\r\n    ...extraButtonStyling,\r\n  };\r\n\r\n  return (\r\n    <div sx={buttonContainerStyle} onClick={actionHandler}>\r\n      {!(typeof imageSrc === 'string') ? imageSrc : undefined}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport {theme} from '../utils/theme';\n\nimport Loader from 'react-loader-spinner';\n\nexport interface CircleSpinnerProps {\n  width?: number;\n  height?: number;\n  color?: string;\n}\n\n// yes shari i decided to import a library just for spinners\nexport const CircleSpinner: React.FC<CircleSpinnerProps> = ({\n  width,\n  height,\n  color,\n}) => {\n  return (\n    <Loader\n      type=\"TailSpin\"\n      color={color ? color : theme.colors.secondary}\n      width={width}\n      height={height}\n    />\n  );\n};\n","/** @jsx jsx */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  ReactElement,\r\n  useCallback,\r\n} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {FaTimes, FaArrowRight, FaArrowLeft} from 'react-icons/fa';\r\n\r\nimport {ViewerPhoto} from './ViewerPhoto';\r\nimport {ViewerButton} from './ViewerButton';\r\nimport {CircleSpinner} from './CircleSpinner';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {\r\n  getImageUrl,\r\n  detectSwipeDirection,\r\n  allowScrolling,\r\n} from '../utils/functions';\r\n// todo: minor, but make naming consistant i guess\r\nimport {Photo as PhotoInfo} from '../utils/interfaces';\r\n\r\n// yes shari since this function was messy i tried out a new\r\n// commenting style\r\n\r\n// Interfaces --\r\nexport interface Photo {\r\n  photoUrl: string;\r\n  photoNum: number;\r\n\r\n  /** The photo dimensions provided in the spreadsheet. */\r\n  originalPhotoDimensions?: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n\r\n  /** The new requested dimensions for this photo. */\r\n  newPhotoDimensions?: {\r\n    width: number;\r\n    height: number;\r\n  };\r\n}\r\n\r\nexport interface PhotoViewerProps {\r\n  photos: PhotoInfo[];\r\n  startIndex: number;\r\n  closeHandler: () => void;\r\n}\r\n\r\n//=====================================================================\r\n// PhotoViewer is a gallery viewer of photos. Resolutions of photos\r\n// with the same orientation are the same.\r\nconst PhotoViewer: React.FC<PhotoViewerProps> = ({\r\n  photos,\r\n  startIndex,\r\n  closeHandler,\r\n}): ReactElement => {\r\n  //-------------------------------------------------------------------\r\n  // React Hook Initialization --\r\n  //-------------------------------------------------------------------\r\n  const [index, setIndex] = useState<number>(startIndex);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [overlayWidth, setOverlayWidth] = useState<number>(0);\r\n  const overlayReferenceDiv = useRef<HTMLDivElement>(null);\r\n\r\n  const xTouchLoc = useRef<number>(-1);\r\n  const yTouchLoc = useRef<number>(-1);\r\n\r\n  // Setting up overlay width for proper background image sizing\r\n  useEffect(() => {\r\n    if (!overlayReferenceDiv.current) return;\r\n\r\n    setOverlayWidth(\r\n      Math.round(\r\n        overlayReferenceDiv.current.getBoundingClientRect().width + 1000,\r\n      ),\r\n    );\r\n  }, [overlayReferenceDiv]);\r\n\r\n  /**\r\n   * Increases the current image index.\r\n   */\r\n  const incrementIdx = useCallback(() => {\r\n    setIndex((index + 1) % photos.length);\r\n\r\n    setLoading(true);\r\n  }, [photos, index]);\r\n\r\n  /**\r\n   * Decreases the current image index.\r\n   */\r\n  const decrementIdx = useCallback(() => {\r\n    setIndex(index - 1 < 0 ? photos.length - 1 : index - 1);\r\n\r\n    setLoading(true);\r\n  }, [photos, index]);\r\n\r\n  /**\r\n   * Handles this viewer's cleanup functions, like re-enabling scrolling\r\n   * and closing the viewer.\r\n   */\r\n  const handleClosing = useCallback((): void => {\r\n    allowScrolling();\r\n    closeHandler();\r\n  }, [closeHandler]);\r\n\r\n  // A memoized callback function to interact with keyboard\r\n  // functionality -- only needs to be created once.\r\n  /**\r\n   * Determines the action to be taken depending on what key was pressed.\r\n   * @param event - The event object emitted upon keyDown.\r\n   */\r\n  const reactToKeystrokes = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      switch (event.keyCode) {\r\n        case 27: // esc key\r\n          handleClosing();\r\n          break;\r\n        case 39: // right arrow key\r\n          incrementIdx();\r\n          break;\r\n        case 37: // left arrow key\r\n          decrementIdx();\r\n          break;\r\n      }\r\n    },\r\n    [handleClosing, incrementIdx, decrementIdx],\r\n  );\r\n\r\n  /**\r\n   * Handles touchstart events for devices, and determines whether\r\n   * to later react to this event or not.\r\n   */\r\n  const initializeTouch = useCallback((event: TouchEvent) => {\r\n    const touchLocations = event.touches;\r\n\r\n    if (touchLocations.length === 1 && touchLocations[0]) {\r\n      // If the tap starts at the picture, just ignore.\r\n      // (for adjusting zoom level, perhaps).\r\n      if ((event.target as Element).id != 'main-photo') {\r\n        xTouchLoc.current = touchLocations[0].clientX;\r\n        yTouchLoc.current = touchLocations[0].clientY;\r\n      }\r\n\r\n      /* \r\n    If you put a second finger down, there will be a very small\r\n    amount of time where an event with only one touch property \r\n    propegates before the proper 2 touch property event propegates,\r\n    and that can cause unwanted scrolling/shuffling.\r\n\r\n    We solve this by simply listening to any events with more than\r\n    one touch event, and reset the x and y location if we detect any.\r\n    Now we know that any touch events that pass these checks are\r\n    from a single finger.\r\n    */\r\n    } else if (touchLocations.length > 1) {\r\n      xTouchLoc.current = -1;\r\n      yTouchLoc.current = -1;\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Handles a touchend event, implying that a swipe has occured.\r\n   * Reacts to said swipe and performs any tasks as a result from that\r\n   * swipe.\r\n   */\r\n  const reactToSwipe = useCallback(\r\n    (event: TouchEvent) => {\r\n      // Make sure we are actually supposed to react to this event.\r\n      if (xTouchLoc.current === -1 || yTouchLoc.current === -1) return;\r\n\r\n      const xOld = xTouchLoc.current;\r\n      const yOld = yTouchLoc.current;\r\n      // Reset location\r\n      xTouchLoc.current = -1;\r\n      yTouchLoc.current = -1;\r\n\r\n      // If this doesn't exist, do nothing.\r\n      if (!event.changedTouches[0]) return;\r\n\r\n      const xMove = event.changedTouches[0].clientX;\r\n      const yMove = event.changedTouches[0].clientY;\r\n\r\n      switch (detectSwipeDirection({x: xOld, y: yOld}, {x: xMove, y: yMove})) {\r\n        case 'down': // swipe down == going up\r\n          decrementIdx();\r\n          break;\r\n        case 'up': // swipe up == going down\r\n          incrementIdx();\r\n          break;\r\n      }\r\n    },\r\n    [decrementIdx, incrementIdx],\r\n  );\r\n\r\n  // Setting up keyboard functionality\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', reactToKeystrokes, false);\r\n    document.addEventListener('touchstart', initializeTouch, false);\r\n    document.addEventListener('touchend', reactToSwipe, false);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', reactToKeystrokes, false);\r\n      document.removeEventListener('touchstart', initializeTouch, false);\r\n      document.removeEventListener('touchend', reactToSwipe, false);\r\n    };\r\n  }, [reactToKeystrokes, initializeTouch, reactToSwipe]);\r\n\r\n  //-------------------------------------------------------------------\r\n  // Functions --\r\n  //-------------------------------------------------------------------\r\n  /**\r\n   * Generates a larger version of the specified image, usable as a full\r\n   * page background.\r\n   * @param photoId - the drive id of the photo.\r\n   * @returns a url to the enlarged photo.\r\n   */\r\n  const fetchOverlayImageUrl = (photoId: string): string => {\r\n    return getImageUrl(photoId, overlayWidth, 5000);\r\n  };\r\n\r\n  /**\r\n   * Determines if this viewer's loading state should be changed\r\n   * or not, based on if all the images loaded or not.\r\n   */\r\n  const handleLoadingState = (): void => {\r\n    if (checkIfImagesLoaded(overlayReferenceDiv.current)) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles when the overlay loads.\r\n   */\r\n  const handleOverlayLoadingState = (): void => {\r\n    handleLoadingState();\r\n  };\r\n\r\n  /**\r\n   * Checks a provided html div's img children and sees if they loaded\r\n   * in or not.\r\n   * @param refDiv - the html div that contains all the imgs\r\n   * @returns true if all the imgs have loaded, false otherwise.\r\n   */\r\n  const checkIfImagesLoaded = (refDiv: HTMLDivElement): boolean => {\r\n    const imgElements = refDiv.querySelectorAll('img');\r\n\r\n    for (const img of imgElements) {\r\n      if (!img.complete) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Renders an X button intended for exiting the viewer.\r\n   * @returns an X button which exits the viewer upon click.\r\n   */\r\n  const renderExitButton = (): ReactElement => {\r\n    const buttonStyling: SxStyleProp = {\r\n      position: 'absolute',\r\n      top: '5%',\r\n      right: '3%',\r\n      mx: '0%',\r\n\r\n      '@media only screen and (max-width: 800px)': {\r\n        transform: 'rotate(720deg)', // extremely very important :)))\r\n        right: '5%',\r\n      },\r\n    };\r\n    return (\r\n      <ViewerButton\r\n        imageSrc={<FaTimes sx={arrowStyle} />}\r\n        actionHandler={handleClosing}\r\n        extraButtonStyling={buttonStyling}\r\n      />\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Renders a spinner if the images are currently loading in.\r\n   * @returns a circle spinner if images are loading, nothing otherwise.\r\n   */\r\n  const renderSpinner = (): ReactElement | void => {\r\n    if (loading) {\r\n      return (\r\n        <div\r\n          sx={{\r\n            position: 'relative',\r\n            height: '100vh',\r\n            width: '100vw',\r\n            display: 'flex',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            zIndex: 20, // big big index to overlay over everything\r\n          }}\r\n        >\r\n          <div sx={{display: 'inline-block', mx: 'auto'}}>\r\n            <CircleSpinner />\r\n          </div>\r\n          {renderExitButton()}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------------\r\n  // Styles for the components --\r\n  //-------------------------------------------------------------------\r\n  const overlayStyle: SxStyleProp = {\r\n    // for the actual picture in the overlay\r\n\r\n    objectFit: 'cover',\r\n    opacity: '0.9',\r\n    height: '100%',\r\n    width: '100%',\r\n\r\n    display: loading ? 'none' : 'block',\r\n\r\n    // blur the image (note: edge and ie will die, but who cares lmao)\r\n    filter: 'blur(8px) brightness(0.5)',\r\n  };\r\n  const overlayContainerStyle: SxStyleProp = {\r\n    // the div containing the overlay picture\r\n\r\n    position: 'fixed',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 12, // make this higher priority than main wrapper\r\n\r\n    backgroundColor: theme.colors.background.black,\r\n  };\r\n  const mainWrapperStyle: SxStyleProp = {\r\n    // the main wrapper for everything in this viewer\r\n\r\n    position: 'fixed',\r\n    height: '100vh',\r\n    width: '100vw',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    zIndex: 11, // cause nav is 10 :/\r\n\r\n    textAlign: 'center',\r\n\r\n    overscrollBehavior: 'contain',\r\n  };\r\n  const contentWrapperStyle: SxStyleProp = {\r\n    // The wrapper for all the interactable things in this viewer\r\n\r\n    position: 'relative',\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    textAlign: 'center',\r\n    alignItems: 'center',\r\n\r\n    '@media only screen and (max-width: 800px)': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  };\r\n  const arrowStyle: SxStyleProp = {\r\n    margin: 'auto',\r\n    padding: '2.5px',\r\n    width: ['35px', '30px', '35px', '40px'],\r\n    height: ['35px', '30px', '35px', '40px'],\r\n  };\r\n  const bothButtonStyle: SxStyleProp = {\r\n    // rotate to look like an up or down arrow\r\n    transform: 'rotate(90deg)',\r\n    position: 'fixed',\r\n    mx: 'auto',\r\n\r\n    // Overwrite previous hover code to keep consistant rotation\r\n    '&:hover': {\r\n      transform: 'rotate(90deg) scale(1.2)',\r\n      cursor: 'pointer',\r\n      opacity: 0.8,\r\n    },\r\n  };\r\n  const leftButtonStyle: SxStyleProp = {\r\n    '@media only screen and (max-width: 800px)': {\r\n      top: '5%',\r\n\r\n      ...bothButtonStyle,\r\n    },\r\n  };\r\n  const rightButtonStyle: SxStyleProp = {\r\n    '@media only screen and (max-width: 800px)': {\r\n      bottom: '5%',\r\n\r\n      ...bothButtonStyle,\r\n    },\r\n  };\r\n\r\n  //-------------------------------------------------------------------\r\n  // The actual viewer code --\r\n  //-------------------------------------------------------------------\r\n  return (\r\n    // the wrapper that wraps everything\r\n    <div sx={mainWrapperStyle} ref={overlayReferenceDiv}>\r\n      {/* the overlay */}\r\n      <div sx={overlayContainerStyle} onClick={handleClosing}>\r\n        <img\r\n          src={fetchOverlayImageUrl(photos[index].photoId)}\r\n          alt=\"\"\r\n          sx={overlayStyle}\r\n          onLoad={handleOverlayLoadingState}\r\n          onError={() => {\r\n            console.log('failed to load overlay');\r\n            handleLoadingState();\r\n          }}\r\n        />\r\n      </div>\r\n      {/* drawing the spinner if images don't load */}\r\n      {renderSpinner()}\r\n      {/* the content wrapper */}\r\n      <div sx={contentWrapperStyle}>\r\n        <ViewerButton\r\n          imageSrc={<FaArrowLeft sx={arrowStyle} />}\r\n          actionHandler={decrementIdx}\r\n          extraButtonStyling={leftButtonStyle}\r\n        />\r\n\r\n        <ViewerPhoto\r\n          photoId={photos[index].photoId}\r\n          loadHandler={handleLoadingState}\r\n          originalDimensions={{\r\n            width: parseInt(photos[index].width),\r\n            height: parseInt(photos[index].height),\r\n          }}\r\n        />\r\n\r\n        <ViewerButton\r\n          imageSrc={<FaArrowRight sx={arrowStyle} />}\r\n          actionHandler={incrementIdx}\r\n          extraButtonStyling={rightButtonStyle}\r\n        />\r\n\r\n        {renderExitButton()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoViewer;\r\n","/** @jsx jsx */\r\nimport React, {\r\n  useContext,\r\n  useRef,\r\n  useEffect,\r\n  useState,\r\n  ReactElement,\r\n} from 'react';\r\nimport {jsx, SxStyleProp, Flex} from 'theme-ui';\r\n\r\nimport {Heading} from '../components/Heading';\r\nimport PhotoViewer, {Photo} from '../components/PhotoViewer';\r\nimport {CircleSpinner} from '../components/CircleSpinner';\r\n\r\nimport {theme} from '../utils/theme';\r\nimport {IInfoContext, InfoContext} from '../utils/contexts';\r\nimport {getImageUrl, splitArray, disallowScrolling} from '../utils/functions';\r\n// todo: minor, but make naming consistant i guess\r\nimport {Photo as PhotoInfo} from '../utils/interfaces';\r\n\r\n// note: all the images are in their widthScale:heightScale ratio\r\n/** The width scale for the column photo width. */\r\nconst widthScale: number = 1;\r\n/** The height scale for the column photo height. */\r\nconst heightScale: number = 1.25;\r\n\r\n// Interfaces --\r\nexport interface GalleryPhotoProps {\r\n  photo: Photo;\r\n  initializeDisplay: (index: number) => void;\r\n  extraPhotoStyle?: SxStyleProp;\r\n}\r\n\r\n//=====================================================================\r\n// GalleryPhoto element handles the actual img element.\r\n// this assumes that each img will be placed in an appropriately sized\r\n// div or element\r\nexport const GalleryPhoto: React.FC<GalleryPhotoProps> = ({\r\n  photo,\r\n  initializeDisplay,\r\n  extraPhotoStyle,\r\n}): ReactElement => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  // Styles --\r\n  const photoStyle: SxStyleProp = {\r\n    maxWidth: '100%',\r\n    mx: 'auto',\r\n    objectFit: 'cover',\r\n    width: photo.newPhotoDimensions.width,\r\n    height: photo.newPhotoDimensions.height,\r\n\r\n    display: loading ? 'none' : 'block',\r\n\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  };\r\n\r\n  // Functions --\r\n  /**\r\n   * Does the cleanup once the image is loaded.\r\n   */\r\n  const finishLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  /**\r\n   * Initializes the photo viewer.\r\n   */\r\n  const displayViewer = (): void => {\r\n    initializeDisplay(photo.photoNum);\r\n  };\r\n\r\n  /**\r\n   * Performs specified click actions upon a click event. This includes\r\n   * disabling the scrolling and displaying the viewer.\r\n   */\r\n  const handleClickEvent = () => {\r\n    disallowScrolling(window.scrollY);\r\n    displayViewer();\r\n  };\r\n\r\n  /**\r\n   * Returns a formatted loading spinner\r\n   */\r\n  const displayLoadSpinner = (): ReactElement | void => {\r\n    if (loading) {\r\n      return (\r\n        <div sx={{display: 'inline-block', my: '50%'}}>\r\n          <CircleSpinner />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {displayLoadSpinner()}\r\n      <img\r\n        src={photo.photoUrl}\r\n        alt=\"\"\r\n        onClick={handleClickEvent}\r\n        onLoad={finishLoading}\r\n        sx={{...photoStyle, ...extraPhotoStyle}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Gallery element -- displays the actual gallery page\r\nexport const Gallery: React.FC = (): ReactElement => {\r\n  const galleryPhotos: PhotoInfo[] = useContext<IInfoContext>(InfoContext)\r\n    .gallery;\r\n\r\n  // the width and height are both used for the column photos\r\n  const [width, setWidth] = useState<number>(0);\r\n  const [height, setHeight] = useState<number>(0);\r\n  /** Used to find the size for the column photos. */\r\n  const referenceDiv = useRef<HTMLDivElement>(null);\r\n  const [viewIndex, setViewIndex] = useState<number>(0);\r\n  const [showViewer, setShowViewer] = useState<boolean>(false);\r\n\r\n  // Set width and height to the left column's width\r\n  useEffect(() => {\r\n    if (!referenceDiv.current) return;\r\n\r\n    setWidth(\r\n      Math.round(\r\n        referenceDiv.current.getBoundingClientRect().width * widthScale,\r\n      ),\r\n    );\r\n    setHeight(\r\n      Math.round(\r\n        referenceDiv.current.getBoundingClientRect().width * heightScale,\r\n      ),\r\n    );\r\n  }, [referenceDiv]);\r\n\r\n  /*\r\n  yes shari, this long explanation is definitely necessary\r\n\r\n  We take the galleryPhotos in PhotoInfo interface format and convert\r\n  each array of 'photos' into our custom Photo interface, which\r\n  contains a proper url, number, and both original and requested\r\n  dimensions for future use.\r\n\r\n  Consecutive pictures are ordered column down, so if we had 9\r\n  images, the order would become:\r\n    1 4 7\r\n    2 5 8\r\n    3 6 9\r\n  but that shouldn't matter because gallery should really only have a\r\n  random assortment of images anyways, so we don't need to preserve\r\n  order... right?\r\n\r\n  We use galleryPhotos as all photos, as we need the id for the\r\n  photo to get resized version.\r\n  //TODO: maybe we can provide photoViewer the resized images...\r\n  */\r\n  let currentImageNumber = -1; // this seems scuffed\r\n  const [leftPhotos, centerPhotos, rightPhotos]: Photo[][] = splitArray<\r\n    PhotoInfo\r\n  >(galleryPhotos, 3).map((photoGroup) => {\r\n    return photoGroup.map((photo) => {\r\n      currentImageNumber++;\r\n      return {\r\n        photoUrl: getImageUrl(photo.photoId, 1000, height),\r\n        photoNum: currentImageNumber,\r\n        originalPhotoDimensions: {\r\n          width: parseInt(photo.width),\r\n          height: parseInt(photo.height),\r\n        },\r\n        newPhotoDimensions: {\r\n          width: width,\r\n          height: height,\r\n        },\r\n      };\r\n    });\r\n  });\r\n\r\n  // Styles related to the photos and the galleries --\r\n  const extraPhotoStyle: SxStyleProp = {};\r\n  const photoColumnContainerStyle: SxStyleProp = {\r\n    '@media only screen and (max-width: 500px)': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      textAlign: 'center',\r\n    },\r\n  };\r\n  const allGalleryStyle: SxStyleProp = {\r\n    textAlign: 'center',\r\n    maxWidth: '32%',\r\n    width: '32%',\r\n    position: 'relative',\r\n\r\n    // Pushing away the footer\r\n    mb: '5em',\r\n\r\n    '@media only screen and (max-width: 500px)': {\r\n      width: '95%',\r\n      maxWidth: '95%',\r\n\r\n      my: 0,\r\n      left: 'auto',\r\n      right: 'auto',\r\n      mx: 'auto',\r\n    },\r\n  };\r\n  const leftGalleryStyle: SxStyleProp = {\r\n    left: '2%',\r\n\r\n    ml: 0,\r\n    mr: 'auto',\r\n  };\r\n  const rightGalleryStyle: SxStyleProp = {\r\n    right: '2%',\r\n\r\n    mr: 0,\r\n    ml: 'auto',\r\n  };\r\n  const centerGalleryStyle: SxStyleProp = {\r\n    position: 'relative',\r\n    mt: '-5em',\r\n  };\r\n\r\n  /**\r\n   * Retrieves a column of photos and returns the formatted column.\r\n   * @param photoColumn - the list of photos in this column.\r\n   * @param extraPhotoStyle - any extra styling for the\r\n   * photos in this column.\r\n   * @returns the formatted column of photos.\r\n   */\r\n  const getGalleryColumn = (\r\n    photoColumn: Photo[],\r\n    extraPhotoStyle: SxStyleProp,\r\n  ): ReactElement[] => {\r\n    if (!photoColumn) return [<div key=\"0\"></div>];\r\n\r\n    const photoContainerStyle: SxStyleProp = {\r\n      // Space the images\r\n      mb: '5%',\r\n      width: '100%',\r\n\r\n      // fade and move animations here so both border and image have it\r\n      transition: 'transform .2s, .2s ease',\r\n      '&:hover': {\r\n        transform: 'scale(1.02)',\r\n        opacity: 0.6,\r\n        cursor: 'pointer',\r\n      },\r\n    };\r\n\r\n    return photoColumn.map((photo) => {\r\n      return (\r\n        <div sx={photoContainerStyle} key={photo.photoNum}>\r\n          <GalleryPhoto\r\n            photo={photo}\r\n            extraPhotoStyle={extraPhotoStyle}\r\n            initializeDisplay={startDisplay}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  // Functions regarding the displaying of the photo viewer --\r\n  /**\r\n   * Initializes the photo viewer.\r\n   * @param startIndex - the photo index which the viewer should begin at.\r\n   */\r\n  const startDisplay = (startIndex: number) => {\r\n    setViewIndex(startIndex);\r\n\r\n    toggleViewer();\r\n  };\r\n\r\n  /**\r\n   * Toggles the show viewer state on or off.\r\n   */\r\n  const toggleViewer = () => {\r\n    setShowViewer(!showViewer);\r\n  };\r\n\r\n  /**\r\n   * Actually displays the photo viewer, if it should be shown.\r\n   * @returns the photo viewer at the right image if it should be shown,\r\n   * or nothing otherwise.\r\n   */\r\n  const displayViewer = (): ReactElement | void => {\r\n    if (showViewer) {\r\n      return (\r\n        <PhotoViewer\r\n          photos={galleryPhotos}\r\n          startIndex={viewIndex}\r\n          closeHandler={toggleViewer}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  // The rest of the custom styles needed for this page --\r\n  const wrapperStyle: SxStyleProp = {\r\n    // the main page div\r\n\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.background.light,\r\n  };\r\n  const innerWrapperStyle: SxStyleProp = {\r\n    // the div that contains everything\r\n\r\n    top: '20vh',\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    px: '5%',\r\n    mb: '14em', // pushing away the footer\r\n  };\r\n  const headingWrapperStyle: SxStyleProp = {\r\n    // the header div\r\n\r\n    maxWidth: '90%', // to make sure the page doesn't scroll to the right\r\n    position: 'relative',\r\n    mb: '8em',\r\n  };\r\n\r\n  // Returning the formatted page\r\n  // yes shari i know even more grid classnames but its finee\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      {displayViewer()}\r\n      <div sx={innerWrapperStyle}>\r\n        <div sx={headingWrapperStyle}>\r\n          <Heading text=\"Gallery\" alignment=\"left\" />\r\n        </div>\r\n        {/* yes shari i could use flexbox here to achieve the same\r\n        effect and stay on your good side just bear with me for\r\n        now ok :)) */}\r\n        <div className=\"row\" sx={photoColumnContainerStyle}>\r\n          {/* We only need one div to be reference div since\r\n          all images are same size anyways. */}\r\n          <div\r\n            className=\"col\"\r\n            ref={referenceDiv}\r\n            sx={{...leftGalleryStyle, ...allGalleryStyle}}\r\n          >\r\n            {/* first column of photos */}\r\n            {getGalleryColumn(leftPhotos, extraPhotoStyle)}\r\n          </div>\r\n          <div className=\"col\" sx={{...centerGalleryStyle, ...allGalleryStyle}}>\r\n            {/* second column of photos */}\r\n            {getGalleryColumn(centerPhotos, extraPhotoStyle)}\r\n          </div>\r\n          <div className=\"col\" sx={{...rightGalleryStyle, ...allGalleryStyle}}>\r\n            {/* you won't believe... third column of photos! */}\r\n            {getGalleryColumn(rightPhotos, extraPhotoStyle)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useContext, ReactElement, useState} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\n\r\nimport {Heading} from '../components/Heading';\r\nimport {TranslucentRectangle} from '../components/TranslucentRectangle';\r\nimport {ScrollToTopButton} from '../components/ScrollToTopButton';\r\n\r\nimport {fadeIn} from '../utils/animation';\r\nimport {theme} from '../utils/theme';\r\nimport {IInfoContext, InfoContext} from '../utils/contexts';\r\nimport {FAQ as FAQInterface} from '../utils/interfaces';\r\n\r\n// Interfaces --\r\nexport interface FAQProp {\r\n  question: string;\r\n  answer: string;\r\n  extraStyling?: SxStyleProp;\r\n}\r\n\r\nexport interface QuestionProp {\r\n  question: string;\r\n  loadHandler: () => void;\r\n  extraStyling?: SxStyleProp;\r\n  imageExtraStyling?: SxStyleProp; // for scaling\r\n}\r\n\r\nexport interface ResponseProp {\r\n  response: string;\r\n  textExtraStyling?: SxStyleProp;\r\n  rectExtraStyling?: SxStyleProp;\r\n}\r\n\r\n//TODO: yes shari i will add padding later\r\n//=====================================================================\r\n// To hold the speech bubble and question\r\nconst QuestionItem: React.FC<QuestionProp> = ({\r\n  question,\r\n  loadHandler,\r\n  extraStyling,\r\n  imageExtraStyling,\r\n}): ReactElement => {\r\n  // Yay more styles!!\r\n  const outerContainerDiv: SxStyleProp = {\r\n    // 'Holds' the inner wrapper, and behaves like a top margin\r\n    width: '100%',\r\n\r\n    ...extraStyling,\r\n  };\r\n  const innerWrapperDiv: SxStyleProp = {\r\n    top: '3.5em',\r\n    maxWidth: '95vw', // to make sure the page doesn't scroll to the right\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n    textAlign: 'center',\r\n\r\n    ...extraStyling,\r\n  };\r\n  const textWrapperDiv: SxStyleProp = {\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n  };\r\n  const titleTextStyle: SxStyleProp = {\r\n    fontSize: theme.fontSizes.body,\r\n    fontFamily: theme.fonts.heading,\r\n    color: theme.colors.text.light,\r\n    wordWrap: 'normal',\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n  };\r\n  const imageStyle = {\r\n    maxWidth: '90vw',\r\n    display: 'inline-block',\r\n    ...imageExtraStyling,\r\n  };\r\n\r\n  return (\r\n    <div sx={outerContainerDiv}>\r\n      <div sx={innerWrapperDiv}>\r\n        <img\r\n          src=\"./assets/speech_bubble.svg\"\r\n          alt=\"\"\r\n          sx={imageStyle}\r\n          onLoad={loadHandler}\r\n        />\r\n        <div sx={textWrapperDiv}>\r\n          <p sx={titleTextStyle}>{question}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//=====================================================================\r\n// ResponseItem holds the response div and rect\r\nconst ResponseItem: React.FC<ResponseProp> = ({\r\n  response,\r\n  textExtraStyling,\r\n  rectExtraStyling,\r\n}): ReactElement => {\r\n  const textWrapperDiv: SxStyleProp = {\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n\r\n    // TODO: mt is based off width which i find extremely stupid so\r\n    // fix this and make it better\r\n    // to push the wrapper down a bit and make description text readable\r\n    mt: ['20%', '15%', '10%'],\r\n    width: '90%',\r\n  };\r\n  const responseTextStyle: SxStyleProp = {\r\n    position: 'relative',\r\n\r\n    color: theme.colors.text.darkSlate,\r\n    fontSize: theme.fontSizes.body,\r\n    fontFamily: theme.fonts.body,\r\n    wordWrap: 'normal',\r\n    lineHeight: 1.6,\r\n  };\r\n  const rectStyling: SxStyleProp = {\r\n    minHeight: ['25vh', '30vh', '40vh'],\r\n\r\n    ...textExtraStyling,\r\n    ...rectExtraStyling,\r\n  };\r\n\r\n  return (\r\n    // yes shari i know the rectangles aren't EXACTLY the way it is on\r\n    // the planning xd but this is good enoughhh. it serves its purpose\r\n    // and i can reuse it!!\r\n    <TranslucentRectangle lengthX=\"60em\" extraStyling={rectStyling}>\r\n      <div sx={textWrapperDiv}>\r\n        <p sx={{...responseTextStyle, ...textExtraStyling}}>{response}</p>\r\n      </div>\r\n    </TranslucentRectangle>\r\n  );\r\n};\r\n\r\n//=====================================================================\r\n\r\ninterface FAQItemProps {\r\n  faqQuestion: FAQInterface;\r\n  questionNumber: number;\r\n}\r\n\r\nconst FAQItem: React.FC<FAQItemProps> = ({\r\n  faqQuestion,\r\n  questionNumber,\r\n}): ReactElement => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  let styling: SxStyleProp;\r\n  let imageStyling: SxStyleProp | undefined;\r\n\r\n  if (questionNumber % 2 === 0) {\r\n    // Left side of the page\r\n    styling = {\r\n      ml: 0,\r\n      mr: 'auto',\r\n      textAlign: 'left',\r\n      left: '5%',\r\n    };\r\n  } else {\r\n    // Right side of the page\r\n    styling = {\r\n      ml: 'auto',\r\n      mr: 0,\r\n      textAlign: 'right',\r\n      right: '5%',\r\n    };\r\n    // For flipping the image\r\n    imageStyling = {transform: 'scaleX(-1)'};\r\n  }\r\n\r\n  // Styling the funky transparent rectangle\r\n  const rectStyling: SxStyleProp = {\r\n    maxWidth: '95vw',\r\n    backgroundColor:\r\n      questionNumber % 3 === 0\r\n        ? theme.colors.background.overlay\r\n        : 'transparent',\r\n  };\r\n  const wrapperDiv = {\r\n    width: '100%',\r\n\r\n    '@keyframes fade-in': fadeIn,\r\n    animation: isLoading ? 'none' : 'fade-in 1s linear',\r\n    display: isLoading ? 'none' : 'block',\r\n  };\r\n\r\n  /**\r\n   * Handles an image's load event by setting isLoading to false.\r\n   */\r\n  const handleLoad = () => {\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <li key={questionNumber} sx={{mb: '-2em'}}>\r\n      <div sx={wrapperDiv}>\r\n        <QuestionItem\r\n          question={faqQuestion.question}\r\n          loadHandler={handleLoad}\r\n          extraStyling={styling}\r\n          imageExtraStyling={imageStyling}\r\n        />\r\n        <ResponseItem\r\n          response={faqQuestion.answer}\r\n          textExtraStyling={styling}\r\n          rectExtraStyling={rectStyling}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\n//=====================================================================\r\n\r\n//=====================================================================\r\n// FAQ -- renders the FAQ page\r\nexport const FAQ: React.FC = (): ReactElement => {\r\n  const faqQuestions: FAQInterface[] = useContext<IInfoContext>(InfoContext)\r\n    .faq;\r\n\r\n  // Custom styles!!! --\r\n  const wrapperStyle: SxStyleProp = {\r\n    // the main page div\r\n\r\n    width: '100%',\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.colors.background.light,\r\n  };\r\n  const innerWrapperStyle: SxStyleProp = {\r\n    // the div that contains everything\r\n\r\n    top: '20vh',\r\n    position: 'relative',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    mb: '14em', // pushing away the footer\r\n  };\r\n  const headingWrapperStyle: SxStyleProp = {\r\n    // the header div\r\n\r\n    left: '5%',\r\n    maxWidth: '90%', // to make sure the page doesn't scroll to the right\r\n    position: 'relative',\r\n  };\r\n\r\n  /**\r\n   * Retrieves and formats all the seperate question answers\r\n   * @param faqQuestions - all questions in the faq.\r\n   * @returns a list of ReactElements with the questions.\r\n   */\r\n  const getFaqItems = (faqQuestions: FAQInterface[]) => {\r\n    if (!faqQuestions) {\r\n      return <div></div>;\r\n    }\r\n\r\n    return faqQuestions.map((question, i) => {\r\n      return <FAQItem faqQuestion={question} questionNumber={i} />;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      {/* initializing scroll to top button */}\r\n      <ScrollToTopButton />\r\n\r\n      {/* the faq */}\r\n      <div sx={innerWrapperStyle}>\r\n        <div sx={headingWrapperStyle}>\r\n          <Heading text=\"FAQ\" alignment=\"left\" />\r\n        </div>\r\n        <div\r\n          sx={{\r\n            flex: 'initial',\r\n          }}\r\n        >\r\n          <ul sx={{listStyleType: 'none', px: 0, py: 0, mx: 0, my: 0}}>\r\n            {/* // Getting the list of question-response stuff */}\r\n            {getFaqItems(faqQuestions)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useState, useRef, useEffect, ReactElement} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {CircleSpinner} from './CircleSpinner';\r\nimport AboutUsSpeechBubble from '../assets/speech bubble.png';\r\nimport AboutUsSpeechBubbleMobile from '../assets/speechBubbleMobile.png';\r\nimport {theme, SECOND_BREAKPOINT} from '../utils/theme';\r\nimport {fadeIn} from '../utils/animation';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\ninterface Props {\r\n  quoteSets: QuoteSet[];\r\n}\r\n\r\nexport interface QuoteSet {\r\n  imageUrl: string;\r\n  quote: string;\r\n  closing: string;\r\n}\r\n\r\nexport interface ShownBubbleProps {\r\n  imageUrl: string;\r\n  quote: string;\r\n  closing: string;\r\n  extraStyling?: SxStyleProp;\r\n  lockImage: () => void;\r\n  unlockImage: () => void;\r\n}\r\n\r\ninterface GrayBubbleProps {\r\n  imageUrl: string;\r\n  size: number | string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst vmax = Math.max(window.innerWidth, window.innerHeight);\r\nconst isSecondBreakpoint = window.innerWidth > SECOND_BREAKPOINT;\r\nconst imgSize = isSecondBreakpoint ? vmax * 0.17 : window.innerWidth * 0.4;\r\n\r\nconst GrayBubble: React.FC<GrayBubbleProps> = ({imageUrl, onClick, size}) => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [sizeInNum, setSizeInNum] = useState<number>(null);\r\n  const sizeRef = useRef<number | string>(size);\r\n  const imgRef = useRef<HTMLImageElement>(null);\r\n  const marginRef = useRef({\r\n    mt: Math.random() * 10 + 1,\r\n    ml: Math.random() * 10 + 1,\r\n    mr: Math.random() * 10 + 1,\r\n    mb: Math.random() * 10 + 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setSizeInNum(imgRef.current.clientHeight);\r\n  }, []);\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    overflow: 'hidden',\r\n    borderRadius: '50%',\r\n    zIndex: 2,\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n    ...marginRef.current,\r\n  };\r\n\r\n  const overlayStyle: SxStyleProp = {\r\n    backgroundColor: theme.colors.imageDarkGrayOverlay,\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n  };\r\n\r\n  const imageStyle: SxStyleProp = {\r\n    objectFit: 'cover',\r\n    width: sizeRef.current,\r\n    height: sizeRef.current,\r\n    transitionDuration: '.2s',\r\n  };\r\n\r\n  /**\r\n   * Determines whether or not to render a loading spinner based on\r\n   * the image's load status.\r\n   * @returns either a loading spinner, or nothing.\r\n   */\r\n  const displayLoadSpinner = (): JSX.Element => {\r\n    const spinnerWrapper: SxStyleProp = {\r\n      position: 'absolute', // don't skew the circles\r\n      width: '100%',\r\n      height: '100%',\r\n\r\n      textAlign: 'center',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    };\r\n    return (\r\n      <div sx={spinnerWrapper}>\r\n        <div sx={{display: 'inline', margin: 'auto'}}>\r\n          <CircleSpinner\r\n            height={sizeInNum}\r\n            width={sizeInNum}\r\n            color={theme.colors.text.light}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle} onClick={onClick}>\r\n      {loading ? displayLoadSpinner() : undefined}\r\n      <img\r\n        src={imageUrl}\r\n        alt=\"\"\r\n        ref={imgRef}\r\n        sx={imageStyle}\r\n        onLoad={() => setLoading(false)}\r\n      />\r\n      <div sx={overlayStyle} />\r\n    </div>\r\n  );\r\n};\r\n\r\n//=====================================================================\r\n\r\nconst ShownBubble: React.FC<ShownBubbleProps> = ({\r\n  imageUrl,\r\n  quote,\r\n  closing,\r\n  extraStyling,\r\n  lockImage,\r\n  unlockImage,\r\n}) => {\r\n  const [bubbleHeight, setBubbleHeight] = useState<number>(null);\r\n  const quoteWrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const ro = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        const {height} = entry.target.getBoundingClientRect();\r\n        console.log(height);\r\n        setBubbleHeight(height);\r\n      });\r\n    });\r\n\r\n    ro.observe(quoteWrapperRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  const imageWrapper: SxStyleProp = {\r\n    borderRadius: '50%',\r\n    overflow: 'hidden',\r\n    display: 'inline-block',\r\n    '&:hover': {\r\n      transform: 'scale(1.15)',\r\n    },\r\n    transition: '.2s',\r\n  };\r\n\r\n  const imageStyle: SxStyleProp = {\r\n    objectFit: 'cover',\r\n    width: imgSize,\r\n    height: imgSize,\r\n    animationName: 'fadeIn',\r\n    '@keyframes fadeIn': fadeIn,\r\n    animationDuration: '.5s',\r\n  };\r\n\r\n  const bubbleAndQuoteWrapperStyle: SxStyleProp = {\r\n    transform: [\r\n      `translate3d(0, -${imgSize * 0.35}px, 0)`,\r\n      `translate3d(0, -${imgSize * 0.2}px, 0)`,\r\n      `translate3d(-${imgSize * 2.25}px, -${imgSize * 0.45}px, 0)`,\r\n    ],\r\n    textAlign: 'center',\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.bodySmall,\r\n    color: theme.colors.text.darkSlate,\r\n    position: 'relative',\r\n    zIndex: 4,\r\n  };\r\n\r\n  const quoteWrapperStyle: SxStyleProp = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    pt: ['3em', '4em'],\r\n    px: ['2em', '4em'],\r\n    pb: '1em',\r\n    justifyContent: 'space-between',\r\n    height: 'fit-content',\r\n    minHeight: ['30vh', '40vh', imgSize * 1.5],\r\n  };\r\n\r\n  const quoteStyle: SxStyleProp = {\r\n    width: '100%',\r\n    lineHeight: '2em',\r\n    order: 0,\r\n  };\r\n\r\n  const closingStyle: SxStyleProp = {\r\n    textAlign: 'right',\r\n    width: '100%',\r\n    px: '4em',\r\n    order: 1,\r\n    mt: ['3em', '3em', 'auto'],\r\n    mb: ['0.5em', '2em', '2em'],\r\n  };\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    // width: ['100%', 'auto'],\r\n  };\r\n\r\n  //speech bubble ratio 1.7:1\r\n  const speechBubbleStyle: SxStyleProp = {\r\n    width: ['100%', '100%', imgSize * 2.5],\r\n    height: bubbleHeight,\r\n  };\r\n\r\n  return (\r\n    <div sx={{...wrapperStyle, ...extraStyling}}>\r\n      <div sx={imageWrapper}>\r\n        <img\r\n          src={imageUrl}\r\n          alt=\"\"\r\n          sx={imageStyle}\r\n          key={imageUrl}\r\n          onMouseOver={lockImage}\r\n          onMouseLeave={unlockImage}\r\n        />\r\n      </div>\r\n      <div sx={bubbleAndQuoteWrapperStyle}>\r\n        <img\r\n          sx={speechBubbleStyle}\r\n          alt=\"\"\r\n          src={\r\n            isSecondBreakpoint ? AboutUsSpeechBubble : AboutUsSpeechBubbleMobile\r\n          }\r\n        />\r\n        <div sx={quoteWrapperStyle} ref={quoteWrapperRef}>\r\n          <p sx={quoteStyle}>{quote}</p>\r\n          <p sx={closingStyle}>{closing}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//======================================================================\r\n\r\nexport const RotatingQuotes: React.FC<Props> = ({\r\n  quoteSets: originalQuoteSets,\r\n}) => {\r\n  const [quoteSets, setQuoteSets] = useState<QuoteSet[]>(originalQuoteSets);\r\n  const timerIds = useRef<number[]>([]);\r\n\r\n  const interval = 5000;\r\n  const intervalAfterLock = interval / 3;\r\n\r\n  useEffect(() => {\r\n    startRotation();\r\n    return clearTimerIds;\r\n  }, []);\r\n\r\n  const clearTimerIds = () => timerIds.current.forEach(window.clearInterval);\r\n\r\n  const startRotation = () => {\r\n    clearTimerIds();\r\n    const id = window.setInterval(() => {\r\n      setQuoteSets((oldSet) => {\r\n        oldSet.unshift(oldSet.pop());\r\n        return [...oldSet];\r\n      });\r\n    }, interval);\r\n    timerIds.current.push(id);\r\n  };\r\n\r\n  const lockImage = () => {\r\n    clearTimerIds();\r\n  };\r\n\r\n  const unlockImage = () => {\r\n    window.setTimeout(() => {\r\n      setQuoteSets((oldSet) => {\r\n        oldSet.unshift(oldSet.pop());\r\n        return [...oldSet];\r\n      });\r\n      startRotation();\r\n    }, intervalAfterLock);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearTimerIds();\r\n    startRotation();\r\n  };\r\n\r\n  const getGrayBubbles = () => {\r\n    const grayBubbles = [];\r\n    for (let i = 1; i < quoteSets.length; i++) {\r\n      grayBubbles.push(\r\n        <GrayBubble\r\n          imageUrl={quoteSets[i].imageUrl}\r\n          onClick={() => {\r\n            setQuoteSets((oldSet) => {\r\n              const clone = [...oldSet];\r\n              [clone[i], clone[0]] = [clone[0], clone[i]];\r\n              return [...clone];\r\n            });\r\n            resetTimer();\r\n          }}\r\n          size={Math.random() * 10 + 7 + 'vmin'}\r\n        />,\r\n      );\r\n    }\r\n\r\n    return grayBubbles;\r\n  };\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    display: 'flex',\r\n    ml: '5%',\r\n    flex: 2,\r\n    flexDirection: ['column', 'column', 'row'],\r\n    textAlign: ['right', 'right', 'left'],\r\n  };\r\n\r\n  const shownBubbleStyle: SxStyleProp = {\r\n    mt: [0, 0, '25vh'],\r\n  };\r\n\r\n  const grayBubbleWrapper: SxStyleProp = {\r\n    position: ['static', 'static', 'absolute'],\r\n    right: 0,\r\n    width: ['100%', '100%', vmax * 0.25],\r\n    textAlign: ['center', 'center', 'left'],\r\n  };\r\n\r\n  //index 0 will always be the main photo\r\n  //the array will loop through pop and unshift\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <ShownBubble\r\n        extraStyling={shownBubbleStyle}\r\n        imageUrl={quoteSets[0].imageUrl}\r\n        quote={quoteSets[0].quote}\r\n        closing={quoteSets[0].closing}\r\n        lockImage={lockImage}\r\n        unlockImage={unlockImage}\r\n      />\r\n      <div sx={grayBubbleWrapper}>{getGrayBubbles()}</div>\r\n    </div>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport React, {useContext, useState, useRef, useEffect} from 'react';\r\nimport {jsx, SxStyleProp} from 'theme-ui';\r\nimport {theme} from '../utils/theme';\r\nimport {RotatingQuotes, ShownBubbleProps, QuoteSet} from '../components/RotatingQuotes';\r\nimport {InfoContext, IInfoContext} from '../utils/contexts';\r\nimport BottomPageDecor from '../assets/BottomPageDecor.svg';\r\nimport {getImageUrl} from '../utils/functions';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nconst Paragraph: React.FC = () => {\r\n  const {aboutStuco} = useContext<IInfoContext>(InfoContext);\r\n\r\n  if (!aboutStuco) {\r\n    return <React.Fragment />;\r\n  }\r\n\r\n  const headingStyle: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    fontSize: theme.fontSizes.heading.primary,\r\n    fontFamily: theme.fonts.heading,\r\n    width: ['100%', '100%', '35vw'],\r\n    lineHeight: '1.3em',\r\n  };\r\n\r\n  const lineStyle: SxStyleProp = {\r\n    backgroundColor: theme.colors.secondary,\r\n    width: ['100%', '100%', '25vw'],\r\n    borderRadius: 2,\r\n    height: '.3em',\r\n    my: '1em',\r\n  };\r\n\r\n  const bodyStyle: SxStyleProp = {\r\n    color: theme.colors.text.light,\r\n    fontFamily: theme.fonts.body,\r\n    fontSize: theme.fontSizes.bodySmall,\r\n    width: ['100%', '100%', '45vw'],\r\n    lineHeight: '2.2em',\r\n  };\r\n\r\n  const wrapperStyle: SxStyleProp = {\r\n    display: 'inline-block',\r\n    mt: ['10vh', '10vh', 0],\r\n    mb: ['5vh', '5vh', 0],\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapperStyle}>\r\n      <div sx={headingStyle}>{aboutStuco[0].stucoTagline}</div>\r\n      <div sx={lineStyle} />\r\n      <div sx={bodyStyle}>{aboutStuco[0].stucoDescription}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//======================================================================\r\n\r\nexport const AboutUs: React.FC = () => {\r\n  const {members} = useContext<IInfoContext>(InfoContext);\r\n  const [height, setHeight] = useState<number>(0);\r\n  const bodyRef = useRef<HTMLDivElement>(null);\r\n  const decorRef = useRef<HTMLDivElement>(null);\r\n\r\n  const translateScale = 0.4;\r\n\r\n  useEffect(() => {\r\n    const ro = new ResizeObserver((entries) => {\r\n      const pageHeight = bodyRef.current.getBoundingClientRect().height;\r\n      const decorHeight = decorRef.current.getBoundingClientRect().height;\r\n      setHeight(pageHeight + decorHeight * (1 - translateScale));\r\n    });\r\n    ro.observe(bodyRef.current);\r\n    ro.observe(decorRef.current);\r\n    return () => ro.disconnect();\r\n  }, []);\r\n\r\n  if (!members) {\r\n    return <React.Fragment />;\r\n  }\r\n\r\n  const wrapper: SxStyleProp = {\r\n    backgroundColor: theme.colors.background.dark,\r\n    minHeight: '100vh',\r\n    height: height === 0 ? undefined : height,\r\n    pb: '20vh',\r\n  };\r\n\r\n  const bodyStyle: SxStyleProp = {\r\n    px: theme.bodyPadding.px,\r\n    pt: '10%',\r\n    display: 'flex',\r\n    flexDirection: ['column', 'column', 'row'],\r\n    flexWrap: 'nowrap',\r\n  };\r\n\r\n  const bottomDecorStyle: SxStyleProp = {\r\n    width: '100%',\r\n    height: '100%',\r\n  };\r\n\r\n  const decorWrapper: SxStyleProp = {\r\n    // position: 'absolute',\r\n    transform: `translateY(-${translateScale * 100}%)`,\r\n  };\r\n\r\n  const getQuoteSet = () => {\r\n    return members.map((member) => {\r\n      const quoteSet: QuoteSet = {\r\n        quote: member.quote,\r\n        closing: member.name + ' - ' + member.position,\r\n        imageUrl: getImageUrl(member.photoId, 400, 400),\r\n      };\r\n      return quoteSet;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div sx={wrapper}>\r\n      <div sx={bodyStyle} ref={bodyRef}>\r\n        <Paragraph />\r\n        <RotatingQuotes quoteSets={getQuoteSet()} />\r\n      </div>\r\n      <div sx={decorWrapper} ref={decorRef}>\r\n        <img src={BottomPageDecor} sx={bottomDecorStyle} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\r\n// import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport {Navigation} from './components/Navigation';\r\nimport {Footer} from './components/Footer';\r\nimport {ScrollToTop} from './components/ScrollToTop';\r\nimport {LoadingScreen} from './components/LoaderComponents';\r\n\r\nimport {useUnmountingDelay} from './utils/hooks';\r\n\r\nimport {Home} from './pages/Home';\r\nimport {Events} from './pages/Events';\r\nimport {Clubs} from './pages/Clubs';\r\nimport {Calendar} from './pages/Calendar';\r\nimport {Map} from './pages/Map';\r\nimport {Gallery} from './pages/Gallery';\r\nimport {FAQ} from './pages/FAQ';\r\nimport {AboutUs} from './pages/AboutUs';\r\n\r\nimport {IInfoContext, InfoContext} from './utils/contexts';\r\n\r\nconst backendUrl =\r\n  'https://us-central1-stuco-website-1596467212841.cloudfunctions.net/getData';\r\n  // const backendUrl = 'http://192.168.1.28:8080';\r\n\r\nconst App: React.FC = () => {\r\n  const [info, setInfo] = useState<IInfoContext | undefined>();\r\n  const [showLoading, setShowLoading] = useState<boolean>(true);\r\n\r\n  /** Speed to unmount the loading screen, in ms. */\r\n  const unmountSpeed = 500;\r\n  const shouldRenderLoading = useUnmountingDelay(showLoading, unmountSpeed);\r\n\r\n  const getData = async () => {\r\n    let data: IInfoContext;\r\n\r\n    try {\r\n      const res = await fetch(backendUrl, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n          accept: 'application/json'\r\n        },\r\n      });\r\n      data = await res.json();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    setInfo(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // Indicate that the load is done\r\n  useEffect(() => {\r\n    if (info) {\r\n      setShowLoading(false);\r\n    }\r\n  }, [info]);\r\n\r\n  if (shouldRenderLoading) {\r\n    return (\r\n      <LoadingScreen isMounted={showLoading} unmountSpeed={unmountSpeed} />\r\n    );\r\n  }\r\n\r\n  console.log(process.env.PUBLIC_URL);\r\n\r\n  return (\r\n    <InfoContext.Provider value={info}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <ScrollToTop />\r\n        <Navigation />\r\n        <Switch>\r\n          <Route path=\"/events\">\r\n            <Events />\r\n          </Route>\r\n          <Route path=\"/clubs\">\r\n            <Clubs />\r\n          </Route>\r\n          <Route path=\"/calendar\">\r\n            <Calendar />\r\n          </Route>\r\n          <Route path=\"/map\">\r\n            <Map />\r\n          </Route>\r\n          <Route path=\"/gallery\">\r\n            <Gallery />\r\n          </Route>\r\n          <Route path=\"/faq\">\r\n            <FAQ />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <AboutUs />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </InfoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Architects Daughter', 'Open Sans:400,600,700', 'Rowdies:300,400']\n  },\n  // inactive: () => console.log('aslkdjflsdjf'),\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}